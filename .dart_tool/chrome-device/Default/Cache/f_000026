define(['dart_sdk', 'packages/http/src/multipart_request.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/syncfusion_flutter_pdf/pdf.dart', 'packages/syncfusion_flutter_pdfviewer/src/bookmark/bookmark_item.dart', 'packages/syncfusion_flutter_core/src/theme/theme_widget.dart', 'packages/syncfusion_flutter_core/src/localizations/global_localizations.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/pdfviewer_helper.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/syncfusion_flutter_pdfviewer/src/bookmark/bookmark_toolbar.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pdfviewer_callback_details.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/enums.dart', 'packages/flutter/src/gestures/team.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/gestures/long_press.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pdftextline.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/widgets/interactive_viewer.dart', 'packages/flutter/src/gestures/scale.dart', 'packages/flutter/src/widgets/form.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/interactive_scrollable.dart', 'packages/flutter/src/material/button_bar.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/material/text_form_field.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/web_helper.dart', 'packages/flutter/src/painting/binding.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/widgets/raw_keyboard_listener.dart', 'packages/flutter/src/services/keyboard_key.dart', 'packages/flutter/src/services/clipboard.dart', 'packages/flutter/src/services/raw_keyboard_windows.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/pdfviewer_plugin.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/async/src/chunked_stream_reader.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/widgets/async.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pagination.dart', 'packages/flutter/src/foundation/observer_list.dart'], (function load__packages__syncfusion_flutter_pdfviewer__src__common__pdf_provider_dart(dart_sdk, packages__http__src__multipart_request$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__services__system_channels$46dart, packages__syncfusion_flutter_pdf__pdf$46dart, packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_item$46dart, packages__syncfusion_flutter_core__src__theme__theme_widget$46dart, packages__syncfusion_flutter_core__src__localizations__global_localizations$46dart, packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_helper$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__alignment$46dart, packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_toolbar$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__rendering__layer$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pdfviewer_callback_details$46dart, packages__syncfusion_flutter_pdfviewer__src__control__enums$46dart, packages__flutter__src__gestures__team$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__gestures__long_press$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pdftextline$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__widgets__interactive_viewer$46dart, packages__flutter__src__gestures__scale$46dart, packages__flutter__src__widgets__form$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__syncfusion_flutter_pdfviewer__src__control__interactive_scrollable$46dart, packages__flutter__src__material__button_bar$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__material__text_form_field$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__syncfusion_flutter_pdfviewer__src__common__web_helper$46dart, packages__flutter__src__painting__binding$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__widgets__raw_keyboard_listener$46dart, packages__flutter__src__services__keyboard_key$46dart, packages__flutter__src__services__clipboard$46dart, packages__flutter__src__services__raw_keyboard_windows$46dart, packages__flutter__src__painting__box_border$46dart, packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_plugin$46dart, packages__flutter__src__foundation__collections$46dart, packages__async__src__chunked_stream_reader$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__widgets__async$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pagination$46dart, packages__flutter__src__foundation__observer_list$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const io = dart_sdk.io;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const http = packages__http__src__multipart_request$46dart.http;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const visibility = packages__flutter__src__widgets__widget_span$46dart.src__widgets__visibility;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const image = packages__flutter__src__widgets__widget_span$46dart.src__widgets__image;
  const page_storage = packages__flutter__src__widgets__widget_span$46dart.src__widgets__page_storage;
  const asset_bundle = packages__flutter__src__services__system_channels$46dart.src__services__asset_bundle;
  const pdf = packages__syncfusion_flutter_pdf__pdf$46dart.pdf;
  const bookmark_item = packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_item$46dart.src__bookmark__bookmark_item;
  const pdfviewer_theme = packages__syncfusion_flutter_core__src__theme__theme_widget$46dart.src__theme__pdfviewer_theme;
  const global_localizations = packages__syncfusion_flutter_core__src__localizations__global_localizations$46dart.src__localizations__global_localizations;
  const pdfviewer_helper = packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_helper$46dart.src__common__pdfviewer_helper;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const bookmark_toolbar = packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_toolbar$46dart.src__bookmark__bookmark_toolbar;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const pdfviewer_callback_details = packages__syncfusion_flutter_pdfviewer__src__control__pdfviewer_callback_details$46dart.src__control__pdfviewer_callback_details;
  const enums = packages__syncfusion_flutter_pdfviewer__src__control__enums$46dart.src__control__enums;
  const team$ = packages__flutter__src__gestures__team$46dart.src__gestures__team;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const long_press = packages__flutter__src__gestures__long_press$46dart.src__gestures__long_press;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const text_selection_theme = packages__flutter__src__material__icon_button$46dart.src__material__text_selection_theme;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const text_button = packages__flutter__src__material__icon_button$46dart.src__material__text_button;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const theme$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const pdftextline = packages__syncfusion_flutter_pdfviewer__src__control__pdftextline$46dart.src__control__pdftextline;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const interactive_viewer = packages__flutter__src__widgets__interactive_viewer$46dart.src__widgets__interactive_viewer;
  const scale = packages__flutter__src__gestures__scale$46dart.src__gestures__scale;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const interactive_scrollable = packages__syncfusion_flutter_pdfviewer__src__control__interactive_scrollable$46dart.src__control__interactive_scrollable;
  const dialog = packages__flutter__src__material__button_bar$46dart.src__material__dialog;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const text_form_field = packages__flutter__src__material__text_form_field$46dart.src__material__text_form_field;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const web_helper = packages__syncfusion_flutter_pdfviewer__src__common__web_helper$46dart.src__common__web_helper;
  const binding$ = packages__flutter__src__painting__binding$46dart.src__painting__binding;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const raw_keyboard_listener = packages__flutter__src__widgets__raw_keyboard_listener$46dart.src__widgets__raw_keyboard_listener;
  const keyboard_key = packages__flutter__src__services__keyboard_key$46dart.src__services__keyboard_key;
  const clipboard = packages__flutter__src__services__clipboard$46dart.src__services__clipboard;
  const raw_keyboard = packages__flutter__src__services__raw_keyboard_windows$46dart.src__services__raw_keyboard;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const pdfviewer_plugin = packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_plugin$46dart.src__common__pdfviewer_plugin;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const cancelable_operation = packages__async__src__chunked_stream_reader$46dart.src__cancelable_operation;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const pagination = packages__syncfusion_flutter_pdfviewer__src__control__pagination$46dart.src__control__pagination;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  var pdf_provider = Object.create(dart.library);
  var bookmark_view = Object.create(dart.library);
  var pdfviewer_canvas = Object.create(dart.library);
  var scroll_status = Object.create(dart.library);
  var scroll_head = Object.create(dart.library);
  var scroll_head_overlay = Object.create(dart.library);
  var pdf_scrollable = Object.create(dart.library);
  var pdf_page_view = Object.create(dart.library);
  var pdfviewer = Object.create(dart.library);
  var pdfviewer$ = Object.create(dart.library);
  var $isNotEmpty = dartx.isNotEmpty;
  var $toString = dartx.toString;
  var $buffer = dartx.buffer;
  var $asUint8List = dartx.asUint8List;
  var $clear = dartx.clear;
  var $add = dartx.add;
  var $_get = dartx._get;
  var $isNegative = dartx.isNegative;
  var $abs = dartx.abs;
  var $length = dartx.length;
  var $first = dartx.first;
  var $last = dartx.last;
  var $_set = dartx._set;
  var $_equals = dartx._equals;
  var $floor = dartx.floor;
  var $clamp = dartx.clamp;
  var $round = dartx.round;
  var $runtimeType = dartx.runtimeType;
  var $insert = dartx.insert;
  var $contains = dartx.contains;
  var $containsKey = dartx.containsKey;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    FutureOfUint8List: () => (T.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    JSArrayOfBookmarkItem: () => (T.JSArrayOfBookmarkItem = dart.constFn(_interceptors.JSArray$(bookmark_item.BookmarkItem)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    FutureOfbool: () => (T.FutureOfbool = dart.constFn(async.Future$(core.bool)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    BuildContextAndintToBookmarkItem: () => (T.BuildContextAndintToBookmarkItem = dart.constFn(dart.fnType(bookmark_item.BookmarkItem, [framework.BuildContext, core.int])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    VoidToFutureOfNull: () => (T.VoidToFutureOfNull = dart.constFn(dart.fnType(T.FutureOfNull(), [])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    StateOfStatefulWidget: () => (T.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T.StateOfStatefulWidget())))(),
    DurationTovoid: () => (T.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    PointerSignalEventTovoid: () => (T.PointerSignalEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerSignalEvent])))(),
    PointerDownEventTovoid: () => (T.PointerDownEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerDownEvent])))(),
    RawKeyEventTovoid: () => (T.RawKeyEventTovoid = dart.constFn(dart.fnType(dart.void, [raw_keyboard.RawKeyEvent])))(),
    PointerHoverEventTovoid: () => (T.PointerHoverEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerHoverEvent])))(),
    IdentityMapOfint$PdfPageInfo: () => (T.IdentityMapOfint$PdfPageInfo = dart.constFn(_js_helper.IdentityMap$(core.int, pdf_page_view.PdfPageInfo)))(),
    GlobalKeyOfBookmarkViewControllerState: () => (T.GlobalKeyOfBookmarkViewControllerState = dart.constFn(framework.GlobalKey$(bookmark_view.BookmarkViewControllerState)))(),
    GlobalKeyOfPdfScrollableState: () => (T.GlobalKeyOfPdfScrollableState = dart.constFn(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)))(),
    GlobalKeyOfPdfPageViewState: () => (T.GlobalKeyOfPdfPageViewState = dart.constFn(framework.GlobalKey$(pdf_page_view.PdfPageViewState)))(),
    IdentityMapOfint$GlobalKeyOfPdfPageViewState: () => (T.IdentityMapOfint$GlobalKeyOfPdfPageViewState = dart.constFn(_js_helper.IdentityMap$(core.int, T.GlobalKeyOfPdfPageViewState())))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    CancelableOperationOfUint8List: () => (T.CancelableOperationOfUint8List = dart.constFn(cancelable_operation.CancelableOperation$(typed_data.Uint8List)))(),
    PdfDocumentN: () => (T.PdfDocumentN = dart.constFn(dart.nullable(pdf.PdfDocument)))(),
    CancelableOperationOfPdfDocumentN: () => (T.CancelableOperationOfPdfDocumentN = dart.constFn(cancelable_operation.CancelableOperation$(T.PdfDocumentN())))(),
    ListN: () => (T.ListN = dart.constFn(dart.nullable(core.List)))(),
    CancelableOperationOfListN: () => (T.CancelableOperationOfListN = dart.constFn(cancelable_operation.CancelableOperation$(T.ListN())))(),
    AlwaysStoppedAnimationOfColor: () => (T.AlwaysStoppedAnimationOfColor = dart.constFn(animations.AlwaysStoppedAnimation$(ui.Color)))(),
    MapOfint$List: () => (T.MapOfint$List = dart.constFn(core.Map$(core.int, core.List)))(),
    MapNOfint$List: () => (T.MapNOfint$List = dart.constFn(dart.nullable(T.MapOfint$List())))(),
    FutureBuilderOfMapNOfint$List: () => (T.FutureBuilderOfMapNOfint$List = dart.constFn(async$.FutureBuilder$(T.MapNOfint$List())))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    Uint8ListN: () => (T.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    intToWidget: () => (T.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    BuildContextAndAsyncSnapshotToWidget: () => (T.BuildContextAndAsyncSnapshotToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot])))(),
    JSArrayOfPdfTextLine: () => (T.JSArrayOfPdfTextLine = dart.constFn(_interceptors.JSArray$(pdftextline.PdfTextLine)))(),
    MapNOfint$ListToMapNOfint$List: () => (T.MapNOfint$ListToMapNOfint$List = dart.constFn(dart.fnType(T.MapNOfint$List(), [T.MapNOfint$List()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    __Tovoid: () => (T.__Tovoid = dart.constFn(dart.fnType(dart.void, [], {property: T.StringN()}, {})))(),
    ObserverListOf__Tovoid: () => (T.ObserverListOf__Tovoid = dart.constFn(observer_list.ObserverList$(T.__Tovoid())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBackIconVisible",
        [_Location_column]: 9,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textPosition",
        [_Location_column]: 9,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onBackPressed",
        [_Location_column]: 9,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 9,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNavigate",
        [_Location_column]: 9,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBorderEnabled",
        [_Location_column]: 9,
        [_Location_line]: 164,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExpandPressed",
        [_Location_column]: 9,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9], widget_inspector._Location);
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 154,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 9,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isExpandIconVisible",
        [_Location_column]: 9,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNavigate",
        [_Location_column]: 9,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExpandPressed",
        [_Location_column]: 9,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onBackPressed",
        [_Location_column]: 9,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17], widget_inspector._Location);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 171,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 211,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.constList([C[20] || CT.C20], widget_inspector._Location);
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[19] || CT.C19,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 210,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.constList([C[23] || CT.C23, C[24] || CT.C24], widget_inspector._Location);
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[22] || CT.C22,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 208,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 11,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.constList([C[27] || CT.C27, C[28] || CT.C28], widget_inspector._Location);
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[26] || CT.C26,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 206,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCloseButtonPressed",
        [_Location_column]: 31,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.constList([C[31] || CT.C31], widget_inspector._Location);
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[30] || CT.C30,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 221,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemCount",
        [_Location_column]: 25,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 25,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34, C[35] || CT.C35], widget_inspector._Location);
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 224,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 43,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 27,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.constList([C[38] || CT.C38, C[39] || CT.C39], widget_inspector._Location);
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[37] || CT.C37,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 231,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.constList([C[42] || CT.C42], widget_inspector._Location);
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[41] || CT.C41,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 230,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.constList([C[45] || CT.C45], widget_inspector._Location);
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[44] || CT.C44,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 222,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 27,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.constList([C[48] || CT.C48], widget_inspector._Location);
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[47] || CT.C47,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 220,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.constList([C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53], widget_inspector._Location);
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[50] || CT.C50,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 217,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.constList([C[56] || CT.C56, C[57] || CT.C57], widget_inspector._Location);
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[55] || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 20,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.constList([C[60] || CT.C60], widget_inspector._Location);
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[59] || CT.C59,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 205,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 7,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.constList([C[63] || CT.C63, C[64] || CT.C64], widget_inspector._Location);
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[62] || CT.C62,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 203,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 10,
        [Radius_x]: 10
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 1,
        [Radius_x]: 1
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.android",
        index: 0
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3219451636.0
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 6,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 6,
        [EdgeInsets_left]: 16
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 16,
        [Radius_x]: 16
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[77] || CT.C77,
        [BorderRadius_bottomLeft]: C[77] || CT.C77,
        [BorderRadius_topRight]: C[77] || CT.C77,
        [BorderRadius_topLeft]: C[77] || CT.C77
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 141,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 17,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.constList([C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82], widget_inspector._Location);
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[79] || CT.C79,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 63,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 52,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 54,
        [_Location_file]: null
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.constList([C[85] || CT.C85, C[86] || CT.C86, C[87] || CT.C87, C[88] || CT.C88], widget_inspector._Location);
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[84] || CT.C84,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 51,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 11,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 11,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 50,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.constList([C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93], widget_inspector._Location);
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[90] || CT.C90,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 47,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.constList([C[96] || CT.C96, C[97] || CT.C97], widget_inspector._Location);
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[95] || CT.C95,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 45,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 44,
        [_Location_file]: null
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.constList([C[100] || CT.C100, C[101] || CT.C101], widget_inspector._Location);
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[99] || CT.C99,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 43,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 7,
        [Radius_x]: 7
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[103] || CT.C103,
        [BorderRadius_bottomLeft]: C[103] || CT.C103,
        [BorderRadius_topRight]: C[103] || CT.C103,
        [BorderRadius_topLeft]: C[103] || CT.C103
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 54,
        [OffsetBase__dx]: 10
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 13,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C106() {
      return C[106] = dart.constList([C[107] || CT.C107], widget_inspector._Location);
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[106] || CT.C106,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 59,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 11,
        [_Location_line]: 58,
        [_Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 59,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.constList([C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112], widget_inspector._Location);
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[109] || CT.C109,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 56,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 54,
        [_Location_file]: null
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C114() {
      return C[114] = dart.constList([C[115] || CT.C115, C[116] || CT.C116, C[117] || CT.C117], widget_inspector._Location);
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[114] || CT.C114,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 53,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 587202560
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 2,
        [Shadow_offset]: C[120] || CT.C120,
        [Shadow_color]: C[121] || CT.C121,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 2,
        [OffsetBase__dx]: 0
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 503316480
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 2,
        [Shadow_offset]: C[123] || CT.C123,
        [Shadow_color]: C[124] || CT.C124,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 855638016
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 3,
        [Shadow_offset]: C[126] || CT.C126,
        [Shadow_color]: C[127] || CT.C127,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C118() {
      return C[118] = dart.constList([C[119] || CT.C119, C[122] || CT.C122, C[125] || CT.C125], box_shadow.BoxShadow);
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 32,
        [Radius_x]: 32
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[129] || CT.C129,
        [BorderRadius_bottomLeft]: C[130] || CT.C130,
        [BorderRadius_topRight]: C[129] || CT.C129,
        [BorderRadius_topLeft]: C[130] || CT.C130
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 32,
        [BoxConstraints_minHeight]: 32,
        [BoxConstraints_maxWidth]: 32,
        [BoxConstraints_minWidth]: 32
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C133() {
      return C[133] = dart.constList([C[134] || CT.C134, C[135] || CT.C135], widget_inspector._Location);
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[133] || CT.C133,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 93,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 13,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C137() {
      return C[137] = dart.constList([C[138] || CT.C138, C[139] || CT.C139], widget_inspector._Location);
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[137] || CT.C137,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 88,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 59,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C141() {
      return C[141] = dart.constList([C[142] || CT.C142, C[143] || CT.C143], widget_inspector._Location);
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[141] || CT.C141,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 110,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C145() {
      return C[145] = dart.constList([C[146] || CT.C146, C[147] || CT.C147], widget_inspector._Location);
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[145] || CT.C145,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 108,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.constList([C[150] || CT.C150], widget_inspector._Location);
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[149] || CT.C149,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 107,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C152() {
      return C[152] = dart.constList([C[153] || CT.C153], widget_inspector._Location);
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[152] || CT.C152,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 86,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 85,
        [_Location_file]: null
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.constList([C[156] || CT.C156, C[157] || CT.C157], widget_inspector._Location);
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[155] || CT.C155,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 84,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 18,
        [_Location_line]: 237,
        [_Location_file]: null
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 11,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 11,
        [_Location_line]: 239,
        [_Location_file]: null
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformationController",
        [_Location_column]: 11,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 11,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "panEnabled",
        [_Location_column]: 11,
        [_Location_line]: 248,
        [_Location_file]: null
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionStart",
        [_Location_column]: 11,
        [_Location_line]: 249,
        [_Location_file]: null
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionUpdate",
        [_Location_column]: 11,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionEnd",
        [_Location_column]: 11,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constrained",
        [_Location_column]: 11,
        [_Location_line]: 252,
        [_Location_file]: null
      });
    },
    get C159() {
      return C[159] = dart.constList([C[160] || CT.C160, C[161] || CT.C161, C[162] || CT.C162, C[163] || CT.C163, C[164] || CT.C164, C[165] || CT.C165, C[166] || CT.C166, C[167] || CT.C167, C[168] || CT.C168, C[169] || CT.C169, C[170] || CT.C170], widget_inspector._Location);
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[159] || CT.C159,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 236,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapDown",
        [_Location_column]: 9,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 9,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 236,
        [_Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.constList([C[173] || CT.C173, C[174] || CT.C174, C[175] || CT.C175, C[176] || CT.C176], widget_inspector._Location);
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[172] || CT.C172,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 218,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollHeadOffset",
        [_Location_column]: 35,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 61,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 28,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C178() {
      return C[178] = dart.constList([C[179] || CT.C179, C[180] || CT.C180, C[181] || CT.C181], widget_inspector._Location);
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[178] || CT.C178,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 280,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 17,
        [_Location_line]: 276,
        [_Location_file]: null
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C183() {
      return C[183] = dart.constList([C[184] || CT.C184, C[185] || CT.C185], widget_inspector._Location);
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[183] || CT.C183,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 275,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragStart",
        [_Location_column]: 13,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 13,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 13,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C187() {
      return C[187] = dart.constList([C[188] || CT.C188, C[189] || CT.C189, C[190] || CT.C190, C[191] || CT.C191, C[192] || CT.C192], widget_inspector._Location);
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[187] || CT.C187,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 260,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C194() {
      return C[194] = dart.constList([C[195] || CT.C195, C[196] || CT.C196], widget_inspector._Location);
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[194] || CT.C194,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 258,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 40,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C198() {
      return C[198] = dart.constList([C[199] || CT.C199], widget_inspector._Location);
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[198] || CT.C198,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 286,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 13,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C201() {
      return C[201] = dart.constList([C[202] || CT.C202, C[203] || CT.C203], widget_inspector._Location);
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[201] || CT.C201,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 284,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C205() {
      return C[205] = dart.constList([C[206] || CT.C206], widget_inspector._Location);
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[205] || CT.C205,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 255,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 24
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 4,
        [EdgeInsets_right]: 4,
        [EdgeInsets_top]: 4,
        [EdgeInsets_left]: 4
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 316,
        [_Location_file]: null
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 317,
        [_Location_file]: null
      });
    },
    get C213() {
      return C[213] = dart.constList([C[214] || CT.C214, C[215] || CT.C215], widget_inspector._Location);
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[213] || CT.C213,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 315,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_name$]: "BorderStyle.none",
        index: 0
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_style]: C[218] || CT.C218,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[219] || CT.C219
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[221] || CT.C221,
        [BorderRadius_bottomLeft]: C[221] || CT.C221,
        [BorderRadius_topRight]: C[221] || CT.C221,
        [BorderRadius_topLeft]: C[221] || CT.C221
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C[217] || CT.C217,
        [RoundedRectangleBorder_borderRadius]: C[220] || CT.C220
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 44,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C223() {
      return C[223] = dart.constList([C[224] || CT.C224], widget_inspector._Location);
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[223] || CT.C223,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 321,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.constList([C[227] || CT.C227, C[228] || CT.C228], widget_inspector._Location);
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[226] || CT.C226,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 328,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 324,
        [_Location_file]: null
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.constList([C[231] || CT.C231, C[232] || CT.C232], widget_inspector._Location);
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[230] || CT.C230,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 323,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 345,
        [_Location_file]: null
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 346,
        [_Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.constList([C[235] || CT.C235, C[236] || CT.C236], widget_inspector._Location);
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[234] || CT.C234,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 344,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 341,
        [_Location_file]: null
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 344,
        [_Location_file]: null
      });
    },
    get C238() {
      return C[238] = dart.constList([C[239] || CT.C239, C[240] || CT.C240], widget_inspector._Location);
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[238] || CT.C238,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 340,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollable",
        [_Location_column]: 13,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "insetPadding",
        [_Location_column]: 13,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 13,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buttonPadding",
        [_Location_column]: 13,
        [_Location_line]: 310,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 313,
        [_Location_file]: null
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 13,
        [_Location_line]: 315,
        [_Location_file]: null
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 13,
        [_Location_line]: 319,
        [_Location_file]: null
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 13,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 13,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C242() {
      return C[242] = dart.constList([C[243] || CT.C243, C[244] || CT.C244, C[245] || CT.C245, C[246] || CT.C246, C[247] || CT.C247, C[248] || CT.C248, C[249] || CT.C249, C[250] || CT.C250, C[251] || CT.C251], widget_inspector._Location);
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[242] || CT.C242,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 304,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 6,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 6,
        [EdgeInsets_left]: 0
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 366,
        [_Location_file]: null
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 367,
        [_Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 368,
        [_Location_file]: null
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 11,
        [_Location_line]: 383,
        [_Location_file]: null
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 11,
        [_Location_line]: 384,
        [_Location_file]: null
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEditingComplete",
        [_Location_column]: 11,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFieldSubmitted",
        [_Location_column]: 11,
        [_Location_line]: 388,
        [_Location_file]: null
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "validator",
        [_Location_column]: 11,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C254() {
      return C[254] = dart.constList([C[255] || CT.C255, C[256] || CT.C256, C[257] || CT.C257, C[258] || CT.C258, C[259] || CT.C259, C[260] || CT.C260, C[261] || CT.C261, C[262] || CT.C262, C[263] || CT.C263, C[264] || CT.C264], widget_inspector._Location);
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[254] || CT.C254,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 365,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 364,
        [_Location_file]: null
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 365,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.constList([C[267] || CT.C267, C[268] || CT.C268], widget_inspector._Location);
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[266] || CT.C266,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 363,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 362,
        [_Location_file]: null
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 363,
        [_Location_file]: null
      });
    },
    get C270() {
      return C[270] = dart.constList([C[271] || CT.C271, C[272] || CT.C272], widget_inspector._Location);
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[270] || CT.C270,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 361,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowPaginationDialog",
        [_Location_column]: 14,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollStatus",
        [_Location_column]: 14,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollHead",
        [_Location_column]: 14,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 14,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 14,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDimension",
        [_Location_column]: 14,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportDimension",
        [_Location_column]: 14,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentOffset",
        [_Location_column]: 7,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 14,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 14,
        [_Location_line]: 161,
        [_Location_file]: null
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapZoomInvoked",
        [_Location_column]: 7,
        [_Location_line]: 162,
        [_Location_file]: null
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forcePixel",
        [_Location_column]: 7,
        [_Location_line]: 163,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 14,
        [_Location_line]: 164,
        [_Location_file]: null
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 14,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 14,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 14,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxPdfPageWidth",
        [_Location_column]: 14,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 14,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isPanEnabled",
        [_Location_column]: 7,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionStart",
        [_Location_column]: 7,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionUpdate",
        [_Location_column]: 7,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionEnd",
        [_Location_column]: 7,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformationController",
        [_Location_column]: 7,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfOffsetChanged",
        [_Location_column]: 7,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C274() {
      return C[274] = dart.constList([C[275] || CT.C275, C[276] || CT.C276, C[277] || CT.C277, C[278] || CT.C278, C[279] || CT.C279, C[280] || CT.C280, C[281] || CT.C281, C[282] || CT.C282, C[283] || CT.C283, C[284] || CT.C284, C[285] || CT.C285, C[286] || CT.C286, C[287] || CT.C287, C[288] || CT.C288, C[289] || CT.C289, C[290] || CT.C290, C[291] || CT.C291, C[292] || CT.C292, C[293] || CT.C293, C[294] || CT.C294, C[295] || CT.C295, C[296] || CT.C296, C[297] || CT.C297, C[298] || CT.C298], widget_inspector._Location);
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[274] || CT.C274,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 151,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_scrollable.dart"
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bytes",
        [_Location_column]: 44,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 17,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 17,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C300() {
      return C[300] = dart.constList([C[301] || CT.C301, C[302] || CT.C302, C[303] || CT.C303, C[304] || CT.C304, C[305] || CT.C305], widget_inspector._Location);
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[300] || CT.C300,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C307() {
      return C[307] = dart.constList([C[308] || CT.C308, C[309] || CT.C309], widget_inspector._Location);
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[307] || CT.C307,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 220,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C311() {
      return C[311] = dart.constList([C[312] || CT.C312], widget_inspector._Location);
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[311] || CT.C311,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 214,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C314() {
      return C[314] = dart.constList([C[315] || CT.C315, C[316] || CT.C316, C[317] || CT.C317], widget_inspector._Location);
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[314] || CT.C314,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 211,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C319() {
      return C[319] = dart.constList([C[320] || CT.C320, C[321] || CT.C321, C[322] || CT.C322, C[323] || CT.C323, C[324] || CT.C324], widget_inspector._Location);
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[319] || CT.C319,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 226,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 235,
        [_Location_file]: null
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 236,
        [_Location_file]: null
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 237,
        [_Location_file]: null
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C326() {
      return C[326] = dart.constList([C[327] || CT.C327, C[328] || CT.C328, C[329] || CT.C329, C[330] || CT.C330, C[331] || CT.C331], widget_inspector._Location);
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[326] || CT.C326,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 233,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 245,
        [_Location_file]: null
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 20,
        [_Location_line]: 246,
        [_Location_file]: null
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 20,
        [_Location_line]: 247,
        [_Location_file]: null
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 20,
        [_Location_line]: 248,
        [_Location_file]: null
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageIndex",
        [_Location_column]: 20,
        [_Location_line]: 249,
        [_Location_file]: null
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 20,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 20,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 20,
        [_Location_line]: 252,
        [_Location_file]: null
      });
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDocumentLinkNavigation",
        [_Location_column]: 20,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableTextSelection",
        [_Location_column]: 20,
        [_Location_line]: 254,
        [_Location_file]: null
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionChanged",
        [_Location_column]: 20,
        [_Location_line]: 255,
        [_Location_file]: null
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragStarted",
        [_Location_column]: 20,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragEnded",
        [_Location_column]: 20,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDocumentLinkNavigationInvoked",
        [_Location_column]: 20,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCollection",
        [_Location_column]: 20,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "searchTextHighlightColor",
        [_Location_column]: 20,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfTextSearchResult",
        [_Location_column]: 20,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 20,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfScrollableStateKey",
        [_Location_column]: 20,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportGlobalRect",
        [_Location_column]: 20,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C333() {
      return C[333] = dart.constList([C[334] || CT.C334, C[335] || CT.C335, C[336] || CT.C336, C[337] || CT.C337, C[338] || CT.C338, C[339] || CT.C339, C[340] || CT.C340, C[341] || CT.C341, C[342] || CT.C342, C[343] || CT.C343, C[344] || CT.C344, C[345] || CT.C345, C[346] || CT.C346, C[347] || CT.C347, C[348] || CT.C348, C[349] || CT.C349, C[350] || CT.C350, C[351] || CT.C351, C[352] || CT.C352, C[353] || CT.C353], widget_inspector._Location);
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[333] || CT.C333,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 244,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 244,
        [_Location_file]: null
      });
    },
    get C355() {
      return C[355] = dart.constList([C[356] || CT.C356, C[357] || CT.C357, C[358] || CT.C358, C[359] || CT.C359], widget_inspector._Location);
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[355] || CT.C355,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 240,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 19,
        [_Location_line]: 376,
        [_Location_file]: null
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 19,
        [_Location_line]: 377,
        [_Location_file]: null
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C361() {
      return C[361] = dart.constList([C[362] || CT.C362, C[363] || CT.C363, C[364] || CT.C364], widget_inspector._Location);
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[361] || CT.C361,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 375,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 17,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 17,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onKey",
        [_Location_column]: 17,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 375,
        [_Location_file]: null
      });
    },
    get C366() {
      return C[366] = dart.constList([C[367] || CT.C367, C[368] || CT.C368, C[369] || CT.C369, C[370] || CT.C370], widget_inspector._Location);
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[366] || CT.C366,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 292,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 15,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 15,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C372() {
      return C[372] = dart.constList([C[373] || CT.C373, C[374] || CT.C374, C[375] || CT.C375], widget_inspector._Location);
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[372] || CT.C372,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 269,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 19,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 19,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 19,
        [_Location_line]: 439,
        [_Location_file]: null
      });
    },
    get C377() {
      return C[377] = dart.constList([C[378] || CT.C378, C[379] || CT.C379, C[380] || CT.C380], widget_inspector._Location);
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[377] || CT.C377,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 436,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 17,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 17,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 436,
        [_Location_file]: null
      });
    },
    get C382() {
      return C[382] = dart.constList([C[383] || CT.C383, C[384] || CT.C384, C[385] || CT.C385], widget_inspector._Location);
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[382] || CT.C382,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 433,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 15,
        [_Location_line]: 423,
        [_Location_file]: null
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 15,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C387() {
      return C[387] = dart.constList([C[388] || CT.C388, C[389] || CT.C389, C[390] || CT.C390], widget_inspector._Location);
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[387] || CT.C387,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 422,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C392() {
      return C[392] = dart.constList([C[393] || CT.C393, C[394] || CT.C394, C[395] || CT.C395], widget_inspector._Location);
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[392] || CT.C392,
        [_Location_name]: null,
        [_Location_column]: 43,
        [_Location_line]: 473,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 23,
        [_Location_line]: 482,
        [_Location_file]: null
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 55,
        [_Location_line]: 482,
        [_Location_file]: null
      });
    },
    get C397() {
      return C[397] = dart.constList([C[398] || CT.C398, C[399] || CT.C399], widget_inspector._Location);
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[397] || CT.C397,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 482,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C401() {
      return C[401] = dart.constList([C[402] || CT.C402], widget_inspector._Location);
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[401] || CT.C401,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 479,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 20,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 52,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C404() {
      return C[404] = dart.constList([C[405] || CT.C405, C[406] || CT.C406], widget_inspector._Location);
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[404] || CT.C404,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 488,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundDecoration",
        [_Location_column]: 9,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C408() {
      return C[408] = dart.constList([C[409] || CT.C409, C[410] || CT.C410, C[411] || CT.C411, C[412] || CT.C412, C[413] || CT.C413], widget_inspector._Location);
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[408] || CT.C408,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 490,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 515,
        [_Location_file]: null
      });
    },
    get C415() {
      return C[415] = dart.constList([C[416] || CT.C416, C[417] || CT.C417, C[418] || CT.C418, C[419] || CT.C419], widget_inspector._Location);
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[415] || CT.C415,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 510,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 11,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C421() {
      return C[421] = dart.constList([C[422] || CT.C422, C[423] || CT.C423, C[424] || CT.C424], widget_inspector._Location);
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[421] || CT.C421,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 507,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: enums.PdfInteractionMode.prototype,
        [_name$0]: "PdfInteractionMode.selection",
        index: 0
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293225984.0
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 1011,
        [_Location_file]: null
      });
    },
    get C428() {
      return C[428] = dart.constList([C[429] || CT.C429], widget_inspector._Location);
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[428] || CT.C428,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 1010,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 11,
        [_Location_line]: 1017,
        [_Location_file]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 11,
        [_Location_line]: 1020,
        [_Location_file]: null
      });
    },
    get C431() {
      return C[431] = dart.constList([C[432] || CT.C432, C[433] || CT.C433], widget_inspector._Location);
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[431] || CT.C431,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 1016,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1014,
        [_Location_file]: null
      });
    },
    get C435() {
      return C[435] = dart.constList([C[436] || CT.C436], widget_inspector._Location);
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[435] || CT.C435,
        [_Location_name]: null,
        [_Location_column]: 43,
        [_Location_line]: 1013,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 54,
        [_Location_line]: 1117,
        [_Location_file]: null
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "imageStream",
        [_Location_column]: 41,
        [_Location_line]: 1118,
        [_Location_file]: null
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportGlobalRect",
        [_Location_column]: 31,
        [_Location_line]: 1119,
        [_Location_file]: null
      });
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "parentViewport",
        [_Location_column]: 31,
        [_Location_line]: 1120,
        [_Location_file]: null
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 38,
        [_Location_line]: 1121,
        [_Location_file]: null
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 35,
        [_Location_line]: 1123,
        [_Location_file]: null
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 35,
        [_Location_line]: 1126,
        [_Location_file]: null
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageSpacing",
        [_Location_column]: 38,
        [_Location_line]: 1128,
        [_Location_file]: null
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 31,
        [_Location_line]: 1129,
        [_Location_file]: null
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 31,
        [_Location_line]: 1130,
        [_Location_file]: null
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageIndex",
        [_Location_column]: 31,
        [_Location_line]: 1131,
        [_Location_file]: null
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 31,
        [_Location_line]: 1132,
        [_Location_file]: null
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDocumentLinkAnnotation",
        [_Location_column]: 38,
        [_Location_line]: 1133,
        [_Location_file]: null
      });
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableTextSelection",
        [_Location_column]: 38,
        [_Location_line]: 1134,
        [_Location_file]: null
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionChanged",
        [_Location_column]: 38,
        [_Location_line]: 1135,
        [_Location_file]: null
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragStarted",
        [_Location_column]: 31,
        [_Location_line]: 1136,
        [_Location_file]: null
      });
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragEnded",
        [_Location_column]: 31,
        [_Location_line]: 1137,
        [_Location_file]: null
      });
    },
    get C456() {
      return C[456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDocumentLinkNavigationInvoked",
        [_Location_column]: 31,
        [_Location_line]: 1138,
        [_Location_file]: null
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "searchTextHighlightColor",
        [_Location_column]: 38,
        [_Location_line]: 1139,
        [_Location_file]: null
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCollection",
        [_Location_column]: 31,
        [_Location_line]: 1140,
        [_Location_file]: null
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 31,
        [_Location_line]: 1141,
        [_Location_file]: null
      });
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfTextSearchResult",
        [_Location_column]: 52,
        [_Location_line]: 1142,
        [_Location_file]: null
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfScrollableStateKey",
        [_Location_column]: 31,
        [_Location_line]: 1143,
        [_Location_file]: null
      });
    },
    get C438() {
      return C[438] = dart.constList([C[439] || CT.C439, C[440] || CT.C440, C[441] || CT.C441, C[442] || CT.C442, C[443] || CT.C443, C[444] || CT.C444, C[445] || CT.C445, C[446] || CT.C446, C[447] || CT.C447, C[448] || CT.C448, C[449] || CT.C449, C[450] || CT.C450, C[451] || CT.C451, C[452] || CT.C452, C[453] || CT.C453, C[454] || CT.C454, C[455] || CT.C455, C[456] || CT.C456, C[457] || CT.C457, C[458] || CT.C458, C[459] || CT.C459, C[460] || CT.C460, C[461] || CT.C461], widget_inspector._Location);
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[438] || CT.C438,
        [_Location_name]: null,
        [_Location_column]: 54,
        [_Location_line]: 1116,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 27,
        [_Location_line]: 1080,
        [_Location_file]: null
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 27,
        [_Location_line]: 1081,
        [_Location_file]: null
      });
    },
    get C463() {
      return C[463] = dart.constList([C[464] || CT.C464, C[465] || CT.C465], widget_inspector._Location);
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[463] || CT.C463,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 1079,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C468() {
      return C[468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowPaginationDialog",
        [_Location_column]: 32,
        [_Location_line]: 1190,
        [_Location_file]: null
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollStatus",
        [_Location_column]: 32,
        [_Location_line]: 1191,
        [_Location_file]: null
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollHead",
        [_Location_column]: 32,
        [_Location_line]: 1192,
        [_Location_file]: null
      });
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 25,
        [_Location_line]: 1193,
        [_Location_file]: null
      });
    },
    get C472() {
      return C[472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 25,
        [_Location_line]: 1194,
        [_Location_file]: null
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDimension",
        [_Location_column]: 25,
        [_Location_line]: 1195,
        [_Location_file]: null
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportDimension",
        [_Location_column]: 25,
        [_Location_line]: 1196,
        [_Location_file]: null
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfOffsetChanged",
        [_Location_column]: 25,
        [_Location_line]: 1197,
        [_Location_file]: null
      });
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isPanEnabled",
        [_Location_column]: 25,
        [_Location_line]: 1198,
        [_Location_file]: null
      });
    },
    get C477() {
      return C[477] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 25,
        [_Location_line]: 1199,
        [_Location_file]: null
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 25,
        [_Location_line]: 1200,
        [_Location_file]: null
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 32,
        [_Location_line]: 1201,
        [_Location_file]: null
      });
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 32,
        [_Location_line]: 1202,
        [_Location_file]: null
      });
    },
    get C481() {
      return C[481] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxPdfPageWidth",
        [_Location_column]: 25,
        [_Location_line]: 1203,
        [_Location_file]: null
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 25,
        [_Location_line]: 1204,
        [_Location_file]: null
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScrollExtent",
        [_Location_column]: 25,
        [_Location_line]: 1205,
        [_Location_file]: null
      });
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 25,
        [_Location_line]: 1206,
        [_Location_file]: null
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 1207,
        [_Location_file]: null
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 25,
        [_Location_line]: 1208,
        [_Location_file]: null
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 25,
        [_Location_line]: 1209,
        [_Location_file]: null
      });
    },
    get C467() {
      return C[467] = dart.constList([C[468] || CT.C468, C[469] || CT.C469, C[470] || CT.C470, C[471] || CT.C471, C[472] || CT.C472, C[473] || CT.C473, C[474] || CT.C474, C[475] || CT.C475, C[476] || CT.C476, C[477] || CT.C477, C[478] || CT.C478, C[479] || CT.C479, C[480] || CT.C480, C[481] || CT.C481, C[482] || CT.C482, C[483] || CT.C483, C[484] || CT.C484, C[485] || CT.C485, C[486] || CT.C486, C[487] || CT.C487], widget_inspector._Location);
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[467] || CT.C467,
        [_Location_name]: null,
        [_Location_column]: 52,
        [_Location_line]: 1189,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C490() {
      return C[490] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1216,
        [_Location_file]: null
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 45,
        [_Location_line]: 1216,
        [_Location_file]: null
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 56,
        [_Location_line]: 1216,
        [_Location_file]: null
      });
    },
    get C489() {
      return C[489] = dart.constList([C[490] || CT.C490, C[491] || CT.C491, C[492] || CT.C492], widget_inspector._Location);
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[489] || CT.C489,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1215,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 1213,
        [_Location_file]: null
      });
    },
    get C494() {
      return C[494] = dart.constList([C[495] || CT.C495], widget_inspector._Location);
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[494] || CT.C494,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 1212,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C498() {
      return C[498] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "future",
        [_Location_column]: 19,
        [_Location_line]: 1049,
        [_Location_file]: null
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 19,
        [_Location_line]: 1050,
        [_Location_file]: null
      });
    },
    get C497() {
      return C[497] = dart.constList([C[498] || CT.C498, C[499] || CT.C499], widget_inspector._Location);
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[497] || CT.C497,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 1048,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 1046,
        [_Location_file]: null
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1048,
        [_Location_file]: null
      });
    },
    get C501() {
      return C[501] = dart.constList([C[502] || CT.C502, C[503] || CT.C503], widget_inspector._Location);
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[501] || CT.C501,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1045,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 13,
        [_Location_line]: 1041,
        [_Location_file]: null
      });
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 13,
        [_Location_line]: 1042,
        [_Location_file]: null
      });
    },
    get C508() {
      return C[508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerMove",
        [_Location_column]: 13,
        [_Location_line]: 1043,
        [_Location_file]: null
      });
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 13,
        [_Location_line]: 1044,
        [_Location_file]: null
      });
    },
    get C510() {
      return C[510] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1045,
        [_Location_file]: null
      });
    },
    get C505() {
      return C[505] = dart.constList([C[506] || CT.C506, C[507] || CT.C507, C[508] || CT.C508, C[509] || CT.C509, C[510] || CT.C510], widget_inspector._Location);
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[505] || CT.C505,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 1040,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart"
      });
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$1]: "Navigation.jumpToPage",
        index: 0
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$1]: "Navigation.firstPage",
        index: 1
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$1]: "Navigation.lastPage",
        index: 3
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$1]: "Navigation.previousPage",
        index: 4
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$1]: "Navigation.nextPage",
        index: 2
      });
    }
  }, false);
  var C = Array(516).fill(void 0);
  var I = [
    "package:syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/common/pdf_provider.dart",
    "package:syncfusion_flutter_pdfviewer/src/bookmark/bookmark_view.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdfviewer_canvas.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/pdfviewer_canvas.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_status.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head_overlay.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_scrollable.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_page_view.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/pdfviewer.dart",
    "package:syncfusion_flutter_pdfviewer/src/pdfviewer.dart"
  ];
  pdf_provider.PdfProvider = class PdfProvider extends core.Object {};
  (pdf_provider.PdfProvider.new = function() {
    ;
  }).prototype = pdf_provider.PdfProvider.prototype;
  dart.addTypeTests(pdf_provider.PdfProvider);
  dart.addTypeCaches(pdf_provider.PdfProvider);
  dart.setLibraryUri(pdf_provider.PdfProvider, I[0]);
  var __NetworkPdf__url = dart.privateName(pdf_provider, "_#NetworkPdf#_url");
  var _headers = dart.privateName(pdf_provider, "_headers");
  var _documentBytes = dart.privateName(pdf_provider, "_documentBytes");
  var _url = dart.privateName(pdf_provider, "_url");
  pdf_provider.NetworkPdf = class NetworkPdf extends pdf_provider.PdfProvider {
    get [_url]() {
      let t0;
      t0 = this[__NetworkPdf__url];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_url")) : t0;
    }
    set [_url](t0) {
      this[__NetworkPdf__url] = t0;
    }
    getPdfBytes(context) {
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            this[_documentBytes] = (yield http.readBytes(core.Uri.parse(this[_url]), {headers: this[_headers]}));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(e[$toString]());
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.NetworkPdf.new = function(url, headers) {
    this[__NetworkPdf__url] = null;
    this[_headers] = null;
    this[_documentBytes] = null;
    if (!url[$isNotEmpty]) dart.assertFailed(null, I[1], 34, 16, "url.isNotEmpty");
    pdf_provider.NetworkPdf.__proto__.new.call(this);
    this[_url] = url;
    this[_headers] = headers;
  }).prototype = pdf_provider.NetworkPdf.prototype;
  dart.addTypeTests(pdf_provider.NetworkPdf);
  dart.addTypeCaches(pdf_provider.NetworkPdf);
  dart.setMethodSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.NetworkPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.NetworkPdf.__proto__),
    [_url]: core.String
  }));
  dart.setSetterSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.NetworkPdf.__proto__),
    [_url]: core.String
  }));
  dart.setLibraryUri(pdf_provider.NetworkPdf, I[0]);
  dart.setFieldSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getFields(pdf_provider.NetworkPdf.__proto__),
    [__NetworkPdf__url]: dart.fieldType(dart.nullable(core.String)),
    [_headers]: dart.fieldType(dart.nullable(core.Map$(core.String, core.String))),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __MemoryPdf__pdfBytes = dart.privateName(pdf_provider, "_#MemoryPdf#_pdfBytes");
  var _pdfBytes = dart.privateName(pdf_provider, "_pdfBytes");
  pdf_provider.MemoryPdf = class MemoryPdf extends pdf_provider.PdfProvider {
    get [_pdfBytes]() {
      let t2;
      t2 = this[__MemoryPdf__pdfBytes];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_pdfBytes")) : t2;
    }
    set [_pdfBytes](t2) {
      this[__MemoryPdf__pdfBytes] = t2;
    }
    getPdfBytes(context) {
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        return T.FutureOfUint8List().value(this[_pdfBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.MemoryPdf.new = function(bytes) {
    this[__MemoryPdf__pdfBytes] = null;
    pdf_provider.MemoryPdf.__proto__.new.call(this);
    this[_pdfBytes] = bytes;
  }).prototype = pdf_provider.MemoryPdf.prototype;
  dart.addTypeTests(pdf_provider.MemoryPdf);
  dart.addTypeCaches(pdf_provider.MemoryPdf);
  dart.setMethodSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.MemoryPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.MemoryPdf.__proto__),
    [_pdfBytes]: typed_data.Uint8List
  }));
  dart.setSetterSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.MemoryPdf.__proto__),
    [_pdfBytes]: typed_data.Uint8List
  }));
  dart.setLibraryUri(pdf_provider.MemoryPdf, I[0]);
  dart.setFieldSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getFields(pdf_provider.MemoryPdf.__proto__),
    [__MemoryPdf__pdfBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __AssetPdf__pdfPath = dart.privateName(pdf_provider, "_#AssetPdf#_pdfPath");
  var _bundle = dart.privateName(pdf_provider, "_bundle");
  var _pdfPath = dart.privateName(pdf_provider, "_pdfPath");
  pdf_provider.AssetPdf = class AssetPdf extends pdf_provider.PdfProvider {
    get [_pdfPath]() {
      let t3;
      t3 = this[__AssetPdf__pdfPath];
      return t3 == null ? dart.throw(new _internal.LateError.fieldNI("_pdfPath")) : t3;
    }
    set [_pdfPath](t3) {
      this[__AssetPdf__pdfPath] = t3;
    }
    getPdfBytes(context) {
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            let bytes = (yield this[_bundle] != null ? dart.nullCheck(this[_bundle]).load(this[_pdfPath]) : basic.DefaultAssetBundle.of(context).load(this[_pdfPath]));
            this[_documentBytes] = bytes[$buffer][$asUint8List]();
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(e[$toString]());
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.AssetPdf.new = function(assetName, bundle) {
    this[__AssetPdf__pdfPath] = null;
    this[_bundle] = null;
    this[_documentBytes] = null;
    if (!assetName[$isNotEmpty]) dart.assertFailed(null, I[1], 99, 16, "assetName.isNotEmpty");
    pdf_provider.AssetPdf.__proto__.new.call(this);
    this[_pdfPath] = assetName;
    this[_bundle] = bundle;
  }).prototype = pdf_provider.AssetPdf.prototype;
  dart.addTypeTests(pdf_provider.AssetPdf);
  dart.addTypeCaches(pdf_provider.AssetPdf);
  dart.setMethodSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.AssetPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.AssetPdf.__proto__),
    [_pdfPath]: core.String
  }));
  dart.setSetterSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.AssetPdf.__proto__),
    [_pdfPath]: core.String
  }));
  dart.setLibraryUri(pdf_provider.AssetPdf, I[0]);
  dart.setFieldSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getFields(pdf_provider.AssetPdf.__proto__),
    [__AssetPdf__pdfPath]: dart.fieldType(dart.nullable(core.String)),
    [_bundle]: dart.fieldType(dart.nullable(asset_bundle.AssetBundle)),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __FilePdf__file = dart.privateName(pdf_provider, "_#FilePdf#_file");
  var _file = dart.privateName(pdf_provider, "_file");
  pdf_provider.FilePdf = class FilePdf extends pdf_provider.PdfProvider {
    get [_file]() {
      let t5;
      t5 = this[__FilePdf__file];
      return t5 == null ? dart.throw(new _internal.LateError.fieldNI("_file")) : t5;
    }
    set [_file](t5) {
      this[__FilePdf__file] = t5;
    }
    getPdfBytes(context) {
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            this[_documentBytes] = (yield this[_file].readAsBytes());
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(e[$toString]());
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.FilePdf.new = function(file) {
    this[__FilePdf__file] = null;
    this[_documentBytes] = null;
    pdf_provider.FilePdf.__proto__.new.call(this);
    this[_file] = file;
  }).prototype = pdf_provider.FilePdf.prototype;
  dart.addTypeTests(pdf_provider.FilePdf);
  dart.addTypeCaches(pdf_provider.FilePdf);
  dart.setMethodSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getMethods(pdf_provider.FilePdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getGetters(pdf_provider.FilePdf.__proto__),
    [_file]: io.File
  }));
  dart.setSetterSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getSetters(pdf_provider.FilePdf.__proto__),
    [_file]: io.File
  }));
  dart.setLibraryUri(pdf_provider.FilePdf, I[0]);
  dart.setFieldSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getFields(pdf_provider.FilePdf.__proto__),
    [__FilePdf__file]: dart.fieldType(dart.nullable(io.File)),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var controller$ = dart.privateName(bookmark_view, "BookmarkView.controller");
  var pdfDocument$ = dart.privateName(bookmark_view, "BookmarkView.pdfDocument");
  bookmark_view.BookmarkView = class BookmarkView extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get pdfDocument() {
      return this[pdfDocument$];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    createState() {
      return new bookmark_view.BookmarkViewControllerState.new();
    }
  };
  (bookmark_view.BookmarkView.new = function(key, pdfDocument, controller, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfDocument$] = pdfDocument;
    this[controller$] = controller;
    bookmark_view.BookmarkView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bookmark_view.BookmarkView.prototype;
  dart.addTypeTests(bookmark_view.BookmarkView);
  dart.addTypeCaches(bookmark_view.BookmarkView);
  dart.setMethodSignature(bookmark_view.BookmarkView, () => ({
    __proto__: dart.getMethods(bookmark_view.BookmarkView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(bookmark_view.BookmarkView, I[2]);
  dart.setFieldSignature(bookmark_view.BookmarkView, () => ({
    __proto__: dart.getFields(bookmark_view.BookmarkView.__proto__),
    controller: dart.finalFieldType(pdfviewer.PdfViewerController),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument))
  }));
  var showBookmark = dart.privateName(bookmark_view, "BookmarkViewControllerState.showBookmark");
  var _bookmarkList = dart.privateName(bookmark_view, "_bookmarkList");
  var _bookmarkBase = dart.privateName(bookmark_view, "_bookmarkBase");
  var _parentBookmark = dart.privateName(bookmark_view, "_parentBookmark");
  var _childBookmark = dart.privateName(bookmark_view, "_childBookmark");
  var _isExpanded = dart.privateName(bookmark_view, "_isExpanded");
  var _totalWidth = dart.privateName(bookmark_view, "_totalWidth");
  var _isTablet = dart.privateName(bookmark_view, "_isTablet");
  var _listCount = dart.privateName(bookmark_view, "_listCount");
  var _historyEntry = dart.privateName(bookmark_view, "_historyEntry");
  var _pdfViewerThemeData = dart.privateName(bookmark_view, "_pdfViewerThemeData");
  var _localizations = dart.privateName(bookmark_view, "_localizations");
  var _handleHistoryEntryRemoved = dart.privateName(bookmark_view, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry = dart.privateName(bookmark_view, "_ensureHistoryEntry");
  var _handleClose = dart.privateName(bookmark_view, "_handleClose");
  var _populateBookmarkList = dart.privateName(bookmark_view, "_populateBookmarkList");
  var _findDevice = dart.privateName(bookmark_view, "_findDevice");
  var _handleBackPress = dart.privateName(bookmark_view, "_handleBackPress");
  var _handleExpandPress = dart.privateName(bookmark_view, "_handleExpandPress");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  bookmark_view.BookmarkViewControllerState = class BookmarkViewControllerState extends framework.State$(bookmark_view.BookmarkView) {
    get showBookmark() {
      return this[showBookmark];
    }
    set showBookmark(value) {
      this[showBookmark] = value;
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      dart.nullCheck(this[_bookmarkList])[$clear]();
      this[_bookmarkList] = null;
      this[_pdfViewerThemeData] = null;
      this[_localizations] = null;
      super.dispose();
    }
    [_ensureHistoryEntry]() {
      if (this[_historyEntry] == null) {
        let route = routes.ModalRoute.of(T.ObjectN(), this.context);
        if (route != null) {
          this[_historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved)});
          route.addLocalHistoryEntry(dart.nullCheck(this[_historyEntry]));
        }
      }
    }
    [_handleHistoryEntryRemoved]() {
      this[_historyEntry] = null;
      this[_handleClose]();
    }
    open() {
      return async.async(dart.void, (function* open() {
        yield T.FutureOfbool().sync(dart.fn(() => this.widget.controller.clearSelection(), T.VoidTobool()));
        this[_ensureHistoryEntry]();
        if (!this.showBookmark && this.widget.pdfDocument != null) {
          this[_bookmarkBase] = dart.nullCheck(this.widget.pdfDocument).bookmarks;
          this[_bookmarkList] = this[_populateBookmarkList]();
        }
        this.setState(dart.fn(() => {
          this.showBookmark = true;
        }, T.VoidTovoid()));
      }).bind(this));
    }
    [_handleClose]() {
      return async.async(dart.void, (function* _handleClose() {
        if (this.showBookmark) {
          this.setState(dart.fn(() => {
            this[_isExpanded] = false;
            this.showBookmark = false;
          }, T.VoidTovoid()));
          if (this[_historyEntry] != null && navigator.Navigator.canPop(this.context)) {
            yield navigator.Navigator.of(this.context).maybePop(T.ObjectN());
          }
        }
      }).bind(this));
    }
    [_findDevice](context) {
      this[_totalWidth] = media_query.MediaQuery.of(context).size.width;
      let size = media_query.MediaQuery.of(context).size;
      let diagonal = math.sqrt(size.width * size.width + size.height * size.height);
      if (pdfviewer_helper.kIsDesktop && !(diagonal < 1100)) {
        this[_isTablet] = true;
      } else {
        this[_isTablet] = diagonal > 1100;
      }
    }
    [_handleBackPress]() {
      this.setState(dart.fn(() => {
        if (dart.equals(this[_childBookmark], this[_parentBookmark])) {
          this[_isExpanded] = false;
          this[_populateBookmarkList]();
        } else {
          this[_childBookmark] = this[_parentBookmark];
          this[_populateBookmarkList]();
        }
      }, T.VoidTovoid()));
    }
    [_handleExpandPress](index) {
      this.setState(dart.fn(() => {
        this[_parentBookmark] = this[_isExpanded] ? this[_childBookmark] : dart.nullCheck(this[_bookmarkBase])._get(index);
        this[_childBookmark] = this[_isExpanded] ? dart.nullCheck(this[_childBookmark])._get(index) : dart.nullCheck(this[_bookmarkBase])._get(index);
        this[_isExpanded] = true;
        this[_populateBookmarkList]();
      }, T.VoidTovoid()));
    }
    [_populateBookmarkList]() {
      let t7, t7$, t7$0, t7$1;
      t7 = this[_bookmarkList];
      t7 == null ? null : t7[$clear]();
      if (this[_isExpanded]) {
        t7$ = this[_bookmarkList];
        t7$ == null ? null : t7$[$add](new bookmark_item.BookmarkItem.new({title: dart.nullCheck(this[_childBookmark]).title, isBackIconVisible: true, textPosition: 55, onBackPressed: dart.bind(this, _handleBackPress), isMobileWebView: !this[_isTablet], onNavigate: dart.fn(() => {
            this.widget.controller.jumpToBookmark(dart.nullCheck(this[_childBookmark]));
            this[_handleClose]();
          }, T.VoidTovoid()), isBorderEnabled: true, onExpandPressed: dart.fn(() => {
          }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}));
      }
      let bookmarkListCount = this[_isExpanded] ? dart.nullCheck(this[_childBookmark]).count : dart.nullCheck(this[_bookmarkBase]).count;
      for (let i = 0; i < bookmarkListCount; i = i + 1) {
        let bookmarkItem = new bookmark_item.BookmarkItem.new({title: this[_isExpanded] ? dart.nullCheck(this[_childBookmark])._get(i).title : dart.nullCheck(this[_bookmarkBase])._get(i).title, isMobileWebView: !this[_isTablet], isExpandIconVisible: this[_isExpanded] ? dart.nullCheck(this[_childBookmark])._get(i).count !== 0 : dart.nullCheck(this[_bookmarkBase])._get(i).count !== 0, onNavigate: dart.fn(() => {
            let bookmark = this[_isExpanded] ? dart.nullCheck(this[_childBookmark])._get(i) : dart.nullCheck(this[_bookmarkBase])._get(i);
            this.widget.controller.jumpToBookmark(bookmark);
            this[_handleClose]();
          }, T.VoidTovoid()), onExpandPressed: dart.fn(() => {
            this[_handleExpandPress](i);
          }, T.VoidTovoid()), onBackPressed: dart.fn(() => {
          }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
        t7$0 = this[_bookmarkList];
        t7$0 == null ? null : t7$0[$add](bookmarkItem);
      }
      this[_listCount] = this[_isExpanded] ? bookmarkListCount + 1 : (t7$1 = this[_bookmarkBase], t7$1 == null ? null : t7$1.count);
      return dart.nullCheck(this[_bookmarkList]);
    }
    build(context) {
      this[_findDevice](context);
      let hasBookmark = null;
      if (this.widget.pdfDocument != null && dart.nullCheck(this.widget.pdfDocument).bookmarks.count > 0) {
        hasBookmark = true;
      } else {
        hasBookmark = false;
      }
      return new visibility.Visibility.new({visible: this.showBookmark, child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new visibility.Visibility.new({visible: this[_isTablet], child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, _handleClose), child: new container.Container.new({color: colors.Colors.black.withOpacity(0.3), $creationLocationd_0dea112b090073317d4: C[18] || CT.C18}), $creationLocationd_0dea112b090073317d4: C[21] || CT.C21}), $creationLocationd_0dea112b090073317d4: C[25] || CT.C25}), new basic.Align.new({alignment: this[_isTablet] ? alignment.Alignment.topRight : alignment.Alignment.center, child: new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData]).bookmarkViewStyle.backgroundColor, width: this[_isTablet] ? 400 : this[_totalWidth], child: new basic.Column.new({children: T.JSArrayOfWidget().of([new bookmark_toolbar.BookmarkToolbar.new(dart.bind(this, _handleClose), {$creationLocationd_0dea112b090073317d4: C[29] || CT.C29}), new basic.Expanded.new({child: hasBookmark ? new scroll_view.ListView.builder({itemCount: this[_listCount], itemBuilder: dart.fn((context, index) => dart.nullCheck(this[_bookmarkList])[$_get](index), T.BuildContextAndintToBookmarkItem()), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32}) : new basic.Center.new({child: new text.Text.new(dart.nullCheck(this[_localizations]).pdfNoBookmarksLabel, {style: dart.nullCheck(this[_pdfViewerThemeData]).bookmarkViewStyle.titleTextStyle, $creationLocationd_0dea112b090073317d4: C[36] || CT.C36}), $creationLocationd_0dea112b090073317d4: C[40] || CT.C40}), $creationLocationd_0dea112b090073317d4: C[43] || CT.C43})]), $creationLocationd_0dea112b090073317d4: C[46] || CT.C46}), $creationLocationd_0dea112b090073317d4: C[49] || CT.C49}), $creationLocationd_0dea112b090073317d4: C[54] || CT.C54})]), $creationLocationd_0dea112b090073317d4: C[58] || CT.C58}), $creationLocationd_0dea112b090073317d4: C[61] || CT.C61});
    }
  };
  (bookmark_view.BookmarkViewControllerState.new = function() {
    this[_bookmarkList] = T.JSArrayOfBookmarkItem().of([]);
    this[_bookmarkBase] = null;
    this[_parentBookmark] = null;
    this[_childBookmark] = null;
    this[_isExpanded] = false;
    this[_totalWidth] = null;
    this[_isTablet] = false;
    this[_listCount] = null;
    this[_historyEntry] = null;
    this[_pdfViewerThemeData] = null;
    this[_localizations] = null;
    this[showBookmark] = false;
    bookmark_view.BookmarkViewControllerState.__proto__.new.call(this);
    ;
  }).prototype = bookmark_view.BookmarkViewControllerState.prototype;
  dart.addTypeTests(bookmark_view.BookmarkViewControllerState);
  dart.addTypeCaches(bookmark_view.BookmarkViewControllerState);
  dart.setMethodSignature(bookmark_view.BookmarkViewControllerState, () => ({
    __proto__: dart.getMethods(bookmark_view.BookmarkViewControllerState.__proto__),
    [_ensureHistoryEntry]: dart.fnType(dart.void, []),
    [_handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    open: dart.fnType(dart.void, []),
    [_handleClose]: dart.fnType(async.Future$(dart.void), []),
    [_findDevice]: dart.fnType(dart.void, [framework.BuildContext]),
    [_handleBackPress]: dart.fnType(dart.void, []),
    [_handleExpandPress]: dart.fnType(dart.void, [core.int]),
    [_populateBookmarkList]: dart.fnType(core.List$(bookmark_item.BookmarkItem), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bookmark_view.BookmarkViewControllerState, I[2]);
  dart.setFieldSignature(bookmark_view.BookmarkViewControllerState, () => ({
    __proto__: dart.getFields(bookmark_view.BookmarkViewControllerState.__proto__),
    [_bookmarkList]: dart.fieldType(dart.nullable(core.List$(bookmark_item.BookmarkItem))),
    [_bookmarkBase]: dart.fieldType(dart.nullable(pdf.PdfBookmarkBase)),
    [_parentBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_childBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_isExpanded]: dart.fieldType(core.bool),
    [_totalWidth]: dart.fieldType(dart.nullable(core.double)),
    [_isTablet]: dart.fieldType(core.bool),
    [_listCount]: dart.fieldType(dart.nullable(core.int)),
    [_historyEntry]: dart.fieldType(dart.nullable(routes.LocalHistoryEntry)),
    [_pdfViewerThemeData]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    showBookmark: dart.fieldType(core.bool)
  }));
  dart.defineLazy(bookmark_view, {
    /*bookmark_view._kPdfTabletBookmarkWidth*/get _kPdfTabletBookmarkWidth() {
      return 400;
    },
    /*bookmark_view._kPdfStandardDiagonalOffset*/get _kPdfStandardDiagonalOffset() {
      return 1100;
    },
    /*bookmark_view._kPdfSubBookmarkTitlePosition*/get _kPdfSubBookmarkTitlePosition() {
      return 55;
    }
  }, false);
  var height$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.height");
  var enableDocumentLinkNavigation$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.enableDocumentLinkNavigation");
  var width$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.width");
  var pdfDocument$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfDocument");
  var pageIndex$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pageIndex");
  var pdfPages$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfPages");
  var pdfViewerController$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfViewerController");
  var enableTextSelection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.enableTextSelection");
  var onTextSelectionDragStarted$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionDragStarted");
  var onTextSelectionDragEnded$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionDragEnded");
  var onTextSelectionChanged$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionChanged");
  var searchTextHighlightColor$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.searchTextHighlightColor");
  var textCollection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.textCollection");
  var pdfTextSearchResult$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfTextSearchResult");
  var onDocumentLinkNavigationInvoked$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onDocumentLinkNavigationInvoked");
  var interactionMode$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.interactionMode");
  var isMobileWebView$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.isMobileWebView");
  var viewportGlobalRect$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.viewportGlobalRect");
  var pdfScrollableStateKey$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfScrollableStateKey");
  pdfviewer_canvas.PdfViewerCanvas = class PdfViewerCanvas extends framework.LeafRenderObjectWidget {
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get enableDocumentLinkNavigation() {
      return this[enableDocumentLinkNavigation$];
    }
    set enableDocumentLinkNavigation(value) {
      super.enableDocumentLinkNavigation = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get pdfDocument() {
      return this[pdfDocument$0];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get pageIndex() {
      return this[pageIndex$];
    }
    set pageIndex(value) {
      super.pageIndex = value;
    }
    get pdfPages() {
      return this[pdfPages$];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get onTextSelectionDragStarted() {
      return this[onTextSelectionDragStarted$];
    }
    set onTextSelectionDragStarted(value) {
      super.onTextSelectionDragStarted = value;
    }
    get onTextSelectionDragEnded() {
      return this[onTextSelectionDragEnded$];
    }
    set onTextSelectionDragEnded(value) {
      super.onTextSelectionDragEnded = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get textCollection() {
      return this[textCollection$];
    }
    set textCollection(value) {
      super.textCollection = value;
    }
    get pdfTextSearchResult() {
      return this[pdfTextSearchResult$];
    }
    set pdfTextSearchResult(value) {
      super.pdfTextSearchResult = value;
    }
    get onDocumentLinkNavigationInvoked() {
      return this[onDocumentLinkNavigationInvoked$];
    }
    set onDocumentLinkNavigationInvoked(value) {
      super.onDocumentLinkNavigationInvoked = value;
    }
    get interactionMode() {
      return this[interactionMode$];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get viewportGlobalRect() {
      return this[viewportGlobalRect$];
    }
    set viewportGlobalRect(value) {
      super.viewportGlobalRect = value;
    }
    get pdfScrollableStateKey() {
      return this[pdfScrollableStateKey$];
    }
    set pdfScrollableStateKey(value) {
      super.pdfScrollableStateKey = value;
    }
    createRenderObject(context) {
      return new pdfviewer_canvas.CanvasRenderBox.new(this.height, this.width, context, this.pdfDocument, this.pdfPages, this.pageIndex, this.interactionMode, this.pdfViewerController, this.enableDocumentLinkNavigation, this.enableTextSelection, this.onTextSelectionChanged, this.onTextSelectionDragStarted, this.onTextSelectionDragEnded, this.onDocumentLinkNavigationInvoked, this.textCollection, this.searchTextHighlightColor, this.isMobileWebView, this.pdfTextSearchResult, this.pdfScrollableStateKey, this.viewportGlobalRect);
    }
    updateRenderObject(context, renderObject) {
      let t7;
      pdfviewer_canvas.CanvasRenderBox.as(renderObject);
      t7 = renderObject;
      (() => {
        t7.height = this.height;
        t7.width = this.width;
        t7.pageIndex = this.pageIndex;
        t7.textCollection = this.textCollection;
        t7.interactionMode = this.interactionMode;
        t7.enableTextSelection = this.enableTextSelection;
        t7.enableDocumentLinkNavigation = this.enableDocumentLinkNavigation;
        t7.searchTextHighlightColor = this.searchTextHighlightColor;
        t7.pdfTextSearchResult = this.pdfTextSearchResult;
        return t7;
      })();
      renderObject.markNeedsPaint();
      super.updateRenderObject(context, renderObject);
    }
  };
  (pdfviewer_canvas.PdfViewerCanvas.new = function(key, height, width, pdfDocument, pageIndex, pdfPages, interactionMode, pdfViewerController, enableDocumentLinkNavigation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, onDocumentLinkNavigationInvoked, textCollection, searchTextHighlightColor, pdfTextSearchResult, isMobileWebView, pdfScrollableStateKey, viewportGlobalRect, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[height$] = height;
    this[width$] = width;
    this[pdfDocument$0] = pdfDocument;
    this[pageIndex$] = pageIndex;
    this[pdfPages$] = pdfPages;
    this[interactionMode$] = interactionMode;
    this[pdfViewerController$] = pdfViewerController;
    this[enableDocumentLinkNavigation$] = enableDocumentLinkNavigation;
    this[enableTextSelection$] = enableTextSelection;
    this[onTextSelectionChanged$] = onTextSelectionChanged;
    this[onTextSelectionDragStarted$] = onTextSelectionDragStarted;
    this[onTextSelectionDragEnded$] = onTextSelectionDragEnded;
    this[onDocumentLinkNavigationInvoked$] = onDocumentLinkNavigationInvoked;
    this[textCollection$] = textCollection;
    this[searchTextHighlightColor$] = searchTextHighlightColor;
    this[pdfTextSearchResult$] = pdfTextSearchResult;
    this[isMobileWebView$] = isMobileWebView;
    this[pdfScrollableStateKey$] = pdfScrollableStateKey;
    this[viewportGlobalRect$] = viewportGlobalRect;
    pdfviewer_canvas.PdfViewerCanvas.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer_canvas.PdfViewerCanvas.prototype;
  dart.addTypeTests(pdfviewer_canvas.PdfViewerCanvas);
  dart.addTypeCaches(pdfviewer_canvas.PdfViewerCanvas);
  dart.setMethodSignature(pdfviewer_canvas.PdfViewerCanvas, () => ({
    __proto__: dart.getMethods(pdfviewer_canvas.PdfViewerCanvas.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(pdfviewer_canvas.PdfViewerCanvas, I[3]);
  dart.setFieldSignature(pdfviewer_canvas.PdfViewerCanvas, () => ({
    __proto__: dart.getFields(pdfviewer_canvas.PdfViewerCanvas.__proto__),
    height: dart.finalFieldType(core.double),
    enableDocumentLinkNavigation: dart.finalFieldType(core.bool),
    width: dart.finalFieldType(core.double),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    pageIndex: dart.finalFieldType(core.int),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    enableTextSelection: dart.finalFieldType(core.bool),
    onTextSelectionDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionDragEnded: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    textCollection: dart.finalFieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    pdfTextSearchResult: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    onDocumentLinkNavigationInvoked: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    isMobileWebView: dart.finalFieldType(core.bool),
    viewportGlobalRect: dart.finalFieldType(dart.nullable(ui.Rect)),
    pdfScrollableStateKey: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState))
  }));
  var pdfScrollableStateKey$0 = dart.privateName(pdfviewer_canvas, "CanvasRenderBox.pdfScrollableStateKey");
  var viewportGlobalRect$0 = dart.privateName(pdfviewer_canvas, "CanvasRenderBox.viewportGlobalRect");
  var __CanvasRenderBox_height = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#height");
  var __CanvasRenderBox_width = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#width");
  var __CanvasRenderBox_pageIndex = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pageIndex");
  var __CanvasRenderBox_pdfDocument = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfDocument");
  var __CanvasRenderBox_pdfDocument_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfDocument#isSet");
  var __CanvasRenderBox_context = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#context");
  var __CanvasRenderBox_enableTextSelection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableTextSelection");
  var __CanvasRenderBox_enableDocumentLinkNavigation = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableDocumentLinkNavigation");
  var __CanvasRenderBox_pdfPages = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfPages");
  var __CanvasRenderBox_pdfViewerController = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfViewerController");
  var __CanvasRenderBox_onTextSelectionDragStarted = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragStarted");
  var __CanvasRenderBox_onTextSelectionDragEnded = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragEnded");
  var __CanvasRenderBox_onTextSelectionChanged = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionChanged");
  var __CanvasRenderBox_onTextSelectionChanged_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionChanged#isSet");
  var __CanvasRenderBox_onDocumentLinkNavigationInvoked = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onDocumentLinkNavigationInvoked");
  var __CanvasRenderBox_interactionMode = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#interactionMode");
  var __CanvasRenderBox_searchTextHighlightColor = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#searchTextHighlightColor");
  var __CanvasRenderBox_textCollection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#textCollection");
  var __CanvasRenderBox_textCollection_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#textCollection#isSet");
  var __CanvasRenderBox_pdfTextSearchResult = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfTextSearchResult");
  var __CanvasRenderBox_isMobileWebView = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isMobileWebView");
  var _viewId = dart.privateName(pdfviewer_canvas, "_viewId");
  var __CanvasRenderBox__totalPageOffset = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_totalPageOffset");
  var _isTOCTapped = dart.privateName(pdfviewer_canvas, "_isTOCTapped");
  var _isMousePointer = dart.privateName(pdfviewer_canvas, "_isMousePointer");
  var _startBubbleTapX = dart.privateName(pdfviewer_canvas, "_startBubbleTapX");
  var _endBubbleTapX = dart.privateName(pdfviewer_canvas, "_endBubbleTapX");
  var _bubbleSize = dart.privateName(pdfviewer_canvas, "_bubbleSize");
  var _jumpOffset = dart.privateName(pdfviewer_canvas, "_jumpOffset");
  var _maximumZoomLevel = dart.privateName(pdfviewer_canvas, "_maximumZoomLevel");
  var _longPressed = dart.privateName(pdfviewer_canvas, "_longPressed");
  var _startBubbleDragging = dart.privateName(pdfviewer_canvas, "_startBubbleDragging");
  var _endBubbleDragging = dart.privateName(pdfviewer_canvas, "_endBubbleDragging");
  var _zoomPercentage = dart.privateName(pdfviewer_canvas, "_zoomPercentage");
  var _tapDetails = dart.privateName(pdfviewer_canvas, "_tapDetails");
  var _dragDetails = dart.privateName(pdfviewer_canvas, "_dragDetails");
  var _dragDownDetails = dart.privateName(pdfviewer_canvas, "_dragDownDetails");
  var _selectionColor = dart.privateName(pdfviewer_canvas, "_selectionColor");
  var _selectionHandleColor = dart.privateName(pdfviewer_canvas, "_selectionHandleColor");
  var __CanvasRenderBox__tapRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_tapRecognizer");
  var __CanvasRenderBox__dragRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_dragRecognizer");
  var __CanvasRenderBox__longPressRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_longPressRecognizer");
  var __CanvasRenderBox__verticalDragRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_verticalDragRecognizer");
  var __CanvasRenderBox__documentLinkAnnotation = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_documentLinkAnnotation");
  var __CanvasRenderBox__documentLinkAnnotation_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_documentLinkAnnotation#isSet");
  var _tapRecognizer = dart.privateName(pdfviewer_canvas, "_tapRecognizer");
  var _longPressRecognizer = dart.privateName(pdfviewer_canvas, "_longPressRecognizer");
  var _dragRecognizer = dart.privateName(pdfviewer_canvas, "_dragRecognizer");
  var _verticalDragRecognizer = dart.privateName(pdfviewer_canvas, "_verticalDragRecognizer");
  var _totalPageOffset = dart.privateName(pdfviewer_canvas, "_totalPageOffset");
  var _documentLinkAnnotation = dart.privateName(pdfviewer_canvas, "_documentLinkAnnotation");
  var _checkStartBubblePosition = dart.privateName(pdfviewer_canvas, "_checkStartBubblePosition");
  var _checkEndBubblePosition = dart.privateName(pdfviewer_canvas, "_checkEndBubblePosition");
  var _enableMouseSelection = dart.privateName(pdfviewer_canvas, "_enableMouseSelection");
  var _updateSelectionPan = dart.privateName(pdfviewer_canvas, "_updateSelectionPan");
  var _enableSelection = dart.privateName(pdfviewer_canvas, "_enableSelection");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _sortTextLines = dart.privateName(pdfviewer_canvas, "_sortTextLines");
  var _handleHistoryEntryRemoved$ = dart.privateName(pdfviewer_canvas, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry$ = dart.privateName(pdfviewer_canvas, "_ensureHistoryEntry");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var _drawStartBubble = dart.privateName(pdfviewer_canvas, "_drawStartBubble");
  var _drawEndBubble = dart.privateName(pdfviewer_canvas, "_drawEndBubble");
  var _drawTextRect = dart.privateName(pdfviewer_canvas, "_drawTextRect");
  var _name = dart.privateName(platform, "_name");
  var Color_value = dart.privateName(ui, "Color.value");
  pdfviewer_canvas.CanvasRenderBox = class CanvasRenderBox extends box.RenderBox {
    get pdfScrollableStateKey() {
      return this[pdfScrollableStateKey$0];
    }
    set pdfScrollableStateKey(value) {
      super.pdfScrollableStateKey = value;
    }
    get viewportGlobalRect() {
      return this[viewportGlobalRect$0];
    }
    set viewportGlobalRect(value) {
      super.viewportGlobalRect = value;
    }
    get height() {
      let t7;
      t7 = this[__CanvasRenderBox_height];
      return t7 == null ? dart.throw(new _internal.LateError.fieldNI("height")) : t7;
    }
    set height(t7) {
      this[__CanvasRenderBox_height] = t7;
    }
    get width() {
      let t8;
      t8 = this[__CanvasRenderBox_width];
      return t8 == null ? dart.throw(new _internal.LateError.fieldNI("width")) : t8;
    }
    set width(t8) {
      this[__CanvasRenderBox_width] = t8;
    }
    get pageIndex() {
      let t9;
      t9 = this[__CanvasRenderBox_pageIndex];
      return t9 == null ? dart.throw(new _internal.LateError.fieldNI("pageIndex")) : t9;
    }
    set pageIndex(t9) {
      this[__CanvasRenderBox_pageIndex] = t9;
    }
    get pdfDocument() {
      return this[__CanvasRenderBox_pdfDocument_isSet] ? this[__CanvasRenderBox_pdfDocument] : dart.throw(new _internal.LateError.fieldNI("pdfDocument"));
    }
    set pdfDocument(t10) {
      if (this[__CanvasRenderBox_pdfDocument_isSet])
        dart.throw(new _internal.LateError.fieldAI("pdfDocument"));
      else {
        this[__CanvasRenderBox_pdfDocument_isSet] = true;
        this[__CanvasRenderBox_pdfDocument] = t10;
      }
    }
    get context() {
      let t11;
      t11 = this[__CanvasRenderBox_context];
      return t11 == null ? dart.throw(new _internal.LateError.fieldNI("context")) : t11;
    }
    set context(t11) {
      if (this[__CanvasRenderBox_context] == null)
        this[__CanvasRenderBox_context] = t11;
      else
        dart.throw(new _internal.LateError.fieldAI("context"));
    }
    get enableTextSelection() {
      let t12;
      t12 = this[__CanvasRenderBox_enableTextSelection];
      return t12 == null ? dart.throw(new _internal.LateError.fieldNI("enableTextSelection")) : t12;
    }
    set enableTextSelection(t12) {
      this[__CanvasRenderBox_enableTextSelection] = t12;
    }
    get enableDocumentLinkNavigation() {
      let t13;
      t13 = this[__CanvasRenderBox_enableDocumentLinkNavigation];
      return t13 == null ? dart.throw(new _internal.LateError.fieldNI("enableDocumentLinkNavigation")) : t13;
    }
    set enableDocumentLinkNavigation(t13) {
      this[__CanvasRenderBox_enableDocumentLinkNavigation] = t13;
    }
    get pdfPages() {
      let t14;
      t14 = this[__CanvasRenderBox_pdfPages];
      return t14 == null ? dart.throw(new _internal.LateError.fieldNI("pdfPages")) : t14;
    }
    set pdfPages(t14) {
      if (this[__CanvasRenderBox_pdfPages] == null)
        this[__CanvasRenderBox_pdfPages] = t14;
      else
        dart.throw(new _internal.LateError.fieldAI("pdfPages"));
    }
    get pdfViewerController() {
      let t15;
      t15 = this[__CanvasRenderBox_pdfViewerController];
      return t15 == null ? dart.throw(new _internal.LateError.fieldNI("pdfViewerController")) : t15;
    }
    set pdfViewerController(t15) {
      if (this[__CanvasRenderBox_pdfViewerController] == null)
        this[__CanvasRenderBox_pdfViewerController] = t15;
      else
        dart.throw(new _internal.LateError.fieldAI("pdfViewerController"));
    }
    get onTextSelectionDragStarted() {
      let t16;
      t16 = this[__CanvasRenderBox_onTextSelectionDragStarted];
      return t16 == null ? dart.throw(new _internal.LateError.fieldNI("onTextSelectionDragStarted")) : t16;
    }
    set onTextSelectionDragStarted(t16) {
      if (this[__CanvasRenderBox_onTextSelectionDragStarted] == null)
        this[__CanvasRenderBox_onTextSelectionDragStarted] = t16;
      else
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionDragStarted"));
    }
    get onTextSelectionDragEnded() {
      let t17;
      t17 = this[__CanvasRenderBox_onTextSelectionDragEnded];
      return t17 == null ? dart.throw(new _internal.LateError.fieldNI("onTextSelectionDragEnded")) : t17;
    }
    set onTextSelectionDragEnded(t17) {
      if (this[__CanvasRenderBox_onTextSelectionDragEnded] == null)
        this[__CanvasRenderBox_onTextSelectionDragEnded] = t17;
      else
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionDragEnded"));
    }
    get onTextSelectionChanged() {
      return this[__CanvasRenderBox_onTextSelectionChanged_isSet] ? this[__CanvasRenderBox_onTextSelectionChanged] : dart.throw(new _internal.LateError.fieldNI("onTextSelectionChanged"));
    }
    set onTextSelectionChanged(t18) {
      if (this[__CanvasRenderBox_onTextSelectionChanged_isSet])
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionChanged"));
      else {
        this[__CanvasRenderBox_onTextSelectionChanged_isSet] = true;
        this[__CanvasRenderBox_onTextSelectionChanged] = t18;
      }
    }
    get onDocumentLinkNavigationInvoked() {
      let t19;
      t19 = this[__CanvasRenderBox_onDocumentLinkNavigationInvoked];
      return t19 == null ? dart.throw(new _internal.LateError.fieldNI("onDocumentLinkNavigationInvoked")) : t19;
    }
    set onDocumentLinkNavigationInvoked(t19) {
      if (this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] == null)
        this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] = t19;
      else
        dart.throw(new _internal.LateError.fieldAI("onDocumentLinkNavigationInvoked"));
    }
    get interactionMode() {
      let t20;
      t20 = this[__CanvasRenderBox_interactionMode];
      return t20 == null ? dart.throw(new _internal.LateError.fieldNI("interactionMode")) : t20;
    }
    set interactionMode(t20) {
      this[__CanvasRenderBox_interactionMode] = t20;
    }
    set searchTextHighlightColor(t21) {
      this[__CanvasRenderBox_searchTextHighlightColor] = t21;
    }
    get searchTextHighlightColor() {
      let t22;
      t22 = this[__CanvasRenderBox_searchTextHighlightColor];
      return t22 == null ? dart.throw(new _internal.LateError.fieldNI("searchTextHighlightColor")) : t22;
    }
    get textCollection() {
      return this[__CanvasRenderBox_textCollection_isSet] ? this[__CanvasRenderBox_textCollection] : dart.throw(new _internal.LateError.fieldNI("textCollection"));
    }
    set textCollection(t22) {
      this[__CanvasRenderBox_textCollection_isSet] = true;
      this[__CanvasRenderBox_textCollection] = t22;
    }
    get pdfTextSearchResult() {
      let t23;
      t23 = this[__CanvasRenderBox_pdfTextSearchResult];
      return t23 == null ? dart.throw(new _internal.LateError.fieldNI("pdfTextSearchResult")) : t23;
    }
    set pdfTextSearchResult(t23) {
      this[__CanvasRenderBox_pdfTextSearchResult] = t23;
    }
    get isMobileWebView() {
      let t24;
      t24 = this[__CanvasRenderBox_isMobileWebView];
      return t24 == null ? dart.throw(new _internal.LateError.fieldNI("isMobileWebView")) : t24;
    }
    set isMobileWebView(t24) {
      if (this[__CanvasRenderBox_isMobileWebView] == null)
        this[__CanvasRenderBox_isMobileWebView] = t24;
      else
        dart.throw(new _internal.LateError.fieldAI("isMobileWebView"));
    }
    get [_totalPageOffset]() {
      let t25;
      t25 = this[__CanvasRenderBox__totalPageOffset];
      return t25 == null ? dart.throw(new _internal.LateError.fieldNI("_totalPageOffset")) : t25;
    }
    set [_totalPageOffset](t25) {
      this[__CanvasRenderBox__totalPageOffset] = t25;
    }
    get [_tapRecognizer]() {
      let t26;
      t26 = this[__CanvasRenderBox__tapRecognizer];
      return t26 == null ? dart.throw(new _internal.LateError.fieldNI("_tapRecognizer")) : t26;
    }
    set [_tapRecognizer](t26) {
      this[__CanvasRenderBox__tapRecognizer] = t26;
    }
    get [_dragRecognizer]() {
      let t27;
      t27 = this[__CanvasRenderBox__dragRecognizer];
      return t27 == null ? dart.throw(new _internal.LateError.fieldNI("_dragRecognizer")) : t27;
    }
    set [_dragRecognizer](t27) {
      this[__CanvasRenderBox__dragRecognizer] = t27;
    }
    get [_longPressRecognizer]() {
      let t28;
      t28 = this[__CanvasRenderBox__longPressRecognizer];
      return t28 == null ? dart.throw(new _internal.LateError.fieldNI("_longPressRecognizer")) : t28;
    }
    set [_longPressRecognizer](t28) {
      this[__CanvasRenderBox__longPressRecognizer] = t28;
    }
    get [_verticalDragRecognizer]() {
      let t29;
      t29 = this[__CanvasRenderBox__verticalDragRecognizer];
      return t29 == null ? dart.throw(new _internal.LateError.fieldNI("_verticalDragRecognizer")) : t29;
    }
    set [_verticalDragRecognizer](t29) {
      this[__CanvasRenderBox__verticalDragRecognizer] = t29;
    }
    get [_documentLinkAnnotation]() {
      return this[__CanvasRenderBox__documentLinkAnnotation_isSet] ? this[__CanvasRenderBox__documentLinkAnnotation] : dart.throw(new _internal.LateError.fieldNI("_documentLinkAnnotation"));
    }
    set [_documentLinkAnnotation](t30) {
      this[__CanvasRenderBox__documentLinkAnnotation_isSet] = true;
      this[__CanvasRenderBox__documentLinkAnnotation] = t30;
    }
    handleEvent(event, entry) {
      box.BoxHitTestEntry.as(entry);
      if (events.PointerDownEvent.is(event)) {
        this[_tapRecognizer].addPointer(event);
        if (this.interactionMode === enums.PdfInteractionMode.selection && pdfviewer_helper.kIsDesktop || !pdfviewer_helper.kIsDesktop) {
          this[_longPressRecognizer].addPointer(event);
          this[_dragRecognizer].addPointer(event);
          if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
            let isStartDragPossible = this[_checkStartBubblePosition]();
            let isEndDragPossible = this[_checkEndBubblePosition]();
            if (isStartDragPossible || isEndDragPossible) {
              this[_verticalDragRecognizer].addPointer(event);
            }
          }
        }
      }
      super.handleEvent(event, entry);
    }
    hitTestSelf(position) {
      return true;
    }
    get sizedByParent() {
      return true;
    }
    handleTapUp(details) {
      let t31;
      if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && (!pdfviewer_canvas._textSelectionHelper.enableTapSelection || pdfviewer_canvas._textSelectionHelper.globalSelectedRegion != null && !dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).contains(details.globalPosition))) {
        this.clearMouseSelection();
      }
      if (this.textCollection == null && !pdfviewer_canvas._textSelectionHelper.enableTapSelection) {
        this.clearSelection();
      }
      if (pdfviewer_canvas._textSelectionHelper.enableTapSelection && pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        this.triggerValueCallback();
        pdfviewer_canvas._textSelectionHelper.enableTapSelection = false;
      }
      if (this.enableDocumentLinkNavigation && this.pdfDocument != null) {
        this[_viewId] = this.pageIndex;
        let heightPercentage = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.height / this.height;
        let page = dart.nullCheck(this.pdfDocument).pages._get(this.pageIndex);
        let length = page.annotations.count;
        for (let index = 0; index < length; index = index + 1) {
          if (pdf.PdfDocumentLinkAnnotation.is(page.annotations._get(index))) {
            this[_documentLinkAnnotation] = pdf.PdfDocumentLinkAnnotation.as(page.annotations._get(index));
            if (!(this[_documentLinkAnnotation] != null)) dart.assertFailed(null, I[4], 327, 18, "_documentLinkAnnotation != null");
            if (details.localPosition.dy >= dart.nullCheck(this[_documentLinkAnnotation]).bounds.top / heightPercentage && details.localPosition.dy <= dart.nullCheck(this[_documentLinkAnnotation]).bounds.bottom / heightPercentage && details.localPosition.dx >= dart.nullCheck(this[_documentLinkAnnotation]).bounds.left / heightPercentage && details.localPosition.dx <= dart.nullCheck(this[_documentLinkAnnotation]).bounds.right / heightPercentage) {
              if ((t31 = dart.nullCheck(this[_documentLinkAnnotation]).destination, t31 == null ? null : t31.page) != null) {
                this[_isTOCTapped] = true;
                let destinationPage = dart.nullCheck(dart.nullCheck(this[_documentLinkAnnotation]).destination).page;
                let destinationPageIndex = dart.nullCheck(this.pdfDocument).pages.indexOf(destinationPage) + 1;
                let destinationPageOffset = dart.nullCheck(dart.nullCheck(this[_documentLinkAnnotation]).destination).location.dy / heightPercentage;
                this[_totalPageOffset] = dart.nullCheck(this.pdfPages[$_get](destinationPageIndex)).pageOffset + destinationPageOffset;
                this[_viewId] = this.pageIndex;
                this.markNeedsPaint();
                break;
              }
            }
          }
        }
      }
    }
    handleTapDown(details) {
      if (pdfviewer_canvas._textSelectionHelper.enableTapSelection && pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        this.triggerValueCallback();
      }
      this[_tapDetails] = details.localPosition;
      if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && this.enableTextSelection && this.interactionMode === enums.PdfInteractionMode.selection) {
        if (details.kind === ui.PointerDeviceKind.mouse) {
          this[_isMousePointer] = true;
        } else {
          this[_isMousePointer] = false;
        }
      }
    }
    handleLongPressStart(details) {
      if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && this.pdfDocument != null) {
        this.clearMouseSelection();
        let isTOC = this.findTOC(details.localPosition);
        if (this.interactionMode === enums.PdfInteractionMode.selection && !isTOC && !this[_isMousePointer]) {
          this.enableSelection();
        }
      } else {
        this.enableSelection();
      }
    }
    handleDragStart(details) {
      this[_enableMouseSelection](details, "DragStart");
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
        let isStartDragPossible = this[_checkStartBubblePosition]();
        let isEndDragPossible = this[_checkEndBubblePosition]();
        if (isStartDragPossible) {
          this[_startBubbleDragging] = true;
          this.onTextSelectionDragStarted();
        } else if (isEndDragPossible) {
          this[_endBubbleDragging] = true;
          this.onTextSelectionDragStarted();
        }
      }
    }
    handleDragUpdate(details) {
      let t31, t31$, t31$0, t31$1, t31$2;
      if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && this[_isMousePointer]) {
        this[_updateSelectionPan](details);
        let currentOffset = (t31$ = (t31 = this.pdfScrollableStateKey.currentState, t31 == null ? null : t31.currentOffset.dy), t31$ == null ? 0.0 : t31$);
        if (this.interactionMode === enums.PdfInteractionMode.pan) {
          let newOffset = currentOffset - details.delta.dy;
          if (details.delta.dy[$isNegative]) {
            t31$0 = this.pdfScrollableStateKey.currentState;
            t31$0 == null ? null : t31$0.jumpTo({yOffset: math.max(core.double, 0.0, newOffset)});
          } else {
            t31$1 = this.pdfScrollableStateKey.currentState;
            t31$1 == null ? null : t31$1.jumpTo({yOffset: newOffset});
          }
        }
        if (pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled && !pdfviewer_canvas._textSelectionHelper.isCursorExit) {
          pdfviewer_canvas._textSelectionHelper.endBubbleX = details.localPosition.dx;
          pdfviewer_canvas._textSelectionHelper.endBubbleY = details.localPosition.dy + (pdfviewer_canvas._textSelectionHelper.finalScrollOffset - pdfviewer_canvas._textSelectionHelper.initialScrollOffset);
          this.markNeedsPaint();
        }
      }
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
        this[_dragDetails] = details.localPosition;
        if (this[_startBubbleDragging]) {
          this[_startBubbleTapX] = details.localPosition.dx;
          this.markNeedsPaint();
          this.triggerNullCallback();
        } else if (this[_endBubbleDragging]) {
          this[_endBubbleTapX] = details.localPosition.dx;
          this.markNeedsPaint();
          if (this.onTextSelectionChanged != null) {
            dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
          }
          this.triggerNullCallback();
        } else {
          t31$2 = this.pdfScrollableStateKey.currentState;
          t31$2 == null ? null : t31$2.forcePixels(new ui.Offset.new((this.pdfViewerController.scrollOffset.dx + -details.delta.dx * 2)[$abs](), this.pdfViewerController.scrollOffset.dy));
        }
      }
    }
    handleDragEnd(details) {
      if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        if (this.getSelectionDetails().isCursorExit) {
          this.getSelectionDetails().isCursorExit = false;
        }
        this.onTextSelectionDragEnded();
        this.triggerValueCallback();
      }
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
        if (this[_startBubbleDragging]) {
          this[_startBubbleDragging] = false;
          this.onTextSelectionDragEnded();
          this.triggerValueCallback();
        }
        if (this[_endBubbleDragging]) {
          this[_endBubbleDragging] = false;
          this.onTextSelectionDragEnded();
          this.triggerValueCallback();
        }
      }
    }
    handleDragDown(details) {
      this[_dragDownDetails] = details.localPosition;
    }
    handleDoubleTapDown(details) {
      pdfviewer_canvas._textSelectionHelper.enableTapSelection = true;
      this[_enableMouseSelection](details, "DoubleTap");
    }
    handleTripleTapDown(details) {
      pdfviewer_canvas._textSelectionHelper.enableTapSelection = true;
      this[_enableMouseSelection](details, "TripleTap");
    }
    [_enableMouseSelection](details, gestureType) {
      if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && this.enableTextSelection && this.interactionMode === enums.PdfInteractionMode.selection) {
        let isTOC = this.findTOC(ui.Offset.as(dart.dload(details, 'localPosition')));
        pdfviewer_canvas._textSelectionHelper.initialScrollOffset = 0.0;
        pdfviewer_canvas._textSelectionHelper.finalScrollOffset = 0.0;
        if (dart.equals(dart.dload(details, 'kind'), ui.PointerDeviceKind.mouse) && !isTOC) {
          if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
            let isStartDragPossible = this[_checkStartBubblePosition]();
            let isEndDragPossible = this[_checkEndBubblePosition]();
            if (isStartDragPossible || isEndDragPossible) {
              pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = false;
            } else {
              this.clearSelection();
            }
          }
          if (gestureType === "DragStart" && pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
            pdfviewer_canvas._textSelectionHelper.endBubbleX = core.double.as(dart.dload(dart.dload(details, 'localPosition'), 'dx'));
            pdfviewer_canvas._textSelectionHelper.endBubbleY = core.double.as(dart.dload(dart.dload(details, 'localPosition'), 'dy'));
          }
          if (pdfviewer_canvas._textSelectionHelper.textLines == null || pdfviewer_canvas._textSelectionHelper.viewId !== this.pageIndex) {
            pdfviewer_canvas._textSelectionHelper.viewId = this.pageIndex;
            pdfviewer_canvas._textSelectionHelper.textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: this.pageIndex});
          }
          for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
            let textLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            for (let wordIndex = 0; wordIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).wordCollection[$length]; wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (gestureType === "DragStart") {
                  if (textGlyph.bounds.contains(ui.Offset.as(dart.dload(details, 'localPosition')))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                    this[_enableSelection](gestureType);
                  }
                } else if (gestureType === "DoubleTap") {
                  this.triggerNullCallback();
                  if (textWord.bounds.contains(ui.Offset.as(dart.dload(details, 'localPosition')))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textWord.glyphs[$first];
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textWord.glyphs[$last].bounds.right;
                    pdfviewer_canvas._textSelectionHelper.endBubbleY = textWord.glyphs[$last].bounds.bottom;
                    this[_enableSelection](gestureType);
                  }
                } else if (gestureType === "TripleTap") {
                  this.triggerNullCallback();
                  if (textLine.bounds.contains(ui.Offset.as(dart.dload(details, 'localPosition')))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textLine.wordCollection[$first].glyphs[$first];
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textLine.wordCollection[$last].bounds.right;
                    pdfviewer_canvas._textSelectionHelper.endBubbleY = textLine.wordCollection[$last].bounds.bottom;
                    this[_enableSelection](gestureType);
                  }
                }
              }
            }
          }
        }
      }
    }
    [_enableSelection](gestureType) {
      if (!pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
        if (gestureType === "DragStart") {
          this.clearMouseSelection();
          this.onTextSelectionDragStarted();
        }
        pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = true;
      }
    }
    triggerNullCallback() {
      if (this.onTextSelectionChanged != null) {
        dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
    }
    triggerValueCallback() {
      if (this.onTextSelectionChanged != null) {
        dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(pdfviewer_canvas._textSelectionHelper.copiedText, pdfviewer_canvas._textSelectionHelper.globalSelectedRegion));
      }
    }
    scrollStarted() {
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled || pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        this.triggerNullCallback();
      }
    }
    scrollEnded() {
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled || pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        this.triggerValueCallback();
      }
    }
    updateContextMenuPosition() {
      this.scrollStarted();
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled || pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        let top = null;
        let bottom = null;
        if (pdfviewer_helper.kIsDesktop && !this.isMobileWebView && pdfviewer_canvas._textSelectionHelper.globalSelectedRegion != null) {
          top = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).top;
          bottom = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).bottom;
        } else {
          let _heightPercentage = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
          top = pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph != null ? dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds.top / _heightPercentage : 0.0;
          bottom = pdfviewer_canvas._textSelectionHelper.endBubbleY != null ? dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage : 0.0;
        }
        async.Future.delayed(C[65] || CT.C65, dart.fn(() => async.async(core.Null, (function*() {
          if (dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset + bottom >= this.pdfViewerController.scrollOffset.dy && dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset + bottom <= this.pdfViewerController.scrollOffset.dy + this.paintBounds.height || dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset + top >= this.pdfViewerController.scrollOffset.dy && dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset + top <= this.pdfViewerController.scrollOffset.dy + this.paintBounds.height) {
            this.triggerValueCallback();
          }
        }).bind(this)), T.VoidToFutureOfNull()));
      }
    }
    [_updateSelectionPan](details) {
      let t31, t31$;
      let helper = this.getSelectionDetails();
      let currentOffset = (t31$ = (t31 = this.pdfScrollableStateKey.currentState, t31 == null ? null : t31.currentOffset.dy), t31$ == null ? 0.0 : t31$);
      if (this.viewportGlobalRect != null && !dart.nullCheck(this.viewportGlobalRect).contains(details.globalPosition) && details.globalPosition.dx <= dart.nullCheck(this.viewportGlobalRect).right && details.globalPosition.dx >= dart.nullCheck(this.viewportGlobalRect).left) {
        if (details.globalPosition.dy <= dart.nullCheck(this.viewportGlobalRect).top) {
          helper.isCursorReachedTop = true;
        } else {
          helper.isCursorReachedTop = false;
        }
        helper.isCursorExit = true;
        if (helper.initialScrollOffset === 0) {
          helper.initialScrollOffset = currentOffset;
        }
      } else if (helper.isCursorExit) {
        if (helper.isCursorReachedTop) {
          helper.finalScrollOffset = currentOffset - this[_jumpOffset];
        } else {
          helper.finalScrollOffset = currentOffset + this[_jumpOffset];
        }
        helper.isCursorExit = false;
      }
    }
    [_checkStartBubblePosition]() {
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled && this[_dragDownDetails] != null) {
        let startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        let startBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        if (dart.nullCheck(this[_dragDownDetails]).dx >= startBubbleX - this[_bubbleSize] * this[_maximumZoomLevel] && dart.nullCheck(this[_dragDownDetails]).dx <= startBubbleX && dart.nullCheck(this[_dragDownDetails]).dy >= startBubbleY - this[_bubbleSize] && dart.nullCheck(this[_dragDownDetails]).dy <= startBubbleY + this[_bubbleSize]) {
          return true;
        }
      }
      return false;
    }
    [_checkEndBubblePosition]() {
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled && this[_dragDownDetails] != null) {
        let endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        let endBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        if (dart.nullCheck(this[_dragDownDetails]).dx >= endBubbleX && dart.nullCheck(this[_dragDownDetails]).dx <= endBubbleX + this[_bubbleSize] * this[_maximumZoomLevel] && dart.nullCheck(this[_dragDownDetails]).dy >= endBubbleY - this[_bubbleSize] && dart.nullCheck(this[_dragDownDetails]).dy <= endBubbleY + this[_bubbleSize]) {
          return true;
        }
      }
      return false;
    }
    [_sortTextLines]() {
      if (pdfviewer_canvas._textSelectionHelper.textLines != null) {
        for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
          for (let index = textLineIndex + 1; index < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; index = index + 1) {
            if (dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).bounds.bottom > dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](index).bounds.bottom) {
              let textLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_set](textLineIndex, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](index));
              dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_set](index, textLine);
            }
          }
        }
      }
    }
    enableSelection() {
      if (this.enableTextSelection) {
        if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
          this.clearSelection();
        }
        this[_longPressed] = true;
        pdfviewer_canvas._textSelectionHelper.viewId = this.pageIndex;
        this.markNeedsPaint();
      }
    }
    [_ensureHistoryEntry$]() {
      async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
        this.triggerValueCallback();
        if ((!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.isMobileWebView) && pdfviewer_canvas._textSelectionHelper.historyEntry == null) {
          let route = routes.ModalRoute.of(T.ObjectN(), this.context);
          if (route != null) {
            pdfviewer_canvas._textSelectionHelper.historyEntry = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved$)});
            route.addLocalHistoryEntry(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.historyEntry));
          }
        }
      }).bind(this)), T.VoidToFutureOfNull()));
    }
    [_handleHistoryEntryRemoved$]() {
      if (this.textCollection != null && pdfviewer_canvas._textSelectionHelper.historyEntry != null) {
        navigator.Navigator.of(this.context).maybePop(T.ObjectN());
      }
      pdfviewer_canvas._textSelectionHelper.historyEntry = null;
      this.clearSelection();
    }
    clearSelection() {
      this.clearMouseSelection();
      let clearTextSelection = !pdfviewer_canvas._textSelectionHelper.selectionEnabled;
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
        pdfviewer_canvas._textSelectionHelper.selectionEnabled = false;
        if ((!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.isMobileWebView) && pdfviewer_canvas._textSelectionHelper.historyEntry != null && navigator.Navigator.canPop(this.context)) {
          pdfviewer_canvas._textSelectionHelper.historyEntry = null;
          navigator.Navigator.of(this.context).maybePop(T.ObjectN());
        }
        this.markNeedsPaint();
        this.triggerNullCallback();
        if (!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.isMobileWebView) {
          this.dispose();
        }
      }
      return clearTextSelection;
    }
    dispose() {
      this.disposeMouseSelection();
      pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleX = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleY = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleX = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleY = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleLine = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleLine = null;
      pdfviewer_canvas._textSelectionHelper.heightPercentage = null;
    }
    findTextWhileHover(details) {
      if (pdfviewer_canvas._textSelectionHelper.cursorTextLines == null || pdfviewer_canvas._textSelectionHelper.cursorPageNumber !== this.pageIndex) {
        pdfviewer_canvas._textSelectionHelper.cursorPageNumber = this.pageIndex;
        pdfviewer_canvas._textSelectionHelper.cursorTextLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: this.pageIndex});
      }
      if (pdfviewer_canvas._textSelectionHelper.cursorTextLines != null) {
        for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$length]; textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$_get](textLineIndex);
          for (let wordIndex = 0; wordIndex < line.wordCollection[$length]; wordIndex = wordIndex + 1) {
            let textWord = line.wordCollection[$_get](wordIndex);
            for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
              if (textWord.glyphs[$_get](glyphIndex).bounds.contains(details)) {
                return textWord.glyphs[$_get](glyphIndex);
              }
            }
          }
        }
      }
      return null;
    }
    findTOC(details) {
      if (pdfviewer_canvas._textSelectionHelper.cursorPageNumber !== this.pageIndex) {
        pdfviewer_canvas._textSelectionHelper.cursorPageNumber = this.pageIndex;
      }
      let page = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorPageNumber));
      for (let index = 0; index < page.annotations.count; index = index + 1) {
        if (pdf.PdfDocumentLinkAnnotation.is(page.annotations._get(index))) {
          this[_documentLinkAnnotation] = pdf.PdfDocumentLinkAnnotation.as(page.annotations._get(index));
          if (details.dy >= dart.nullCheck(this[_documentLinkAnnotation]).bounds.top && details.dy <= dart.nullCheck(this[_documentLinkAnnotation]).bounds.bottom && details.dx >= dart.nullCheck(this[_documentLinkAnnotation]).bounds.left && details.dx <= dart.nullCheck(this[_documentLinkAnnotation]).bounds.right) {
            return true;
          }
        }
      }
      return false;
    }
    getSelectionDetails() {
      return pdfviewer_canvas._textSelectionHelper;
    }
    clearMouseSelection() {
      if ((!pdfviewer_canvas._textSelectionHelper.enableTapSelection || pdfviewer_canvas._textSelectionHelper.globalSelectedRegion != null && this[_tapDetails] != null && !dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).contains(dart.nullCheck(this[_tapDetails]))) && pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = false;
        this.markNeedsPaint();
        this.triggerNullCallback();
      } else {
        pdfviewer_canvas._textSelectionHelper.enableTapSelection = false;
      }
    }
    checkGlyphInRegion(textGlyph, startGlyph, details) {
      let glyphCenterX = textGlyph.bounds.center.dx;
      let glyphCenterY = textGlyph.bounds.center.dy;
      let top = startGlyph.bounds.top;
      let bottom = startGlyph.bounds.bottom;
      if (glyphCenterY > top && glyphCenterY < details.dy && (glyphCenterX > startGlyph.bounds.left || glyphCenterY > bottom) && (textGlyph.bounds.bottom < details.dy || glyphCenterX < details.dx)) {
        return true;
      }
      if (details.dy < top || details.dy < bottom && details.dx < startGlyph.bounds.left) {
        if (glyphCenterY > details.dy && glyphCenterY < bottom && (glyphCenterX > details.dx || textGlyph.bounds.top > details.dy) && (textGlyph.bounds.bottom < top || glyphCenterX < startGlyph.bounds.left)) {
          return true;
        }
      }
      return false;
    }
    disposeMouseSelection() {
      pdfviewer_canvas._textSelectionHelper.textLines = null;
      pdfviewer_canvas._textSelectionHelper.viewId = null;
      pdfviewer_canvas._textSelectionHelper.copiedText = null;
      pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = null;
    }
    [_drawStartBubble](canvas, bubblePaint, startBubbleOffset) {
      canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(startBubbleOffset.dx - this[_bubbleSize] / this[_zoomPercentage], startBubbleOffset.dy, startBubbleOffset.dx, startBubbleOffset.dy + this[_bubbleSize] / this[_zoomPercentage], {topLeft: C[66] || CT.C66, topRight: C[67] || CT.C67, bottomRight: C[66] || CT.C66, bottomLeft: C[66] || CT.C66}), bubblePaint);
    }
    [_drawEndBubble](canvas, bubblePaint, endBubbleOffset) {
      canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(endBubbleOffset.dx, endBubbleOffset.dy, endBubbleOffset.dx + this[_bubbleSize] / this[_zoomPercentage], endBubbleOffset.dy + this[_bubbleSize] / this[_zoomPercentage], {topLeft: C[67] || CT.C67, topRight: C[66] || CT.C66, bottomRight: C[66] || CT.C66, bottomLeft: C[66] || CT.C66}), bubblePaint);
    }
    [_drawTextRect](canvas, textPaint, textRectOffset) {
      canvas.drawRect(textRectOffset, textPaint);
    }
    computeDryLayout(constraints) {
      return constraints.biggest;
    }
    getSelectedTextLines() {
      if (pdfviewer_canvas._textSelectionHelper.selectionEnabled || pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) {
        return pdfviewer_canvas._textSelectionHelper.selectedTextLines;
      }
      return null;
    }
    paint(context, offset) {
      let t31, t31$, t31$0, t31$1, t31$2, t31$3, t31$4, t31$5, t31$6;
      if (this.pdfDocument == null) {
        return;
      }
      let canvas = context.canvas;
      let theme = theme$.Theme.of(this.context);
      let selectionTheme = text_selection_theme.TextSelectionTheme.of(this.context);
      let cupertinoTheme = theme$0.CupertinoTheme.of(this.context);
      switch (theme.platform) {
        case C[68] || CT.C68:
        case C[69] || CT.C69:
        {
          this[_selectionColor] == null ? this[_selectionColor] = (t31 = selectionTheme.selectionColor, t31 == null ? cupertinoTheme.primaryColor.withOpacity(0.4) : t31) : null;
          this[_selectionHandleColor] == null ? this[_selectionHandleColor] = (t31$ = selectionTheme.selectionHandleColor, t31$ == null ? cupertinoTheme.primaryColor : t31$) : null;
          break;
        }
        case C[70] || CT.C70:
        case C[71] || CT.C71:
        case C[72] || CT.C72:
        case C[73] || CT.C73:
        {
          this[_selectionColor] == null ? this[_selectionColor] = (t31$0 = selectionTheme.selectionColor, t31$0 == null ? theme.colorScheme.primary.withOpacity(0.4) : t31$0) : null;
          this[_selectionHandleColor] == null ? this[_selectionHandleColor] = (t31$1 = selectionTheme.selectionHandleColor, t31$1 == null ? theme.colorScheme.primary : t31$1) : null;
          break;
        }
      }
      let textPaint = (t31$2 = ui.Paint.new(), (() => {
        t31$2.color = dart.nullCheck(this[_selectionColor]);
        return t31$2;
      })());
      let bubblePaint = (t31$3 = ui.Paint.new(), (() => {
        t31$3.color = dart.nullCheck(this[_selectionHandleColor]);
        return t31$3;
      })());
      this[_zoomPercentage] = this.pdfViewerController.zoomLevel > this[_maximumZoomLevel] ? this[_maximumZoomLevel] : this.pdfViewerController.zoomLevel;
      if (pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled && pdfviewer_canvas._textSelectionHelper.textLines != null && pdfviewer_canvas._textSelectionHelper.endBubbleX != null && pdfviewer_canvas._textSelectionHelper.endBubbleY != null) {
        let startGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph);
        let details = new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX), dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY));
        if (pdfviewer_canvas._textSelectionHelper.viewId === this.pageIndex) {
          pdfviewer_canvas._textSelectionHelper.copiedText = "";
          pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
          for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
            let textLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            let startPoint = null;
            let endPoint = null;
            let glyphText = "";
            for (let wordIndex = 0; wordIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).wordCollection[$length]; wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                let canSelectGlyph = this.checkGlyphInRegion(textGlyph, startGlyph, details);
                if (canSelectGlyph) {
                  startPoint == null ? startPoint = textGlyph.bounds : null;
                  endPoint = textGlyph.bounds;
                  glyphText = glyphText + textGlyph.text;
                  pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + textGlyph.text;
                  let textRectOffset = offset.translate(textGlyph.bounds.left, textGlyph.bounds.top)['&'](new ui.Size.new(textGlyph.bounds.width, textGlyph.bounds.height));
                  canvas.drawRect(textRectOffset, textPaint);
                }
                if (startPoint != null && endPoint != null && textGlyph[$_equals](textLine.wordCollection[$last].glyphs[$last])) {
                  pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(new ui.Rect.fromLTRB(startPoint.left, startPoint.top, endPoint.right, endPoint.bottom), glyphText, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
                  let startOffset = new ui.Offset.new(startGlyph.bounds.left, startGlyph.bounds.top);
                  let endOffset = new ui.Offset.new(endPoint.right, endPoint.bottom);
                  if (details.dy < startGlyph.bounds.top) {
                    startOffset = new ui.Offset.new(details.dx, details.dy);
                  }
                  pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(startOffset), this.localToGlobal(endOffset));
                }
              }
            }
          }
        }
      }
      if (this.pageIndex === this[_viewId]) {
        if (this[_isTOCTapped]) {
          let heightPercentage = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.height / this.height;
          let wordPaint = (t31$4 = ui.Paint.new(), (() => {
            t31$4.color = C[74] || CT.C74;
            return t31$4;
          })());
          canvas.drawRect(offset.translate(dart.nullCheck(this[_documentLinkAnnotation]).bounds.left / heightPercentage, dart.nullCheck(this[_documentLinkAnnotation]).bounds.top / heightPercentage)['&'](new ui.Size.new(dart.nullCheck(this[_documentLinkAnnotation]).bounds.width / heightPercentage, dart.nullCheck(this[_documentLinkAnnotation]).bounds.height / heightPercentage)), wordPaint);
          async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
            this.pdfViewerController.jumpTo({yOffset: this[_totalPageOffset]});
          }).bind(this)), T.VoidToFutureOfNull()));
          this[_isTOCTapped] = false;
        }
      }
      if (this.textCollection != null && !pdfviewer_canvas._textSelectionHelper.selectionEnabled) {
        let searchTextPaint = (t31$5 = ui.Paint.new(), (() => {
          t31$5.color = this.searchTextHighlightColor.withOpacity(0.3);
          return t31$5;
        })());
        let currentInstancePaint = (t31$6 = ui.Paint.new(), (() => {
          t31$6.color = this.searchTextHighlightColor.withOpacity(0.6);
          return t31$6;
        })());
        let _pageNumber = 0;
        for (let i = 0; i < dart.nullCheck(this.textCollection)[$length]; i = i + 1) {
          let item = dart.nullCheck(this.textCollection)[$_get](i);
          let _heightPercentage = dart.nullCheck(this.pdfDocument).pages._get(item.pageIndex).size.height / this.height;
          if (this.pageIndex === item.pageIndex) {
            canvas.drawRect(offset.translate(dart.nullCheck(this.textCollection)[$_get](i).bounds.left / _heightPercentage, dart.nullCheck(this.textCollection)[$_get](i).bounds.top / _heightPercentage)['&'](new ui.Size.new(dart.nullCheck(this.textCollection)[$_get](i).bounds.width / _heightPercentage, dart.nullCheck(this.textCollection)[$_get](i).bounds.height / _heightPercentage)), searchTextPaint);
          }
          if (dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).pageIndex === this.pageIndex) {
            if (dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).pageIndex + 1 !== _pageNumber) {
              canvas.drawRect(offset.translate(dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).bounds.left / _heightPercentage, dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).bounds.top / _heightPercentage)['&'](new ui.Size.new(dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).bounds.width / _heightPercentage, dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).bounds.height / _heightPercentage)), currentInstancePaint);
              _pageNumber = dart.nullCheck(this.textCollection)[$_get](this.pdfTextSearchResult.currentInstanceIndex - 1).pageIndex + 1;
            }
          } else if (item.pageIndex > this.pageIndex) {
            break;
          }
        }
      }
      if (this[_longPressed]) {
        let _heightPercentage = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height / this.height;
        pdfviewer_canvas._textSelectionHelper.heightPercentage = _heightPercentage;
        pdfviewer_canvas._textSelectionHelper.textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: pdfviewer_canvas._textSelectionHelper.viewId});
        for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
          let textWordCollection = line.wordCollection;
          for (let wordIndex = 0; wordIndex < textWordCollection[$length]; wordIndex = wordIndex + 1) {
            let textWord = textWordCollection[$_get](wordIndex);
            let wordBounds = textWord.bounds;
            if (this[_tapDetails] != null && wordBounds.contains(dart.nullCheck(this[_tapDetails])['*'](_heightPercentage))) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              pdfviewer_canvas._textSelectionHelper.copiedText = textWord.text;
              pdfviewer_canvas._textSelectionHelper.endBubbleLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              this[_startBubbleTapX] = textWord.bounds.bottomLeft.dx / _heightPercentage;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = textWord.bounds.bottomLeft.dy;
              this[_endBubbleTapX] = textWord.bounds.bottomRight.dx / _heightPercentage;
              pdfviewer_canvas._textSelectionHelper.endBubbleY = textWord.bounds.bottomRight.dy;
              pdfviewer_canvas._textSelectionHelper.startBubbleX = textWord.bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.endBubbleX = textWord.bounds.bottomRight.dx;
              let textRectOffset = offset.translate(textWord.bounds.left / _heightPercentage, textWord.bounds.top / _heightPercentage)['&'](new ui.Size.new(wordBounds.width / _heightPercentage, wordBounds.height / _heightPercentage));
              this[_drawTextRect](canvas, textPaint, textRectOffset);
              let startBubbleOffset = offset.translate(textWord.bounds.bottomLeft.dx / _heightPercentage, textWord.bounds.bottomLeft.dy / _heightPercentage);
              let endBubbleOffset = offset.translate(textWord.bounds.bottomRight.dx / _heightPercentage, textWord.bounds.bottomRight.dy / _heightPercentage);
              this[_drawStartBubble](canvas, bubblePaint, startBubbleOffset);
              this[_drawEndBubble](canvas, bubblePaint, endBubbleOffset);
              pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(new ui.Offset.new(textWord.bounds.topLeft.dx / _heightPercentage, textWord.bounds.topLeft.dy / _heightPercentage)), this.localToGlobal(new ui.Offset.new(textWord.bounds.bottomRight.dx / _heightPercentage, textWord.bounds.bottomRight.dy / _heightPercentage)));
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textWord.glyphs[$first];
              pdfviewer_canvas._textSelectionHelper.selectionEnabled = true;
              pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
              pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(textWord.bounds, textWord.text, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
              this[_ensureHistoryEntry$]();
              this[_sortTextLines]();
            }
          }
        }
        this[_longPressed] = false;
      } else if (pdfviewer_canvas._textSelectionHelper.selectionEnabled && this.pageIndex === pdfviewer_canvas._textSelectionHelper.viewId) {
        let _heightPercentage = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height / this.height;
        pdfviewer_canvas._textSelectionHelper.heightPercentage = _heightPercentage;
        if (this[_startBubbleDragging]) {
          for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
            let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            if (this[_dragDetails] != null && dart.nullCheck(this[_dragDetails]).dy <= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage && dart.nullCheck(this[_dragDetails]).dy >= line.bounds.top / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = line;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = line.bounds.bottomLeft.dy;
            }
            if (this[_dragDetails] != null && dart.nullCheck(this[_dragDetails]).dy >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = pdfviewer_canvas._textSelectionHelper.endBubbleLine;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom;
            }
            for (let wordIndex = 0; wordIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$length]; wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (this[_startBubbleTapX] >= textGlyph.bounds.bottomLeft.dx / _heightPercentage && this[_startBubbleTapX] <= textGlyph.bounds.bottomRight.dx / _heightPercentage) {
                  pdfviewer_canvas._textSelectionHelper.startBubbleX = textGlyph.bounds.bottomLeft.dx;
                  pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                }
              }
            }
            if (this[_startBubbleTapX] < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomLeft.dx / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$first].glyphs[$first];
            }
            if (this[_startBubbleTapX] >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomRight.dx / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$last].glyphs[$last].bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$last].glyphs[$last];
            }
            if (dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom / _heightPercentage && this[_startBubbleTapX] >= this[_endBubbleTapX]) {
              for (let wordIndex = 0; wordIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$length]; wordIndex = wordIndex + 1) {
                let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$_get](wordIndex);
                for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
                  let textGlyph = textWord.glyphs[$_get](glyphIndex);
                  if (textGlyph.bounds.bottomRight.dx / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage) {
                    pdfviewer_canvas._textSelectionHelper.startBubbleX = textGlyph.bounds.bottomLeft.dx;
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                    break;
                  }
                }
              }
            }
          }
        } else if (this[_endBubbleDragging]) {
          for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
            let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            if (this[_dragDetails] != null && dart.nullCheck(this[_dragDetails]).dy >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.top / _heightPercentage && dart.nullCheck(this[_dragDetails]).dy >= line.bounds.topLeft.dy / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.endBubbleLine = line;
              pdfviewer_canvas._textSelectionHelper.endBubbleY = line.bounds.bottomRight.dy;
            }
            for (let wordIndex = 0; wordIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$length]; wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (this[_endBubbleTapX] >= textGlyph.bounds.bottomLeft.dx / _heightPercentage && this[_endBubbleTapX] <= textGlyph.bounds.bottomRight.dx / _heightPercentage) {
                  pdfviewer_canvas._textSelectionHelper.endBubbleX = textGlyph.bounds.bottomRight.dx;
                }
              }
            }
            if (this[_endBubbleTapX][$floor]() > (dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomRight.dx / _heightPercentage)[$floor]()) {
              pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomRight.dx;
            }
            if (this[_endBubbleTapX][$floor]() <= (dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomLeft.dx / _heightPercentage)[$floor]()) {
              pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$first].glyphs[$first].bounds.bottomRight.dx;
            }
            if (dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom / _heightPercentage && this[_endBubbleTapX] < this[_startBubbleTapX]) {
              for (let wordIndex = 0; wordIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$length]; wordIndex = wordIndex + 1) {
                let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$_get](wordIndex);
                for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
                  let textGlyph = textWord.glyphs[$_get](glyphIndex);
                  if (textGlyph.bounds.bottomLeft.dx / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage) {
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textGlyph.bounds.bottomRight.dx;
                    break;
                  }
                }
              }
            }
          }
        }
        pdfviewer_canvas._textSelectionHelper.copiedText = "";
        pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
        for (let textLineIndex = 0; textLineIndex < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]; textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
          let startPoint = null;
          let endPoint = null;
          let glyphText = "";
          let textWordCollection = line.wordCollection;
          for (let wordIndex = 0; wordIndex < textWordCollection[$length]; wordIndex = wordIndex + 1) {
            let textWord = textWordCollection[$_get](wordIndex);
            for (let glyphIndex = 0; glyphIndex < textWord.glyphs[$length]; glyphIndex = glyphIndex + 1) {
              let glyph = textWord.glyphs[$_get](glyphIndex);
              if (glyph.bounds.bottom / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom / _heightPercentage) {
                if (glyph.bounds.bottomCenter.dx / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage && glyph.bounds.bottomCenter.dx / _heightPercentage < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage || glyph.bounds.bottomCenter.dx / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage && dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage > glyph.bounds.bottom / _heightPercentage) {
                  startPoint == null ? startPoint = glyph.bounds : null;
                  endPoint = glyph.bounds;
                  glyphText = glyphText + glyph.text;
                  pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + glyph.text;
                  let textRectOffset = offset.translate(glyph.bounds.left / _heightPercentage, glyph.bounds.top / _heightPercentage)['&'](new ui.Size.new(glyph.bounds.width / _heightPercentage, glyph.bounds.height / _heightPercentage));
                  this[_drawTextRect](canvas, textPaint, textRectOffset);
                }
              } else if (glyph.bounds.bottomLeft.dy / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / _heightPercentage && dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage > glyph.bounds.bottomCenter.dx / _heightPercentage && dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage > glyph.bounds.top / _heightPercentage || dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage > glyph.bounds.bottom / _heightPercentage && glyph.bounds.bottomLeft.dy / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / _heightPercentage) {
                startPoint == null ? startPoint = glyph.bounds : null;
                endPoint = glyph.bounds;
                glyphText = glyphText + glyph.text;
                pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + glyph.text;
                let textRectOffset = offset.translate(glyph.bounds.left / _heightPercentage, glyph.bounds.top / _heightPercentage)['&'](new ui.Size.new(glyph.bounds.width / _heightPercentage, glyph.bounds.height / _heightPercentage));
                this[_drawTextRect](canvas, textPaint, textRectOffset);
              }
              if (startPoint != null && endPoint != null && glyph[$_equals](line.wordCollection[$last].glyphs[$last])) {
                pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(new ui.Rect.fromLTRB(startPoint.left, startPoint.top, endPoint.right, endPoint.bottom), glyphText, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
              }
            }
          }
        }
        let startBubbleOffset = offset.translate(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / _heightPercentage);
        let endBubbleOffset = offset.translate(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage);
        this[_drawStartBubble](canvas, bubblePaint, startBubbleOffset);
        this[_drawEndBubble](canvas, bubblePaint, endBubbleOffset);
        pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds.left / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds.top / _heightPercentage)), this.localToGlobal(new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage)));
      }
    }
  };
  (pdfviewer_canvas.CanvasRenderBox.new = function(height, width, context, pdfDocument, pdfPages, pageIndex, interactionMode, pdfViewerController, enableDocumentLinkNavigation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, onDocumentLinkNavigationInvoked, textCollection, searchTextHighlightColor, isMobileWebView, pdfTextSearchResult, pdfScrollableStateKey, viewportGlobalRect) {
    let t7, t7$, t7$0, t7$1;
    this[__CanvasRenderBox_height] = null;
    this[__CanvasRenderBox_width] = null;
    this[__CanvasRenderBox_pageIndex] = null;
    this[__CanvasRenderBox_pdfDocument] = null;
    this[__CanvasRenderBox_pdfDocument_isSet] = false;
    this[__CanvasRenderBox_context] = null;
    this[__CanvasRenderBox_enableTextSelection] = null;
    this[__CanvasRenderBox_enableDocumentLinkNavigation] = null;
    this[__CanvasRenderBox_pdfPages] = null;
    this[__CanvasRenderBox_pdfViewerController] = null;
    this[__CanvasRenderBox_onTextSelectionDragStarted] = null;
    this[__CanvasRenderBox_onTextSelectionDragEnded] = null;
    this[__CanvasRenderBox_onTextSelectionChanged] = null;
    this[__CanvasRenderBox_onTextSelectionChanged_isSet] = false;
    this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] = null;
    this[__CanvasRenderBox_interactionMode] = null;
    this[__CanvasRenderBox_searchTextHighlightColor] = null;
    this[__CanvasRenderBox_textCollection] = null;
    this[__CanvasRenderBox_textCollection_isSet] = false;
    this[__CanvasRenderBox_pdfTextSearchResult] = null;
    this[__CanvasRenderBox_isMobileWebView] = null;
    this[_viewId] = null;
    this[__CanvasRenderBox__totalPageOffset] = null;
    this[_isTOCTapped] = false;
    this[_isMousePointer] = false;
    this[_startBubbleTapX] = 0.0;
    this[_endBubbleTapX] = 0.0;
    this[_bubbleSize] = 16.0;
    this[_jumpOffset] = 10.0;
    this[_maximumZoomLevel] = 2.0;
    this[_longPressed] = false;
    this[_startBubbleDragging] = false;
    this[_endBubbleDragging] = false;
    this[_zoomPercentage] = 0.0;
    this[_tapDetails] = null;
    this[_dragDetails] = null;
    this[_dragDownDetails] = null;
    this[_selectionColor] = null;
    this[_selectionHandleColor] = null;
    this[__CanvasRenderBox__tapRecognizer] = null;
    this[__CanvasRenderBox__dragRecognizer] = null;
    this[__CanvasRenderBox__longPressRecognizer] = null;
    this[__CanvasRenderBox__verticalDragRecognizer] = null;
    this[__CanvasRenderBox__documentLinkAnnotation] = null;
    this[__CanvasRenderBox__documentLinkAnnotation_isSet] = false;
    this[__CanvasRenderBox_height] = height;
    this[__CanvasRenderBox_width] = width;
    this[__CanvasRenderBox_context] = context;
    this[__CanvasRenderBox_pdfDocument_isSet] = true;
    this[__CanvasRenderBox_pdfDocument] = pdfDocument;
    this[__CanvasRenderBox_pdfPages] = pdfPages;
    this[__CanvasRenderBox_pageIndex] = pageIndex;
    this[__CanvasRenderBox_interactionMode] = interactionMode;
    this[__CanvasRenderBox_pdfViewerController] = pdfViewerController;
    this[__CanvasRenderBox_enableDocumentLinkNavigation] = enableDocumentLinkNavigation;
    this[__CanvasRenderBox_enableTextSelection] = enableTextSelection;
    this[__CanvasRenderBox_onTextSelectionChanged_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionChanged] = onTextSelectionChanged;
    this[__CanvasRenderBox_onTextSelectionDragStarted] = onTextSelectionDragStarted;
    this[__CanvasRenderBox_onTextSelectionDragEnded] = onTextSelectionDragEnded;
    this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] = onDocumentLinkNavigationInvoked;
    this[__CanvasRenderBox_textCollection_isSet] = true;
    this[__CanvasRenderBox_textCollection] = textCollection;
    this[__CanvasRenderBox_searchTextHighlightColor] = searchTextHighlightColor;
    this[__CanvasRenderBox_isMobileWebView] = isMobileWebView;
    this[__CanvasRenderBox_pdfTextSearchResult] = pdfTextSearchResult;
    this[pdfScrollableStateKey$0] = pdfScrollableStateKey;
    this[viewportGlobalRect$0] = viewportGlobalRect;
    pdfviewer_canvas.CanvasRenderBox.__proto__.new.call(this);
    let team = new team$.GestureArenaTeam.new();
    this[_tapRecognizer] = (t7 = new tap.TapGestureRecognizer.new(), (() => {
      t7.onTapUp = dart.bind(this, 'handleTapUp');
      t7.onTapDown = dart.bind(this, 'handleTapDown');
      return t7;
    })());
    this[_longPressRecognizer] = (t7$ = new long_press.LongPressGestureRecognizer.new(), (() => {
      t7$.onLongPressStart = dart.bind(this, 'handleLongPressStart');
      return t7$;
    })());
    this[_dragRecognizer] = (t7$0 = new monodrag.HorizontalDragGestureRecognizer.new(), (() => {
      t7$0.team = team;
      t7$0.onStart = dart.bind(this, 'handleDragStart');
      t7$0.onUpdate = dart.bind(this, 'handleDragUpdate');
      t7$0.onEnd = dart.bind(this, 'handleDragEnd');
      t7$0.onDown = dart.bind(this, 'handleDragDown');
      return t7$0;
    })());
    this[_verticalDragRecognizer] = (t7$1 = new monodrag.VerticalDragGestureRecognizer.new(), (() => {
      t7$1.team = team;
      t7$1.onStart = dart.bind(this, 'handleDragStart');
      t7$1.onUpdate = dart.bind(this, 'handleDragUpdate');
      t7$1.onEnd = dart.bind(this, 'handleDragEnd');
      return t7$1;
    })());
  }).prototype = pdfviewer_canvas.CanvasRenderBox.prototype;
  dart.addTypeTests(pdfviewer_canvas.CanvasRenderBox);
  dart.addTypeCaches(pdfviewer_canvas.CanvasRenderBox);
  dart.setMethodSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getMethods(pdfviewer_canvas.CanvasRenderBox.__proto__),
    handleTapUp: dart.fnType(dart.void, [tap.TapUpDetails]),
    handleTapDown: dart.fnType(dart.void, [tap.TapDownDetails]),
    handleLongPressStart: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    handleDragStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    handleDragUpdate: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    handleDragEnd: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    handleDragDown: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    handleDoubleTapDown: dart.fnType(dart.void, [events.PointerDownEvent]),
    handleTripleTapDown: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_enableMouseSelection]: dart.fnType(dart.void, [dart.dynamic, core.String]),
    [_enableSelection]: dart.fnType(dart.void, [core.String]),
    triggerNullCallback: dart.fnType(dart.void, []),
    triggerValueCallback: dart.fnType(dart.void, []),
    scrollStarted: dart.fnType(dart.void, []),
    scrollEnded: dart.fnType(dart.void, []),
    updateContextMenuPosition: dart.fnType(dart.void, []),
    [_updateSelectionPan]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_checkStartBubblePosition]: dart.fnType(core.bool, []),
    [_checkEndBubblePosition]: dart.fnType(core.bool, []),
    [_sortTextLines]: dart.fnType(dart.void, []),
    enableSelection: dart.fnType(dart.void, []),
    [_ensureHistoryEntry$]: dart.fnType(dart.void, []),
    [_handleHistoryEntryRemoved$]: dart.fnType(dart.void, []),
    clearSelection: dart.fnType(core.bool, []),
    dispose: dart.fnType(dart.void, []),
    findTextWhileHover: dart.fnType(dart.nullable(pdf.TextGlyph), [ui.Offset]),
    findTOC: dart.fnType(core.bool, [ui.Offset]),
    getSelectionDetails: dart.fnType(pdfviewer_helper.TextSelectionHelper, []),
    clearMouseSelection: dart.fnType(dart.void, []),
    checkGlyphInRegion: dart.fnType(core.bool, [pdf.TextGlyph, pdf.TextGlyph, ui.Offset]),
    disposeMouseSelection: dart.fnType(dart.void, []),
    [_drawStartBubble]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Offset]),
    [_drawEndBubble]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Offset]),
    [_drawTextRect]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Rect]),
    getSelectedTextLines: dart.fnType(dart.nullable(core.List$(pdftextline.PdfTextLine)), [])
  }));
  dart.setGetterSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getGetters(pdfviewer_canvas.CanvasRenderBox.__proto__),
    height: core.double,
    width: core.double,
    pageIndex: core.int,
    pdfDocument: dart.nullable(pdf.PdfDocument),
    context: framework.BuildContext,
    enableTextSelection: core.bool,
    enableDocumentLinkNavigation: core.bool,
    pdfPages: core.Map$(core.int, pdf_page_view.PdfPageInfo),
    pdfViewerController: pdfviewer.PdfViewerController,
    onTextSelectionDragStarted: dart.fnType(dart.void, []),
    onTextSelectionDragEnded: dart.fnType(dart.void, []),
    onTextSelectionChanged: dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails])),
    onDocumentLinkNavigationInvoked: dart.fnType(dart.dynamic, [core.double]),
    interactionMode: enums.PdfInteractionMode,
    searchTextHighlightColor: ui.Color,
    textCollection: dart.nullable(core.List$(pdf.MatchedItem)),
    pdfTextSearchResult: pdfviewer.PdfTextSearchResult,
    isMobileWebView: core.bool,
    [_totalPageOffset]: core.double,
    [_tapRecognizer]: tap.TapGestureRecognizer,
    [_dragRecognizer]: monodrag.HorizontalDragGestureRecognizer,
    [_longPressRecognizer]: long_press.LongPressGestureRecognizer,
    [_verticalDragRecognizer]: monodrag.VerticalDragGestureRecognizer,
    [_documentLinkAnnotation]: dart.nullable(pdf.PdfDocumentLinkAnnotation)
  }));
  dart.setSetterSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getSetters(pdfviewer_canvas.CanvasRenderBox.__proto__),
    height: core.double,
    width: core.double,
    pageIndex: core.int,
    pdfDocument: dart.nullable(pdf.PdfDocument),
    context: framework.BuildContext,
    enableTextSelection: core.bool,
    enableDocumentLinkNavigation: core.bool,
    pdfPages: core.Map$(core.int, pdf_page_view.PdfPageInfo),
    pdfViewerController: pdfviewer.PdfViewerController,
    onTextSelectionDragStarted: dart.fnType(dart.void, []),
    onTextSelectionDragEnded: dart.fnType(dart.void, []),
    onTextSelectionChanged: dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails])),
    onDocumentLinkNavigationInvoked: dart.fnType(dart.dynamic, [core.double]),
    interactionMode: enums.PdfInteractionMode,
    searchTextHighlightColor: ui.Color,
    textCollection: dart.nullable(core.List$(pdf.MatchedItem)),
    pdfTextSearchResult: pdfviewer.PdfTextSearchResult,
    isMobileWebView: core.bool,
    [_totalPageOffset]: core.double,
    [_tapRecognizer]: tap.TapGestureRecognizer,
    [_dragRecognizer]: monodrag.HorizontalDragGestureRecognizer,
    [_longPressRecognizer]: long_press.LongPressGestureRecognizer,
    [_verticalDragRecognizer]: monodrag.VerticalDragGestureRecognizer,
    [_documentLinkAnnotation]: dart.nullable(pdf.PdfDocumentLinkAnnotation)
  }));
  dart.setLibraryUri(pdfviewer_canvas.CanvasRenderBox, I[3]);
  dart.setFieldSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getFields(pdfviewer_canvas.CanvasRenderBox.__proto__),
    [__CanvasRenderBox_height]: dart.fieldType(dart.nullable(core.double)),
    [__CanvasRenderBox_width]: dart.fieldType(dart.nullable(core.double)),
    [__CanvasRenderBox_pageIndex]: dart.fieldType(dart.nullable(core.int)),
    [__CanvasRenderBox_pdfDocument]: dart.fieldType(dart.nullable(pdf.PdfDocument)),
    [__CanvasRenderBox_pdfDocument_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_context]: dart.fieldType(dart.nullable(framework.BuildContext)),
    [__CanvasRenderBox_enableTextSelection]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_enableDocumentLinkNavigation]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_pdfPages]: dart.fieldType(dart.nullable(core.Map$(core.int, pdf_page_view.PdfPageInfo))),
    [__CanvasRenderBox_pdfViewerController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [__CanvasRenderBox_onTextSelectionDragStarted]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [__CanvasRenderBox_onTextSelectionDragEnded]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [__CanvasRenderBox_onTextSelectionChanged]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    [__CanvasRenderBox_onTextSelectionChanged_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onDocumentLinkNavigationInvoked]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, [core.double]))),
    [__CanvasRenderBox_interactionMode]: dart.fieldType(dart.nullable(enums.PdfInteractionMode)),
    [__CanvasRenderBox_searchTextHighlightColor]: dart.fieldType(dart.nullable(ui.Color)),
    [__CanvasRenderBox_textCollection]: dart.fieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    [__CanvasRenderBox_textCollection_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfTextSearchResult]: dart.fieldType(dart.nullable(pdfviewer.PdfTextSearchResult)),
    [__CanvasRenderBox_isMobileWebView]: dart.fieldType(dart.nullable(core.bool)),
    pdfScrollableStateKey: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)),
    viewportGlobalRect: dart.finalFieldType(dart.nullable(ui.Rect)),
    [_viewId]: dart.fieldType(dart.nullable(core.int)),
    [__CanvasRenderBox__totalPageOffset]: dart.fieldType(dart.nullable(core.double)),
    [_isTOCTapped]: dart.fieldType(core.bool),
    [_isMousePointer]: dart.fieldType(core.bool),
    [_startBubbleTapX]: dart.fieldType(core.double),
    [_endBubbleTapX]: dart.fieldType(core.double),
    [_bubbleSize]: dart.finalFieldType(core.double),
    [_jumpOffset]: dart.finalFieldType(core.double),
    [_maximumZoomLevel]: dart.finalFieldType(core.double),
    [_longPressed]: dart.fieldType(core.bool),
    [_startBubbleDragging]: dart.fieldType(core.bool),
    [_endBubbleDragging]: dart.fieldType(core.bool),
    [_zoomPercentage]: dart.fieldType(core.double),
    [_tapDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_dragDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_dragDownDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_selectionColor]: dart.fieldType(dart.nullable(ui.Color)),
    [_selectionHandleColor]: dart.fieldType(dart.nullable(ui.Color)),
    [__CanvasRenderBox__tapRecognizer]: dart.fieldType(dart.nullable(tap.TapGestureRecognizer)),
    [__CanvasRenderBox__dragRecognizer]: dart.fieldType(dart.nullable(monodrag.HorizontalDragGestureRecognizer)),
    [__CanvasRenderBox__longPressRecognizer]: dart.fieldType(dart.nullable(long_press.LongPressGestureRecognizer)),
    [__CanvasRenderBox__verticalDragRecognizer]: dart.fieldType(dart.nullable(monodrag.VerticalDragGestureRecognizer)),
    [__CanvasRenderBox__documentLinkAnnotation]: dart.fieldType(dart.nullable(pdf.PdfDocumentLinkAnnotation)),
    [__CanvasRenderBox__documentLinkAnnotation_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(pdfviewer_canvas, {
    /*pdfviewer_canvas._textSelectionHelper*/get _textSelectionHelper() {
      return new pdfviewer_helper.TextSelectionHelper.new();
    },
    set _textSelectionHelper(_) {}
  }, false);
  var pdfViewerController$0 = dart.privateName(scroll_status, "ScrollStatus.pdfViewerController");
  scroll_status.ScrollStatus = class ScrollStatus extends framework.StatefulWidget {
    get pdfViewerController() {
      return this[pdfViewerController$0];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    createState() {
      return new scroll_status._ScrollStatusState.new();
    }
  };
  (scroll_status.ScrollStatus.new = function(pdfViewerController, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfViewerController$0] = pdfViewerController;
    scroll_status.ScrollStatus.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_status.ScrollStatus.prototype;
  dart.addTypeTests(scroll_status.ScrollStatus);
  dart.addTypeCaches(scroll_status.ScrollStatus);
  dart.setMethodSignature(scroll_status.ScrollStatus, () => ({
    __proto__: dart.getMethods(scroll_status.ScrollStatus.__proto__),
    createState: dart.fnType(scroll_status._ScrollStatusState, [])
  }));
  dart.setLibraryUri(scroll_status.ScrollStatus, I[5]);
  dart.setFieldSignature(scroll_status.ScrollStatus, () => ({
    __proto__: dart.getFields(scroll_status.ScrollStatus.__proto__),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController)
  }));
  var _pdfViewerThemeData$ = dart.privateName(scroll_status, "_pdfViewerThemeData");
  var _localizations$ = dart.privateName(scroll_status, "_localizations");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  scroll_status._ScrollStatusState = class _ScrollStatusState extends framework.State$(scroll_status.ScrollStatus) {
    didChangeDependencies() {
      this[_pdfViewerThemeData$] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$] = null;
      this[_localizations$] = null;
      super.dispose();
    }
    build(context) {
      return new basic.Positioned.fill({bottom: 25, child: new basic.Align.new({alignment: alignment.Alignment.bottomCenter, child: new basic.Flex.new({direction: basic_types.Axis.horizontal, mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[75] || CT.C75, constraints: new box.BoxConstraints.new({maxWidth: media_query.MediaQuery.of(context).size.width * 0.7}), decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(this[_pdfViewerThemeData$]).scrollStatusStyle.backgroundColor, borderRadius: C[76] || CT.C76}), child: new text.Text.new(dart.str(this.widget.pdfViewerController.pageNumber) + " " + dart.nullCheck(this[_localizations$]).pdfScrollStatusOfLabel + " " + dart.str(this.widget.pdfViewerController.pageCount), {textAlign: ui.TextAlign.center, style: dart.nullCheck(this[_pdfViewerThemeData$]).scrollStatusStyle.pageInfoTextStyle, $creationLocationd_0dea112b090073317d4: C[78] || CT.C78}), $creationLocationd_0dea112b090073317d4: C[83] || CT.C83})]), $creationLocationd_0dea112b090073317d4: C[89] || CT.C89}), $creationLocationd_0dea112b090073317d4: C[94] || CT.C94}), $creationLocationd_0dea112b090073317d4: C[98] || CT.C98});
    }
  };
  (scroll_status._ScrollStatusState.new = function() {
    this[_pdfViewerThemeData$] = null;
    this[_localizations$] = null;
    scroll_status._ScrollStatusState.__proto__.new.call(this);
    ;
  }).prototype = scroll_status._ScrollStatusState.prototype;
  dart.addTypeTests(scroll_status._ScrollStatusState);
  dart.addTypeCaches(scroll_status._ScrollStatusState);
  dart.setMethodSignature(scroll_status._ScrollStatusState, () => ({
    __proto__: dart.getMethods(scroll_status._ScrollStatusState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_status._ScrollStatusState, I[5]);
  dart.setFieldSignature(scroll_status._ScrollStatusState, () => ({
    __proto__: dart.getFields(scroll_status._ScrollStatusState.__proto__),
    [_pdfViewerThemeData$]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations))
  }));
  dart.defineLazy(scroll_status, {
    /*scroll_status._kPdfScrollStatusBottomPosition*/get _kPdfScrollStatusBottomPosition() {
      return 25;
    }
  }, false);
  var scrollHeadOffset$ = dart.privateName(scroll_head, "ScrollHead.scrollHeadOffset");
  var pdfViewerController$1 = dart.privateName(scroll_head, "ScrollHead.pdfViewerController");
  var isMobileWebView$0 = dart.privateName(scroll_head, "ScrollHead.isMobileWebView");
  scroll_head.ScrollHead = class ScrollHead extends framework.StatefulWidget {
    get scrollHeadOffset() {
      return this[scrollHeadOffset$];
    }
    set scrollHeadOffset(value) {
      super.scrollHeadOffset = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$1];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$0];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    createState() {
      return new scroll_head._ScrollHeadState.new();
    }
  };
  (scroll_head.ScrollHead.new = function(scrollHeadOffset, pdfViewerController, isMobileWebView, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollHeadOffset$] = scrollHeadOffset;
    this[pdfViewerController$1] = pdfViewerController;
    this[isMobileWebView$0] = isMobileWebView;
    scroll_head.ScrollHead.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_head.ScrollHead.prototype;
  dart.addTypeTests(scroll_head.ScrollHead);
  dart.addTypeCaches(scroll_head.ScrollHead);
  dart.setMethodSignature(scroll_head.ScrollHead, () => ({
    __proto__: dart.getMethods(scroll_head.ScrollHead.__proto__),
    createState: dart.fnType(scroll_head._ScrollHeadState, [])
  }));
  dart.setLibraryUri(scroll_head.ScrollHead, I[6]);
  dart.setFieldSignature(scroll_head.ScrollHead, () => ({
    __proto__: dart.getFields(scroll_head.ScrollHead.__proto__),
    scrollHeadOffset: dart.finalFieldType(core.double),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool)
  }));
  var _pdfViewerThemeData$0 = dart.privateName(scroll_head, "_pdfViewerThemeData");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  scroll_head._ScrollHeadState = class _ScrollHeadState extends framework.State$(scroll_head.ScrollHead) {
    didChangeDependencies() {
      this[_pdfViewerThemeData$0] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$0] = null;
      super.dispose();
    }
    build(context) {
      if (pdfviewer_helper.kIsDesktop) {
        return new container.Container.new({alignment: alignment.Alignment.topRight, margin: new edge_insets.EdgeInsets.only({top: this.widget.scrollHeadOffset}), child: new material.Material.new({color: colors.Colors.grey, borderRadius: C[102] || CT.C102, child: new container.Container.new({constraints: new box.BoxConstraints.tight(C[104] || CT.C104), $creationLocationd_0dea112b090073317d4: C[105] || CT.C105}), $creationLocationd_0dea112b090073317d4: C[108] || CT.C108}), $creationLocationd_0dea112b090073317d4: C[113] || CT.C113});
      }
      let boxShadows = C[118] || CT.C118;
      return new container.Container.new({margin: new edge_insets.EdgeInsets.only({top: this.widget.scrollHeadOffset}), child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new material.Material.new({borderRadius: C[128] || CT.C128, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(this[_pdfViewerThemeData$0]).scrollHeadStyle.backgroundColor, borderRadius: C[128] || CT.C128, boxShadow: boxShadows}), constraints: C[131] || CT.C131, $creationLocationd_0dea112b090073317d4: C[132] || CT.C132}), $creationLocationd_0dea112b090073317d4: C[136] || CT.C136}), new basic.Positioned.fill({child: new basic.Align.new({alignment: alignment.Alignment.center, child: new text.Text.new(dart.str(this.widget.pdfViewerController.pageNumber), {style: dart.nullCheck(this[_pdfViewerThemeData$0]).scrollHeadStyle.pageNumberTextStyle, $creationLocationd_0dea112b090073317d4: C[140] || CT.C140}), $creationLocationd_0dea112b090073317d4: C[144] || CT.C144}), $creationLocationd_0dea112b090073317d4: C[148] || CT.C148})]), $creationLocationd_0dea112b090073317d4: C[151] || CT.C151}), $creationLocationd_0dea112b090073317d4: C[154] || CT.C154});
    }
  };
  (scroll_head._ScrollHeadState.new = function() {
    this[_pdfViewerThemeData$0] = null;
    scroll_head._ScrollHeadState.__proto__.new.call(this);
    ;
  }).prototype = scroll_head._ScrollHeadState.prototype;
  dart.addTypeTests(scroll_head._ScrollHeadState);
  dart.addTypeCaches(scroll_head._ScrollHeadState);
  dart.setMethodSignature(scroll_head._ScrollHeadState, () => ({
    __proto__: dart.getMethods(scroll_head._ScrollHeadState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_head._ScrollHeadState, I[6]);
  dart.setFieldSignature(scroll_head._ScrollHeadState, () => ({
    __proto__: dart.getFields(scroll_head._ScrollHeadState.__proto__),
    [_pdfViewerThemeData$0]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData))
  }));
  dart.defineLazy(scroll_head, {
    /*scroll_head.kPdfScrollHeadHeight*/get kPdfScrollHeadHeight() {
      return 32;
    }
  }, false);
  var canShowPaginationDialog$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowPaginationDialog");
  var canShowScrollHead$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowScrollHead");
  var canShowScrollStatus$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowScrollStatus");
  var enableDoubleTapZooming$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.enableDoubleTapZooming");
  var pdfViewerController$2 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.pdfViewerController");
  var isMobileWebView$1 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.isMobileWebView");
  var child$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.child");
  var transformationController$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.transformationController");
  var onInteractionStart$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onInteractionStart");
  var onInteractionUpdate$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onInteractionUpdate");
  var onInteractionEnd$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onInteractionEnd");
  var pdfDimension$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.pdfDimension");
  var viewportDimension$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.viewportDimension");
  var currentOffset$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.currentOffset");
  var isPanEnabled$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.isPanEnabled");
  var maxScale$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.maxScale");
  var minScale$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.minScale");
  var onPdfOffsetChanged$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onPdfOffsetChanged");
  var forcePixel$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.forcePixel");
  var onDoubleTapZoomInvoked$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onDoubleTapZoomInvoked");
  var onDoubleTap$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onDoubleTap");
  var interactionMode$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.interactionMode");
  var scaleEnabled$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.scaleEnabled");
  var maxPdfPageWidth$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.maxPdfPageWidth");
  scroll_head_overlay.ScrollHeadOverlay = class ScrollHeadOverlay extends framework.StatefulWidget {
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$2];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$1];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get transformationController() {
      return this[transformationController$];
    }
    set transformationController(value) {
      super.transformationController = value;
    }
    get onInteractionStart() {
      return this[onInteractionStart$];
    }
    set onInteractionStart(value) {
      super.onInteractionStart = value;
    }
    get onInteractionUpdate() {
      return this[onInteractionUpdate$];
    }
    set onInteractionUpdate(value) {
      super.onInteractionUpdate = value;
    }
    get onInteractionEnd() {
      return this[onInteractionEnd$];
    }
    set onInteractionEnd(value) {
      super.onInteractionEnd = value;
    }
    get pdfDimension() {
      return this[pdfDimension$];
    }
    set pdfDimension(value) {
      super.pdfDimension = value;
    }
    get viewportDimension() {
      return this[viewportDimension$];
    }
    set viewportDimension(value) {
      super.viewportDimension = value;
    }
    get currentOffset() {
      return this[currentOffset$];
    }
    set currentOffset(value) {
      super.currentOffset = value;
    }
    get isPanEnabled() {
      return this[isPanEnabled$];
    }
    set isPanEnabled(value) {
      super.isPanEnabled = value;
    }
    get maxScale() {
      return this[maxScale$];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get minScale() {
      return this[minScale$];
    }
    set minScale(value) {
      super.minScale = value;
    }
    get onPdfOffsetChanged() {
      return this[onPdfOffsetChanged$];
    }
    set onPdfOffsetChanged(value) {
      super.onPdfOffsetChanged = value;
    }
    get forcePixel() {
      return this[forcePixel$];
    }
    set forcePixel(value) {
      super.forcePixel = value;
    }
    get onDoubleTapZoomInvoked() {
      return this[onDoubleTapZoomInvoked$];
    }
    set onDoubleTapZoomInvoked(value) {
      super.onDoubleTapZoomInvoked = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get interactionMode() {
      return this[interactionMode$0];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get scaleEnabled() {
      return this[scaleEnabled$];
    }
    set scaleEnabled(value) {
      super.scaleEnabled = value;
    }
    get maxPdfPageWidth() {
      return this[maxPdfPageWidth$];
    }
    set maxPdfPageWidth(value) {
      super.maxPdfPageWidth = value;
    }
    createState() {
      return new scroll_head_overlay.ScrollHeadOverlayState.new();
    }
  };
  (scroll_head_overlay.ScrollHeadOverlay.new = function(canShowPaginationDialog, canShowScrollStatus, canShowScrollHead, pdfViewerController, isMobileWebView, pdfDimension, viewportDimension, currentOffset, maxScale, minScale, onDoubleTapZoomInvoked, forcePixel, onDoubleTap, enableDoubleTapZooming, interactionMode, scaleEnabled, maxPdfPageWidth, child, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let transformationController = opts && 'transformationController' in opts ? opts.transformationController : null;
    let onInteractionStart = opts && 'onInteractionStart' in opts ? opts.onInteractionStart : null;
    let onInteractionUpdate = opts && 'onInteractionUpdate' in opts ? opts.onInteractionUpdate : null;
    let onInteractionEnd = opts && 'onInteractionEnd' in opts ? opts.onInteractionEnd : null;
    let onPdfOffsetChanged = opts && 'onPdfOffsetChanged' in opts ? opts.onPdfOffsetChanged : null;
    let isPanEnabled = opts && 'isPanEnabled' in opts ? opts.isPanEnabled : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowPaginationDialog$] = canShowPaginationDialog;
    this[canShowScrollStatus$] = canShowScrollStatus;
    this[canShowScrollHead$] = canShowScrollHead;
    this[pdfViewerController$2] = pdfViewerController;
    this[isMobileWebView$1] = isMobileWebView;
    this[pdfDimension$] = pdfDimension;
    this[viewportDimension$] = viewportDimension;
    this[currentOffset$] = currentOffset;
    this[maxScale$] = maxScale;
    this[minScale$] = minScale;
    this[onDoubleTapZoomInvoked$] = onDoubleTapZoomInvoked;
    this[forcePixel$] = forcePixel;
    this[onDoubleTap$] = onDoubleTap;
    this[enableDoubleTapZooming$] = enableDoubleTapZooming;
    this[interactionMode$0] = interactionMode;
    this[scaleEnabled$] = scaleEnabled;
    this[maxPdfPageWidth$] = maxPdfPageWidth;
    this[child$] = child;
    this[transformationController$] = transformationController;
    this[onInteractionStart$] = onInteractionStart;
    this[onInteractionUpdate$] = onInteractionUpdate;
    this[onInteractionEnd$] = onInteractionEnd;
    this[onPdfOffsetChanged$] = onPdfOffsetChanged;
    this[isPanEnabled$] = isPanEnabled;
    scroll_head_overlay.ScrollHeadOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_head_overlay.ScrollHeadOverlay.prototype;
  dart.addTypeTests(scroll_head_overlay.ScrollHeadOverlay);
  dart.addTypeCaches(scroll_head_overlay.ScrollHeadOverlay);
  dart.setMethodSignature(scroll_head_overlay.ScrollHeadOverlay, () => ({
    __proto__: dart.getMethods(scroll_head_overlay.ScrollHeadOverlay.__proto__),
    createState: dart.fnType(scroll_head_overlay.ScrollHeadOverlayState, [])
  }));
  dart.setLibraryUri(scroll_head_overlay.ScrollHeadOverlay, I[7]);
  dart.setFieldSignature(scroll_head_overlay.ScrollHeadOverlay, () => ({
    __proto__: dart.getFields(scroll_head_overlay.ScrollHeadOverlay.__proto__),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    canShowScrollHead: dart.finalFieldType(core.bool),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget),
    transformationController: dart.finalFieldType(dart.nullable(interactive_viewer.TransformationController)),
    onInteractionStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleStartDetails]))),
    onInteractionUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleUpdateDetails]))),
    onInteractionEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleEndDetails]))),
    pdfDimension: dart.finalFieldType(ui.Size),
    viewportDimension: dart.finalFieldType(ui.Size),
    currentOffset: dart.finalFieldType(ui.Offset),
    isPanEnabled: dart.finalFieldType(core.bool),
    maxScale: dart.finalFieldType(core.double),
    minScale: dart.finalFieldType(core.double),
    onPdfOffsetChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [ui.Offset]))),
    forcePixel: dart.finalFieldType(dart.fnType(dart.dynamic, [ui.Offset], {isZoomInitiated: core.bool}, {})),
    onDoubleTapZoomInvoked: dart.finalFieldType(dart.fnType(core.double, [core.double])),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    scaleEnabled: dart.finalFieldType(core.bool),
    maxPdfPageWidth: dart.finalFieldType(core.double)
  }));
  var _textFieldController = dart.privateName(scroll_head_overlay, "_textFieldController");
  var _formKey = dart.privateName(scroll_head_overlay, "_formKey");
  var _focusNode = dart.privateName(scroll_head_overlay, "_focusNode");
  var _pdfViewerThemeData$1 = dart.privateName(scroll_head_overlay, "_pdfViewerThemeData");
  var _localizations$0 = dart.privateName(scroll_head_overlay, "_localizations");
  var _childKey = dart.privateName(scroll_head_overlay, "_childKey");
  var _isInteractionEnded = dart.privateName(scroll_head_overlay, "_isInteractionEnded");
  var _tapPosition = dart.privateName(scroll_head_overlay, "_tapPosition");
  var _scale = dart.privateName(scroll_head_overlay, "_scale");
  var _scrollHeadOffset = dart.privateName(scroll_head_overlay, "_scrollHeadOffset");
  var _isScrollHeadDragged = dart.privateName(scroll_head_overlay, "_isScrollHeadDragged");
  var _handleDoubleTapDown = dart.privateName(scroll_head_overlay, "_handleDoubleTapDown");
  var _handleDoubleTap = dart.privateName(scroll_head_overlay, "_handleDoubleTap");
  var _updateScrollHeadPosition = dart.privateName(scroll_head_overlay, "_updateScrollHeadPosition");
  var _handleInteractionStart = dart.privateName(scroll_head_overlay, "_handleInteractionStart");
  var _handleInteractionChanged = dart.privateName(scroll_head_overlay, "_handleInteractionChanged");
  var _handleInteractionEnd = dart.privateName(scroll_head_overlay, "_handleInteractionEnd");
  var _handleScrollHeadDragStart = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragStart");
  var _handleScrollHeadDragUpdate = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragUpdate");
  var _handleScrollHeadDragEnd = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragEnd");
  var _showPaginationDialog = dart.privateName(scroll_head_overlay, "_showPaginationDialog");
  var _clearSelection = dart.privateName(scroll_head_overlay, "_clearSelection");
  var _name$ = dart.privateName(borders, "_name");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var OutlinedBorder_side = dart.privateName(borders, "OutlinedBorder.side");
  var RoundedRectangleBorder_borderRadius = dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius");
  var _paginationTextField = dart.privateName(scroll_head_overlay, "_paginationTextField");
  var _handlePageNumberValidation = dart.privateName(scroll_head_overlay, "_handlePageNumberValidation");
  scroll_head_overlay.ScrollHeadOverlayState = class ScrollHeadOverlayState extends framework.State$(scroll_head_overlay.ScrollHeadOverlay) {
    initState() {
      super.initState();
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$1] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$0] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$1] = null;
      this[_localizations$0] = null;
      this[_focusNode].dispose();
      super.dispose();
    }
    [_handleDoubleTapDown](details) {
      this[_tapPosition] = details.localPosition;
    }
    [_handleDoubleTap]() {
      let t31, t32, t31$, t33, t32$, t31$0, t33$, t32$0, t31$1, t33$0, t32$1, t31$2, t32$2, t31$3, t33$1, t32$3, t31$4;
      t31 = this.widget.onDoubleTap;
      t31 == null ? null : t31();
      if (this.widget.pdfViewerController.zoomLevel <= 1) {
        let normalizedOffset = this[_tapPosition]._negate()['-'](this.widget.currentOffset['*'](this.widget.pdfViewerController.zoomLevel))['/'](this.widget.pdfViewerController.zoomLevel);
        this.widget.pdfViewerController.zoomLevel = 2.0;
        let offset = this[_tapPosition]._negate()['-'](normalizedOffset['*'](2.0))['/'](2.0);
        this.widget.pdfViewerController.zoomLevel = (t31$ = this.widget, t32 = 2.0, t31$.onDoubleTapZoomInvoked(t32));
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
          if (this.widget.viewportDimension.width > this.widget.maxPdfPageWidth * this.widget.pdfViewerController.zoomLevel) {
            t31$0 = this.widget;
            t32$ = new ui.Offset.new(0.0, offset.dy);
            t33 = true;
            t31$0.forcePixel(t32$, {isZoomInitiated: t33});
          } else {
            let clampedX = this[_tapPosition].dx > this.widget.maxPdfPageWidth ? (this.widget.maxPdfPageWidth * 2 - this.widget.viewportDimension.width) / 2 : 0.0;
            t31$1 = this.widget;
            t32$0 = new ui.Offset.new(clampedX, offset.dy);
            t33$ = true;
            t31$1.forcePixel(t32$0, {isZoomInitiated: t33$});
          }
        } else {
          t31$2 = this.widget;
          t32$1 = offset;
          t33$0 = true;
          t31$2.forcePixel(t32$1, {isZoomInitiated: t33$0});
        }
      } else {
        let normalizedOffset = this[_tapPosition]._negate()['-'](this.widget.currentOffset['*'](this.widget.pdfViewerController.zoomLevel))['/'](this.widget.pdfViewerController.zoomLevel);
        this.widget.pdfViewerController.zoomLevel = 1.0;
        let offset = this[_tapPosition]._negate()['-'](normalizedOffset['*'](1.0))['/'](1.0);
        this.widget.pdfViewerController.zoomLevel = (t31$3 = this.widget, t32$2 = 1.0, t31$3.onDoubleTapZoomInvoked(t32$2));
        if (!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView) {
          t31$4 = this.widget;
          t32$3 = offset;
          t33$1 = true;
          t31$4.forcePixel(t32$3, {isZoomInitiated: t33$1});
        }
      }
    }
    build(context) {
      let t31;
      t31 = binding.WidgetsBinding.instance;
      t31 == null ? null : t31.addPostFrameCallback(dart.fn(timeStamp => {
        this[_updateScrollHeadPosition]();
      }, T.DurationTovoid()));
      let scrollable = new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onDoubleTapDown: !pdfviewer_helper.kIsDesktop && this.widget.enableDoubleTapZooming || pdfviewer_helper.kIsDesktop && this.widget.interactionMode === enums.PdfInteractionMode.pan || pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView && this.widget.enableDoubleTapZooming ? dart.bind(this, _handleDoubleTapDown) : null, onDoubleTap: !pdfviewer_helper.kIsDesktop && this.widget.enableDoubleTapZooming || pdfviewer_helper.kIsDesktop && this.widget.interactionMode === enums.PdfInteractionMode.pan || pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView && this.widget.enableDoubleTapZooming ? dart.bind(this, _handleDoubleTap) : null, child: new interactive_scrollable.InteractiveScrollable.new(this.widget.child, {minScale: this.widget.minScale, maxScale: this.widget.maxScale, transformationController: this.widget.transformationController, key: this[_childKey], scaleEnabled: pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView || !pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.widget.scaleEnabled ? true : false, panEnabled: this.widget.isPanEnabled, onInteractionStart: dart.bind(this, _handleInteractionStart), onInteractionUpdate: dart.bind(this, _handleInteractionChanged), onInteractionEnd: dart.bind(this, _handleInteractionEnd), constrained: false, $creationLocationd_0dea112b090073317d4: C[158] || CT.C158}), $creationLocationd_0dea112b090073317d4: C[171] || CT.C171});
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([scrollable, new basic.Align.new({alignment: alignment.Alignment.topRight, child: new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.bind(this, _handleScrollHeadDragStart), onVerticalDragUpdate: dart.bind(this, _handleScrollHeadDragUpdate), onVerticalDragEnd: dart.bind(this, _handleScrollHeadDragEnd), onTap: dart.fn(() => {
                if (!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView) {
                  this[_textFieldController].clear();
                  if (!focus_scope.FocusScope.of(context).hasPrimaryFocus) {
                    focus_scope.FocusScope.of(context).unfocus();
                  }
                  if (this.widget.canShowPaginationDialog) {
                    this[_showPaginationDialog]();
                  }
                }
              }, T.VoidTovoid()), child: new visibility.Visibility.new({visible: pdfviewer_helper.kIsDesktop ? this.widget.pdfViewerController.pageCount > 1 : this.widget.canShowScrollHead && this.widget.pdfViewerController.pageCount > 1, child: new scroll_head.ScrollHead.new(this[_scrollHeadOffset], this.widget.pdfViewerController, this.widget.isMobileWebView, {$creationLocationd_0dea112b090073317d4: C[177] || CT.C177}), $creationLocationd_0dea112b090073317d4: C[182] || CT.C182}), $creationLocationd_0dea112b090073317d4: C[186] || CT.C186}), $creationLocationd_0dea112b090073317d4: C[193] || CT.C193}), new visibility.Visibility.new({visible: this[_isScrollHeadDragged] && this.widget.canShowScrollStatus, child: new scroll_status.ScrollStatus.new(this.widget.pdfViewerController, {$creationLocationd_0dea112b090073317d4: C[197] || CT.C197}), $creationLocationd_0dea112b090073317d4: C[200] || CT.C200})]), $creationLocationd_0dea112b090073317d4: C[204] || CT.C204});
    }
    [_clearSelection]() {
      return async.async(core.bool, (function* _clearSelection() {
        return this.widget.pdfViewerController.clearSelection();
      }).bind(this));
    }
    [_showPaginationDialog]() {
      return async.async(dart.void, (function* _showPaginationDialog() {
        yield this[_clearSelection]();
        return dialog.showDialog(dart.void, {context: this.context, barrierDismissible: true, builder: dart.fn(context => {
            let orientation = media_query.MediaQuery.of(context).orientation;
            return new dialog.AlertDialog.new({scrollable: true, insetPadding: C[207] || CT.C207, contentPadding: orientation === media_query.Orientation.portrait ? C[208] || CT.C208 : C[209] || CT.C209, buttonPadding: orientation === media_query.Orientation.portrait ? C[210] || CT.C210 : C[211] || CT.C211, backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.backgroundColor, title: new text.Text.new(dart.nullCheck(this[_localizations$0]).pdfGoToPageLabel, {style: dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.headerTextStyle, $creationLocationd_0dea112b090073317d4: C[212] || CT.C212}), shape: C[216] || CT.C216, content: new single_child_scroll_view.SingleChildScrollView.new({child: this[_paginationTextField](), $creationLocationd_0dea112b090073317d4: C[222] || CT.C222}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_textFieldController].clear();
                    navigator.Navigator.of(context).pop(T.ObjectN());
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations$0]).pdfPaginationDialogCancelLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.cancelTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.cancelTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.cancelTextStyle, $creationLocationd_0dea112b090073317d4: C[225] || CT.C225}), $creationLocationd_0dea112b090073317d4: C[229] || CT.C229}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_handlePageNumberValidation]();
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations$0]).pdfPaginationDialogOkLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.okTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.okTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.okTextStyle, $creationLocationd_0dea112b090073317d4: C[233] || CT.C233}), $creationLocationd_0dea112b090073317d4: C[237] || CT.C237})]), $creationLocationd_0dea112b090073317d4: C[241] || CT.C241});
          }, T.BuildContextToAlertDialog())});
      }).bind(this));
    }
    [_paginationTextField]() {
      return new form.Form.new({key: this[_formKey], child: new container.Container.new({width: 328, child: new text_form_field.TextFormField.new({style: dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.inputFieldTextStyle, focusNode: this[_focusNode], decoration: new input_decorator.InputDecoration.new({isDense: true, focusedBorder: new input_border.UnderlineInputBorder.new({borderSide: new borders.BorderSide.new({color: theme$.Theme.of(this.context).primaryColor})}), contentPadding: C[252] || CT.C252, hintText: dart.nullCheck(this[_localizations$0]).pdfEnterPageNumberLabel, hintStyle: dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.hintTextStyle, counterText: dart.str(this.widget.pdfViewerController.pageNumber) + "/" + dart.str(this.widget.pdfViewerController.pageCount), counterStyle: dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.pageInfoTextStyle, errorStyle: dart.nullCheck(this[_pdfViewerThemeData$1]).paginationDialogStyle.validationTextStyle}), keyboardType: text_input.TextInputType.number, enableInteractiveSelection: false, controller: this[_textFieldController], autofocus: true, onEditingComplete: dart.bind(this, _handlePageNumberValidation), onFieldSubmitted: dart.fn(value => {
              this[_handlePageNumberValidation]();
            }, T.StringTovoid()), validator: dart.fn(value => {
              try {
                if (value != null) {
                  let index = core.int.parse(value);
                  if (index <= 0 || index > this.widget.pdfViewerController.pageCount) {
                    this[_textFieldController].clear();
                    return dart.nullCheck(this[_localizations$0]).pdfInvalidPageNumberLabel;
                  }
                }
              } catch (e) {
                let ex = dart.getThrown(e);
                if (core.Exception.is(ex)) {
                  this[_textFieldController].clear();
                  return dart.nullCheck(this[_localizations$0]).pdfInvalidPageNumberLabel;
                } else
                  throw e;
              }
            }, T.StringNToStringN()), $creationLocationd_0dea112b090073317d4: C[253] || CT.C253}), $creationLocationd_0dea112b090073317d4: C[265] || CT.C265}), $creationLocationd_0dea112b090073317d4: C[269] || CT.C269});
    }
    [_handlePageNumberValidation]() {
      if (this[_formKey].currentState != null && dart.nullCheck(this[_formKey].currentState).validate()) {
        let index = core.int.parse(this[_textFieldController].text);
        this[_textFieldController].clear();
        navigator.Navigator.of(this.context).pop(T.ObjectN());
        this.widget.pdfViewerController.jumpToPage(index);
      }
    }
    [_handleScrollHeadDragStart](details) {
      this[_isScrollHeadDragged] = true;
    }
    [_handleScrollHeadDragUpdate](details) {
      if (!this.widget.viewportDimension.isEmpty) {
        let dragOffset = details.delta.dy + this[_scrollHeadOffset];
        let scrollHeadPosition = this.widget.viewportDimension.height - (pdfviewer_helper.kIsDesktop ? 54 : 32);
        if (dragOffset < scrollHeadPosition && dragOffset >= 0) {
          dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(this.widget.currentOffset.dx, (this.widget.pdfDimension.height - this.widget.viewportDimension.height / this[_scale]) * (dragOffset / scrollHeadPosition)));
          this[_scrollHeadOffset] = dragOffset;
        } else {
          if (dragOffset < 0) {
            dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(this.widget.currentOffset.dx, 0.0));
          } else {
            dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(this.widget.currentOffset.dx, this.widget.pdfDimension.height - this.widget.viewportDimension.height / this[_scale]));
          }
        }
      }
    }
    [_handleScrollHeadDragEnd](details) {
      this[_isScrollHeadDragged] = false;
    }
    [_handleInteractionStart](details) {
      let t33;
      t33 = this.widget.onInteractionStart;
      t33 == null ? null : t33(details);
    }
    [_handleInteractionChanged](details) {
      let t33;
      if (details.scale !== 1) {
        this[_isInteractionEnded] = false;
      }
      t33 = this.widget.onInteractionUpdate;
      t33 == null ? null : t33(details);
    }
    [_handleInteractionEnd](details) {
      let t33;
      this[_isInteractionEnded] = true;
      t33 = this.widget.onInteractionEnd;
      t33 == null ? null : t33(details);
    }
    [_updateScrollHeadPosition]() {
      if (this.widget.pdfDimension.height > 0 && this.widget.viewportDimension.height > 0 && this.widget.pdfDimension.height > this.widget.viewportDimension.height) {
        this[_scale] = dart.nullCheck(this.widget.transformationController).value.getMaxScaleOnAxis();
        let currentOffset = dart.nullCheck(this.widget.transformationController).toScene(ui.Offset.zero).dy;
        let scrollPercent = currentOffset[$abs]() / (this.widget.pdfDimension.height - this.widget.viewportDimension.height / this[_scale]);
        let scrollHeadMaxExtent = this.widget.viewportDimension.height - (pdfviewer_helper.kIsDesktop ? 54 : 32);
        let newPosition = (scrollPercent * scrollHeadMaxExtent)[$clamp](1.0, scrollHeadMaxExtent);
        if (newPosition[$round]() !== this[_scrollHeadOffset][$round]() && this[_isInteractionEnded]) {
          this[_scrollHeadOffset] = newPosition;
          dart.nullCheck(this.widget.onPdfOffsetChanged)(dart.nullCheck(this.widget.transformationController).toScene(ui.Offset.zero));
        }
      }
    }
  };
  (scroll_head_overlay.ScrollHeadOverlayState.new = function() {
    this[_textFieldController] = new editable_text.TextEditingController.new();
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this[_focusNode] = new focus_manager.FocusNode.new();
    this[_pdfViewerThemeData$1] = null;
    this[_localizations$0] = null;
    this[_childKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_isInteractionEnded] = true;
    this[_tapPosition] = ui.Offset.zero;
    this[_scale] = 1.0;
    this[_scrollHeadOffset] = 0.0;
    this[_isScrollHeadDragged] = false;
    scroll_head_overlay.ScrollHeadOverlayState.__proto__.new.call(this);
    ;
  }).prototype = scroll_head_overlay.ScrollHeadOverlayState.prototype;
  dart.addTypeTests(scroll_head_overlay.ScrollHeadOverlayState);
  dart.addTypeCaches(scroll_head_overlay.ScrollHeadOverlayState);
  dart.setMethodSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getMethods(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    [_handleDoubleTapDown]: dart.fnType(dart.void, [tap.TapDownDetails]),
    [_handleDoubleTap]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_clearSelection]: dart.fnType(async.Future$(core.bool), []),
    [_showPaginationDialog]: dart.fnType(async.Future$(dart.void), []),
    [_paginationTextField]: dart.fnType(framework.Widget, []),
    [_handlePageNumberValidation]: dart.fnType(dart.void, []),
    [_handleScrollHeadDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleScrollHeadDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleScrollHeadDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleInteractionStart]: dart.fnType(dart.void, [scale.ScaleStartDetails]),
    [_handleInteractionChanged]: dart.fnType(dart.void, [scale.ScaleUpdateDetails]),
    [_handleInteractionEnd]: dart.fnType(dart.void, [scale.ScaleEndDetails]),
    [_updateScrollHeadPosition]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(scroll_head_overlay.ScrollHeadOverlayState, I[7]);
  dart.setFieldSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getFields(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    [_textFieldController]: dart.finalFieldType(editable_text.TextEditingController),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_focusNode]: dart.finalFieldType(focus_manager.FocusNode),
    [_pdfViewerThemeData$1]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$0]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    [_childKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_isInteractionEnded]: dart.fieldType(core.bool),
    [_tapPosition]: dart.fieldType(ui.Offset),
    [_scale]: dart.fieldType(core.double),
    [_scrollHeadOffset]: dart.fieldType(core.double),
    [_isScrollHeadDragged]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(scroll_head_overlay, {
    /*scroll_head_overlay._kPdfScrollHeadHeight*/get _kPdfScrollHeadHeight() {
      return 32;
    },
    /*scroll_head_overlay._kPdfScrollBarHeight*/get _kPdfScrollBarHeight() {
      return 54;
    },
    /*scroll_head_overlay._kPdfPaginationTextFieldWidth*/get _kPdfPaginationTextFieldWidth() {
      return 328;
    }
  }, false);
  var canShowPaginationDialog$0 = dart.privateName(pdf_scrollable, "PdfScrollable.canShowPaginationDialog");
  var canShowScrollHead$0 = dart.privateName(pdf_scrollable, "PdfScrollable.canShowScrollHead");
  var pdfViewerController$3 = dart.privateName(pdf_scrollable, "PdfScrollable.pdfViewerController");
  var isMobileWebView$2 = dart.privateName(pdf_scrollable, "PdfScrollable.isMobileWebView");
  var isPanEnabled$0 = dart.privateName(pdf_scrollable, "PdfScrollable.isPanEnabled");
  var interactionMode$1 = dart.privateName(pdf_scrollable, "PdfScrollable.interactionMode");
  var canShowScrollStatus$0 = dart.privateName(pdf_scrollable, "PdfScrollable.canShowScrollStatus");
  var child$0 = dart.privateName(pdf_scrollable, "PdfScrollable.child");
  var maxScale$0 = dart.privateName(pdf_scrollable, "PdfScrollable.maxScale");
  var minScale$0 = dart.privateName(pdf_scrollable, "PdfScrollable.minScale");
  var enableDoubleTapZooming$0 = dart.privateName(pdf_scrollable, "PdfScrollable.enableDoubleTapZooming");
  var pdfDimension$0 = dart.privateName(pdf_scrollable, "PdfScrollable.pdfDimension");
  var viewportDimension$0 = dart.privateName(pdf_scrollable, "PdfScrollable.viewportDimension");
  var maxPdfPageWidth$0 = dart.privateName(pdf_scrollable, "PdfScrollable.maxPdfPageWidth");
  var onPdfOffsetChanged$0 = dart.privateName(pdf_scrollable, "PdfScrollable.onPdfOffsetChanged");
  var onDoubleTap$0 = dart.privateName(pdf_scrollable, "PdfScrollable.onDoubleTap");
  var scaleEnabled$0 = dart.privateName(pdf_scrollable, "PdfScrollable.scaleEnabled");
  var pdfPages$0 = dart.privateName(pdf_scrollable, "PdfScrollable.pdfPages");
  var maxScrollExtent$ = dart.privateName(pdf_scrollable, "PdfScrollable.maxScrollExtent");
  pdf_scrollable.PdfScrollable = class PdfScrollable extends framework.StatefulWidget {
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$0];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$0];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$3];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$2];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get isPanEnabled() {
      return this[isPanEnabled$0];
    }
    set isPanEnabled(value) {
      super.isPanEnabled = value;
    }
    get interactionMode() {
      return this[interactionMode$1];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$0];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    get maxScale() {
      return this[maxScale$0];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get minScale() {
      return this[minScale$0];
    }
    set minScale(value) {
      super.minScale = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$0];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get pdfDimension() {
      return this[pdfDimension$0];
    }
    set pdfDimension(value) {
      super.pdfDimension = value;
    }
    get viewportDimension() {
      return this[viewportDimension$0];
    }
    set viewportDimension(value) {
      super.viewportDimension = value;
    }
    get maxPdfPageWidth() {
      return this[maxPdfPageWidth$0];
    }
    set maxPdfPageWidth(value) {
      super.maxPdfPageWidth = value;
    }
    get onPdfOffsetChanged() {
      return this[onPdfOffsetChanged$0];
    }
    set onPdfOffsetChanged(value) {
      super.onPdfOffsetChanged = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$0];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get scaleEnabled() {
      return this[scaleEnabled$0];
    }
    set scaleEnabled(value) {
      super.scaleEnabled = value;
    }
    get pdfPages() {
      return this[pdfPages$0];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get maxScrollExtent() {
      return this[maxScrollExtent$];
    }
    set maxScrollExtent(value) {
      super.maxScrollExtent = value;
    }
    createState() {
      return new pdf_scrollable.PdfScrollableState.new();
    }
  };
  (pdf_scrollable.PdfScrollable.new = function(canShowPaginationDialog, canShowScrollStatus, canShowScrollHead, pdfViewerController, isMobileWebView, pdfDimension, viewportDimension, onPdfOffsetChanged, isPanEnabled, maxScale, minScale, enableDoubleTapZooming, interactionMode, maxPdfPageWidth, scaleEnabled, maxScrollExtent, pdfPages, child, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowPaginationDialog$0] = canShowPaginationDialog;
    this[canShowScrollStatus$0] = canShowScrollStatus;
    this[canShowScrollHead$0] = canShowScrollHead;
    this[pdfViewerController$3] = pdfViewerController;
    this[isMobileWebView$2] = isMobileWebView;
    this[pdfDimension$0] = pdfDimension;
    this[viewportDimension$0] = viewportDimension;
    this[onPdfOffsetChanged$0] = onPdfOffsetChanged;
    this[isPanEnabled$0] = isPanEnabled;
    this[maxScale$0] = maxScale;
    this[minScale$0] = minScale;
    this[enableDoubleTapZooming$0] = enableDoubleTapZooming;
    this[interactionMode$1] = interactionMode;
    this[maxPdfPageWidth$0] = maxPdfPageWidth;
    this[scaleEnabled$0] = scaleEnabled;
    this[maxScrollExtent$] = maxScrollExtent;
    this[pdfPages$0] = pdfPages;
    this[child$0] = child;
    this[onDoubleTap$0] = onDoubleTap;
    pdf_scrollable.PdfScrollable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdf_scrollable.PdfScrollable.prototype;
  dart.addTypeTests(pdf_scrollable.PdfScrollable);
  dart.addTypeCaches(pdf_scrollable.PdfScrollable);
  dart.setMethodSignature(pdf_scrollable.PdfScrollable, () => ({
    __proto__: dart.getMethods(pdf_scrollable.PdfScrollable.__proto__),
    createState: dart.fnType(pdf_scrollable.PdfScrollableState, [])
  }));
  dart.setLibraryUri(pdf_scrollable.PdfScrollable, I[8]);
  dart.setFieldSignature(pdf_scrollable.PdfScrollable, () => ({
    __proto__: dart.getFields(pdf_scrollable.PdfScrollable.__proto__),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    canShowScrollHead: dart.finalFieldType(core.bool),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool),
    isPanEnabled: dart.finalFieldType(core.bool),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget),
    maxScale: dart.finalFieldType(core.double),
    minScale: dart.finalFieldType(core.double),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    pdfDimension: dart.finalFieldType(ui.Size),
    viewportDimension: dart.finalFieldType(ui.Size),
    maxPdfPageWidth: dart.finalFieldType(core.double),
    onPdfOffsetChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [ui.Offset]))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    scaleEnabled: dart.finalFieldType(core.bool),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    maxScrollExtent: dart.finalFieldType(core.double)
  }));
  var previousZoomLevel = dart.privateName(pdf_scrollable, "PdfScrollableState.previousZoomLevel");
  var paddingWidthScale = dart.privateName(pdf_scrollable, "PdfScrollableState.paddingWidthScale");
  var paddingHeightScale = dart.privateName(pdf_scrollable, "PdfScrollableState.paddingHeightScale");
  var __PdfScrollableState__transformationController = dart.privateName(pdf_scrollable, "_#PdfScrollableState#_transformationController");
  var _currentScale = dart.privateName(pdf_scrollable, "_currentScale");
  var _setZoomLevel = dart.privateName(pdf_scrollable, "_setZoomLevel");
  var _isOverFlowed = dart.privateName(pdf_scrollable, "_isOverFlowed");
  var __PdfScrollableState_currentOffset = dart.privateName(pdf_scrollable, "_#PdfScrollableState#currentOffset");
  var __PdfScrollableState_currentZoomLevel = dart.privateName(pdf_scrollable, "_#PdfScrollableState#currentZoomLevel");
  var _transformationController = dart.privateName(pdf_scrollable, "_transformationController");
  var _handleInteractionStart$ = dart.privateName(pdf_scrollable, "_handleInteractionStart");
  var _handleInteractionUpdate = dart.privateName(pdf_scrollable, "_handleInteractionUpdate");
  var _handleInteractionEnd$ = dart.privateName(pdf_scrollable, "_handleInteractionEnd");
  var _handlePdfOffsetChanged = dart.privateName(pdf_scrollable, "_handlePdfOffsetChanged");
  var _setPixel = dart.privateName(pdf_scrollable, "_setPixel");
  pdf_scrollable.PdfScrollableState = class PdfScrollableState extends framework.State$(pdf_scrollable.PdfScrollable) {
    get previousZoomLevel() {
      return this[previousZoomLevel];
    }
    set previousZoomLevel(value) {
      this[previousZoomLevel] = value;
    }
    get paddingWidthScale() {
      return this[paddingWidthScale];
    }
    set paddingWidthScale(value) {
      this[paddingWidthScale] = value;
    }
    get paddingHeightScale() {
      return this[paddingHeightScale];
    }
    set paddingHeightScale(value) {
      this[paddingHeightScale] = value;
    }
    get [_transformationController]() {
      let t33;
      t33 = this[__PdfScrollableState__transformationController];
      return t33 == null ? dart.throw(new _internal.LateError.fieldNI("_transformationController")) : t33;
    }
    set [_transformationController](t33) {
      this[__PdfScrollableState__transformationController] = t33;
    }
    get currentOffset() {
      let t34;
      t34 = this[__PdfScrollableState_currentOffset];
      return t34 == null ? dart.throw(new _internal.LateError.fieldNI("currentOffset")) : t34;
    }
    set currentOffset(t34) {
      this[__PdfScrollableState_currentOffset] = t34;
    }
    get currentZoomLevel() {
      let t35;
      t35 = this[__PdfScrollableState_currentZoomLevel];
      return t35 == null ? dart.throw(new _internal.LateError.fieldNI("currentZoomLevel")) : t35;
    }
    set currentZoomLevel(t35) {
      this[__PdfScrollableState_currentZoomLevel] = t35;
    }
    initState() {
      super.initState();
      this[_transformationController] = new interactive_viewer.TransformationController.new();
      this.currentOffset = ui.Offset.zero;
      this.currentZoomLevel = 1.0;
      if (this.widget.pdfViewerController.zoomLevel > 1) {
        this.scaleTo(this.widget.pdfViewerController.zoomLevel, {isZoomed: false});
      }
    }
    dispose() {
      this[_transformationController].dispose();
      super.dispose();
    }
    reset() {
      this.scaleTo(1.0, {isZoomed: false});
    }
    build(context) {
      this.currentOffset = this[_transformationController].toScene(ui.Offset.zero);
      this.currentZoomLevel = this[_transformationController].value.getMaxScaleOnAxis();
      return new scroll_head_overlay.ScrollHeadOverlay.new(this.widget.canShowPaginationDialog, this.widget.canShowScrollStatus, this.widget.canShowScrollHead, this.widget.pdfViewerController, this.widget.isMobileWebView, this.widget.pdfDimension, this.widget.viewportDimension, this.currentOffset, this.widget.maxScale, this.widget.minScale, dart.bind(this, 'scaleTo'), dart.bind(this, 'forcePixels'), this.widget.onDoubleTap, this.widget.enableDoubleTapZooming, this.widget.interactionMode, this.widget.scaleEnabled, this.widget.maxPdfPageWidth, this.widget.child, {isPanEnabled: this.widget.isPanEnabled, onInteractionStart: dart.bind(this, _handleInteractionStart$), onInteractionUpdate: dart.bind(this, _handleInteractionUpdate), onInteractionEnd: dart.bind(this, _handleInteractionEnd$), transformationController: this[_transformationController], onPdfOffsetChanged: dart.bind(this, _handlePdfOffsetChanged), $creationLocationd_0dea112b090073317d4: C[273] || CT.C273});
    }
    [_handleInteractionStart$](details) {
      if (!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView || pdfviewer_helper.kIsDesktop && this.widget.scaleEnabled) {
        this.previousZoomLevel = this.widget.pdfViewerController.zoomLevel;
      }
      this.paddingWidthScale = 0.0;
      this.paddingHeightScale = 0.0;
    }
    [_handleInteractionUpdate](details) {
      this.currentOffset = this[_transformationController].toScene(ui.Offset.zero);
      this[_currentScale] = this[_transformationController].value.getMaxScaleOnAxis();
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this.currentOffset);
      if (details.scale <= 1) {
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
          if (this.widget.viewportDimension.width[$round]() === (this.widget.pdfDimension.width * dart.nullCheck(this[_currentScale]))[$round]()) {
            this.setState(dart.fn(() => {
              this.paddingWidthScale = details.scale * dart.nullCheck(this[_currentScale]);
            }, T.VoidTovoid()));
          }
        } else {
          if (this.widget.viewportDimension.height[$round]() === (this.widget.pdfDimension.height * dart.nullCheck(this[_currentScale]))[$round]()) {
            this.setState(dart.fn(() => {
              this.paddingHeightScale = details.scale * dart.nullCheck(this[_currentScale]);
            }, T.VoidTovoid()));
          }
        }
      }
      if (details.scale === 1.0) {
        this[_currentScale] = 0.0;
      }
    }
    [_handleInteractionEnd$](details) {
      this.paddingWidthScale = 0.0;
      this.paddingHeightScale = 0.0;
      if (this[_currentScale] !== this.widget.pdfViewerController.zoomLevel && this[_currentScale] != null && this[_currentScale] !== 0.0 && (!pdfviewer_helper.kIsDesktop || pdfviewer_helper.kIsDesktop && this.widget.isMobileWebView || pdfviewer_helper.kIsDesktop && this.widget.scaleEnabled)) {
        this.widget.pdfViewerController.zoomLevel = dart.nullCheck(this[_currentScale]);
      }
      if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView && this.widget.maxPdfPageWidth * this.widget.pdfViewerController.zoomLevel < this.widget.viewportDimension.width) {
        this[_transformationController].value.translate(this.currentOffset.dx);
        this[_isOverFlowed] = false;
      } else {
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
          if (this[_isOverFlowed] === false) {
            this[_transformationController].value.translate(this.currentOffset.dx);
            this[_isOverFlowed] = true;
          }
        }
      }
    }
    receivedPointerSignal(event) {
      if (events.PointerScrollEvent.is(event)) {
        this.jumpTo({xOffset: this.currentOffset.dx + event.scrollDelta.dx, yOffset: this.currentOffset.dy + event.scrollDelta.dy});
      }
    }
    receivedPointerMoveSignal(event) {
      if (event.kind === ui.PointerDeviceKind.touch) {
        this.currentOffset = this[_transformationController].toScene(ui.Offset.zero);
      }
    }
    jumpTo(opts) {
      let xOffset = opts && 'xOffset' in opts ? opts.xOffset : null;
      let yOffset = opts && 'yOffset' in opts ? opts.yOffset : null;
      xOffset == null ? xOffset = this.currentOffset.dx : null;
      yOffset == null ? yOffset = this.currentOffset.dy : null;
      this[_handlePdfOffsetChanged](new ui.Offset.new(xOffset, yOffset));
    }
    [_handlePdfOffsetChanged](offset) {
      if (this.widget.pdfDimension.height !== 0) {
        if (this.widget.viewportDimension.width > this.widget.pdfDimension.width * this.widget.pdfViewerController.zoomLevel && (!pdfviewer_helper.kIsDesktop || this.widget.isMobileWebView)) {
          offset = new ui.Offset.new(this.currentOffset.dx, offset.dy);
        }
        let widthFactor = this.widget.pdfDimension.width - this.widget.viewportDimension.width / this.widget.pdfViewerController.zoomLevel;
        offset = new ui.Offset.new(offset.dx[$clamp](this[_setZoomLevel] === true ? -widthFactor : 0.0, widthFactor[$abs]()), offset.dy[$clamp](0.0, (this.widget.pdfDimension.height - this.widget.viewportDimension.height / this.widget.pdfViewerController.zoomLevel)[$abs]()));
        this[_setZoomLevel] = false;
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
          if (this.widget.viewportDimension.width > this.widget.pdfDimension.width * this.widget.pdfViewerController.zoomLevel) {
            offset = new ui.Offset.new(0.0, offset.dy);
          } else {
            offset = new ui.Offset.new(offset.dx, offset.dy);
          }
        }
        let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
        this[_transformationController].value.translate(previousOffset.dx - offset.dx, previousOffset.dy - offset.dy);
        dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController].toScene(ui.Offset.zero));
      }
    }
    [_setPixel](offset) {
      let widthFactor = this.widget.pdfDimension.width - this.widget.viewportDimension.width / this.widget.pdfViewerController.zoomLevel;
      offset = new ui.Offset.new(offset.dx[$clamp](-widthFactor, widthFactor[$abs]()), offset.dy[$clamp](0.0, (this.widget.pdfDimension.height - this.widget.viewportDimension.height / this.widget.pdfViewerController.zoomLevel)[$abs]()));
      let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
      this[_transformationController].value.translate(previousOffset.dx - offset.dx, previousOffset.dy - offset.dy);
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController].toScene(ui.Offset.zero));
    }
    forcePixels(offset, opts) {
      let t36;
      let isZoomInitiated = opts && 'isZoomInitiated' in opts ? opts.isZoomInitiated : null;
      if (isZoomInitiated === true) {
        this[_setPixel](offset);
      } else {
        t36 = binding.WidgetsBinding.instance;
        t36 == null ? null : t36.addPostFrameCallback(dart.fn(timeStamp => {
          this[_setPixel](offset);
        }, T.DurationTovoid()));
      }
    }
    scaleTo(zoomLevel, opts) {
      let isZoomed = opts && 'isZoomed' in opts ? opts.isZoomed : true;
      this.currentZoomLevel = this[_transformationController].value.getMaxScaleOnAxis();
      if (this.currentZoomLevel !== zoomLevel) {
        this.previousZoomLevel = this.currentZoomLevel;
        this[_setZoomLevel] = true;
        let zoomChangeFactor = zoomLevel / this.currentZoomLevel;
        let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
        this[_transformationController].value.scale(zoomChangeFactor, zoomChangeFactor);
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView && this.widget.maxPdfPageWidth * zoomLevel < this.widget.viewportDimension.width) {
          this[_isOverFlowed] = false;
        }
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
          this.jumpTo({xOffset: previousOffset.dx, yOffset: previousOffset.dy});
        } else {
          this.forcePixels(previousOffset, {isZoomInitiated: isZoomed});
        }
      }
      return zoomLevel;
    }
    getPageNumber(offset) {
      let pageNumber = 0;
      for (let i = 1; i <= this.widget.pdfViewerController.pageCount; i = i + 1) {
        if (i === this.widget.pdfViewerController.pageCount || offset[$round]() >= this.widget.maxScrollExtent[$round]()) {
          pageNumber = this.widget.pdfViewerController.pageCount;
          break;
        } else if (offset[$round]() >= dart.nullCheck(this.widget.pdfPages[$_get](i)).pageOffset[$round]() && offset[$round]() < dart.nullCheck(this.widget.pdfPages[$_get](i + 1)).pageOffset[$round]()) {
          pageNumber = i;
          break;
        } else {
          continue;
        }
      }
      return pageNumber;
    }
  };
  (pdf_scrollable.PdfScrollableState.new = function() {
    this[__PdfScrollableState__transformationController] = null;
    this[_currentScale] = null;
    this[_setZoomLevel] = null;
    this[_isOverFlowed] = false;
    this[__PdfScrollableState_currentOffset] = null;
    this[__PdfScrollableState_currentZoomLevel] = null;
    this[previousZoomLevel] = 1.0;
    this[paddingWidthScale] = 0.0;
    this[paddingHeightScale] = 0.0;
    pdf_scrollable.PdfScrollableState.__proto__.new.call(this);
    ;
  }).prototype = pdf_scrollable.PdfScrollableState.prototype;
  dart.addTypeTests(pdf_scrollable.PdfScrollableState);
  dart.addTypeCaches(pdf_scrollable.PdfScrollableState);
  dart.setMethodSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getMethods(pdf_scrollable.PdfScrollableState.__proto__),
    reset: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handleInteractionStart$]: dart.fnType(dart.void, [scale.ScaleStartDetails]),
    [_handleInteractionUpdate]: dart.fnType(dart.void, [scale.ScaleUpdateDetails]),
    [_handleInteractionEnd$]: dart.fnType(dart.void, [scale.ScaleEndDetails]),
    receivedPointerSignal: dart.fnType(dart.void, [events.PointerSignalEvent]),
    receivedPointerMoveSignal: dart.fnType(dart.void, [events.PointerMoveEvent]),
    jumpTo: dart.fnType(dart.void, [], {xOffset: dart.nullable(core.double), yOffset: dart.nullable(core.double)}, {}),
    [_handlePdfOffsetChanged]: dart.fnType(dart.void, [ui.Offset]),
    [_setPixel]: dart.fnType(dart.void, [ui.Offset]),
    forcePixels: dart.fnType(dart.void, [ui.Offset], {isZoomInitiated: dart.nullable(core.bool)}, {}),
    scaleTo: dart.fnType(core.double, [core.double], {isZoomed: core.bool}, {}),
    getPageNumber: dart.fnType(core.int, [core.double])
  }));
  dart.setGetterSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getGetters(pdf_scrollable.PdfScrollableState.__proto__),
    [_transformationController]: interactive_viewer.TransformationController,
    currentOffset: ui.Offset,
    currentZoomLevel: core.double
  }));
  dart.setSetterSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getSetters(pdf_scrollable.PdfScrollableState.__proto__),
    [_transformationController]: interactive_viewer.TransformationController,
    currentOffset: ui.Offset,
    currentZoomLevel: core.double
  }));
  dart.setLibraryUri(pdf_scrollable.PdfScrollableState, I[8]);
  dart.setFieldSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getFields(pdf_scrollable.PdfScrollableState.__proto__),
    [__PdfScrollableState__transformationController]: dart.fieldType(dart.nullable(interactive_viewer.TransformationController)),
    [_currentScale]: dart.fieldType(dart.nullable(core.double)),
    [_setZoomLevel]: dart.fieldType(dart.nullable(core.bool)),
    [_isOverFlowed]: dart.fieldType(core.bool),
    [__PdfScrollableState_currentOffset]: dart.fieldType(dart.nullable(ui.Offset)),
    [__PdfScrollableState_currentZoomLevel]: dart.fieldType(dart.nullable(core.double)),
    previousZoomLevel: dart.fieldType(core.double),
    paddingWidthScale: dart.fieldType(core.double),
    paddingHeightScale: dart.fieldType(core.double)
  }));
  var imageStream$ = dart.privateName(pdf_page_view, "PdfPageView.imageStream");
  var width$0 = dart.privateName(pdf_page_view, "PdfPageView.width");
  var height$0 = dart.privateName(pdf_page_view, "PdfPageView.height");
  var pageSpacing$ = dart.privateName(pdf_page_view, "PdfPageView.pageSpacing");
  var pdfDocument$1 = dart.privateName(pdf_page_view, "PdfPageView.pdfDocument");
  var viewportGlobalRect$1 = dart.privateName(pdf_page_view, "PdfPageView.viewportGlobalRect");
  var parentViewport$ = dart.privateName(pdf_page_view, "PdfPageView.parentViewport");
  var enableDocumentLinkAnnotation$ = dart.privateName(pdf_page_view, "PdfPageView.enableDocumentLinkAnnotation");
  var pageIndex$0 = dart.privateName(pdf_page_view, "PdfPageView.pageIndex");
  var pdfPages$1 = dart.privateName(pdf_page_view, "PdfPageView.pdfPages");
  var interactionMode$2 = dart.privateName(pdf_page_view, "PdfPageView.interactionMode");
  var pdfViewerController$4 = dart.privateName(pdf_page_view, "PdfPageView.pdfViewerController");
  var enableTextSelection$0 = dart.privateName(pdf_page_view, "PdfPageView.enableTextSelection");
  var onTextSelectionChanged$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionChanged");
  var onTextSelectionDragStarted$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionDragStarted");
  var onTextSelectionDragEnded$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionDragEnded");
  var searchTextHighlightColor$0 = dart.privateName(pdf_page_view, "PdfPageView.searchTextHighlightColor");
  var textCollection$0 = dart.privateName(pdf_page_view, "PdfPageView.textCollection");
  var pdfTextSearchResult$0 = dart.privateName(pdf_page_view, "PdfPageView.pdfTextSearchResult");
  var onDocumentLinkNavigationInvoked$0 = dart.privateName(pdf_page_view, "PdfPageView.onDocumentLinkNavigationInvoked");
  var isMobileWebView$3 = dart.privateName(pdf_page_view, "PdfPageView.isMobileWebView");
  var pdfScrollableStateKey$1 = dart.privateName(pdf_page_view, "PdfPageView.pdfScrollableStateKey");
  pdf_page_view.PdfPageView = class PdfPageView extends framework.StatefulWidget {
    get imageStream() {
      return this[imageStream$];
    }
    set imageStream(value) {
      super.imageStream = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get pageSpacing() {
      return this[pageSpacing$];
    }
    set pageSpacing(value) {
      super.pageSpacing = value;
    }
    get pdfDocument() {
      return this[pdfDocument$1];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get viewportGlobalRect() {
      return this[viewportGlobalRect$1];
    }
    set viewportGlobalRect(value) {
      super.viewportGlobalRect = value;
    }
    get parentViewport() {
      return this[parentViewport$];
    }
    set parentViewport(value) {
      super.parentViewport = value;
    }
    get enableDocumentLinkAnnotation() {
      return this[enableDocumentLinkAnnotation$];
    }
    set enableDocumentLinkAnnotation(value) {
      super.enableDocumentLinkAnnotation = value;
    }
    get pageIndex() {
      return this[pageIndex$0];
    }
    set pageIndex(value) {
      super.pageIndex = value;
    }
    get pdfPages() {
      return this[pdfPages$1];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get interactionMode() {
      return this[interactionMode$2];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$4];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$0];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$0];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get onTextSelectionDragStarted() {
      return this[onTextSelectionDragStarted$0];
    }
    set onTextSelectionDragStarted(value) {
      super.onTextSelectionDragStarted = value;
    }
    get onTextSelectionDragEnded() {
      return this[onTextSelectionDragEnded$0];
    }
    set onTextSelectionDragEnded(value) {
      super.onTextSelectionDragEnded = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$0];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get textCollection() {
      return this[textCollection$0];
    }
    set textCollection(value) {
      super.textCollection = value;
    }
    get pdfTextSearchResult() {
      return this[pdfTextSearchResult$0];
    }
    set pdfTextSearchResult(value) {
      super.pdfTextSearchResult = value;
    }
    get onDocumentLinkNavigationInvoked() {
      return this[onDocumentLinkNavigationInvoked$0];
    }
    set onDocumentLinkNavigationInvoked(value) {
      super.onDocumentLinkNavigationInvoked = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$3];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get pdfScrollableStateKey() {
      return this[pdfScrollableStateKey$1];
    }
    set pdfScrollableStateKey(value) {
      super.pdfScrollableStateKey = value;
    }
    createState() {
      return new pdf_page_view.PdfPageViewState.new();
    }
  };
  (pdf_page_view.PdfPageView.new = function(key, imageStream, viewportGlobalRect, parentViewport, interactionMode, width, height, pageSpacing, pdfDocument, pdfPages, pageIndex, pdfViewerController, enableDocumentLinkAnnotation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, onDocumentLinkNavigationInvoked, searchTextHighlightColor, textCollection, isMobileWebView, pdfTextSearchResult, pdfScrollableStateKey, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[imageStream$] = imageStream;
    this[viewportGlobalRect$1] = viewportGlobalRect;
    this[parentViewport$] = parentViewport;
    this[interactionMode$2] = interactionMode;
    this[width$0] = width;
    this[height$0] = height;
    this[pageSpacing$] = pageSpacing;
    this[pdfDocument$1] = pdfDocument;
    this[pdfPages$1] = pdfPages;
    this[pageIndex$0] = pageIndex;
    this[pdfViewerController$4] = pdfViewerController;
    this[enableDocumentLinkAnnotation$] = enableDocumentLinkAnnotation;
    this[enableTextSelection$0] = enableTextSelection;
    this[onTextSelectionChanged$0] = onTextSelectionChanged;
    this[onTextSelectionDragStarted$0] = onTextSelectionDragStarted;
    this[onTextSelectionDragEnded$0] = onTextSelectionDragEnded;
    this[onDocumentLinkNavigationInvoked$0] = onDocumentLinkNavigationInvoked;
    this[searchTextHighlightColor$0] = searchTextHighlightColor;
    this[textCollection$0] = textCollection;
    this[isMobileWebView$3] = isMobileWebView;
    this[pdfTextSearchResult$0] = pdfTextSearchResult;
    this[pdfScrollableStateKey$1] = pdfScrollableStateKey;
    pdf_page_view.PdfPageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdf_page_view.PdfPageView.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageView);
  dart.addTypeCaches(pdf_page_view.PdfPageView);
  dart.setMethodSignature(pdf_page_view.PdfPageView, () => ({
    __proto__: dart.getMethods(pdf_page_view.PdfPageView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(pdf_page_view.PdfPageView, I[9]);
  dart.setFieldSignature(pdf_page_view.PdfPageView, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageView.__proto__),
    imageStream: dart.finalFieldType(dart.nullable(typed_data.Uint8List)),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    pageSpacing: dart.finalFieldType(core.double),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    viewportGlobalRect: dart.finalFieldType(dart.nullable(ui.Rect)),
    parentViewport: dart.finalFieldType(ui.Size),
    enableDocumentLinkAnnotation: dart.finalFieldType(core.bool),
    pageIndex: dart.finalFieldType(core.int),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    enableTextSelection: dart.finalFieldType(core.bool),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    onTextSelectionDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionDragEnded: dart.finalFieldType(dart.fnType(dart.void, [])),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    textCollection: dart.finalFieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    pdfTextSearchResult: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    onDocumentLinkNavigationInvoked: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    isMobileWebView: dart.finalFieldType(core.bool),
    pdfScrollableStateKey: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState))
  }));
  var cursor = dart.privateName(pdf_page_view, "PdfPageViewState.cursor");
  var focusNode = dart.privateName(pdf_page_view, "PdfPageViewState.focusNode");
  var _pdfViewerThemeData$2 = dart.privateName(pdf_page_view, "_pdfViewerThemeData");
  var _canvasKey = dart.privateName(pdf_page_view, "_canvasKey");
  var _jumpOffset$ = dart.privateName(pdf_page_view, "_jumpOffset");
  var _lastTap = dart.privateName(pdf_page_view, "_lastTap");
  var _consecutiveTaps = dart.privateName(pdf_page_view, "_consecutiveTaps");
  var _scroll = dart.privateName(pdf_page_view, "_scroll");
  var _scrollWhileSelection = dart.privateName(pdf_page_view, "_scrollWhileSelection");
  pdf_page_view.PdfPageViewState = class PdfPageViewState extends framework.State$(pdf_page_view.PdfPageView) {
    get cursor() {
      return this[cursor];
    }
    set cursor(value) {
      this[cursor] = value;
    }
    get focusNode() {
      return this[focusNode];
    }
    set focusNode(value) {
      this[focusNode] = value;
    }
    get canvasRenderBox() {
      let t36, t36$;
      return (t36 = this[_canvasKey].currentContext, t36 == null ? null : t36.findRenderObject()) != null ? pdfviewer_canvas.CanvasRenderBox.as((t36$ = this[_canvasKey].currentContext, t36$ == null ? null : dart.nullCheck(t36$.findRenderObject()))) : null;
    }
    initState() {
      if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
        web_helper.preventDefaultMenu();
        this.focusNode.addListener(dart.fn(() => {
          web_helper.hasPrimaryFocus = this.focusNode.hasFocus;
        }, T.VoidTovoid()));
      }
      super.initState();
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$2] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      let t37, t36, t37$, t36$;
      t36 = binding$.PaintingBinding.instance;
      t36 == null ? null : (t37 = t36.imageCache, t37 == null ? null : t37.clear());
      t36$ = binding$.PaintingBinding.instance;
      t36$ == null ? null : (t37$ = t36$.imageCache, t37$ == null ? null : t37$.clearLiveImages());
      this[_pdfViewerThemeData$2] = null;
      super.dispose();
    }
    [_scroll](isReachedTop, isSelectionScroll) {
      let t36, t36$;
      if (isSelectionScroll) {
        dart.nullCheck(this.canvasRenderBox).getSelectionDetails().endBubbleY = dart.nullCheck(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().endBubbleY) + (isReachedTop ? -3 : 3);
      }
      let position = this.widget.pdfViewerController.scrollOffset.dy + (isReachedTop ? -this[_jumpOffset$] : this[_jumpOffset$]);
      if (isSelectionScroll) {
        t36 = binding.WidgetsBinding.instance;
        t36 == null ? null : t36.addPostFrameCallback(dart.fn(timeStamp => {
          let t37;
          t37 = this.widget.pdfScrollableStateKey.currentState;
          t37 == null ? null : t37.jumpTo({yOffset: position});
        }, T.DurationTovoid()));
      } else {
        t36$ = this.widget.pdfScrollableStateKey.currentState;
        t36$ == null ? null : t36$.jumpTo({yOffset: position});
      }
    }
    [_scrollWhileSelection]() {
      let t36;
      if (this.canvasRenderBox != null && dart.nullCheck(this.canvasRenderBox).getSelectionDetails().isCursorExit && dart.nullCheck(this.canvasRenderBox).getSelectionDetails().mouseSelectionEnabled) {
        let details = dart.nullCheck(this.canvasRenderBox).getSelectionDetails();
        let viewId = (t36 = dart.nullCheck(this.canvasRenderBox).getSelectionDetails().viewId, t36 == null ? 0 : t36);
        if (details.isCursorReachedTop && this.widget.pdfViewerController.pageNumber >= viewId + 1) {
          this[_scroll](details.isCursorReachedTop, true);
        } else if (!details.isCursorReachedTop && this.widget.pdfViewerController.pageNumber <= viewId + 1) {
          this[_scroll](details.isCursorReachedTop, true);
        }
        if (this.widget.onTextSelectionChanged != null) {
          dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
        }
      }
    }
    build(context) {
      let t37, t36, t37$, t36$;
      t36 = binding$.PaintingBinding.instance;
      t36 == null ? null : (t37 = t36.imageCache, t37 == null ? null : t37.clear());
      t36$ = binding$.PaintingBinding.instance;
      t36$ == null ? null : (t37$ = t36$.imageCache, t37$ == null ? null : t37$.clearLiveImages());
      if (this.widget.imageStream != null) {
        this[_scrollWhileSelection]();
        let page = new container.Container.new({height: this.widget.height + this.widget.pageSpacing, alignment: alignment.Alignment.topCenter, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new image.Image.memory(dart.nullCheck(this.widget.imageStream), {width: this.widget.width, height: this.widget.height, fit: box_fit.BoxFit.fitWidth, alignment: alignment.Alignment.center, $creationLocationd_0dea112b090073317d4: C[299] || CT.C299}), new container.Container.new({height: this.widget.pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$2]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[306] || CT.C306})]), $creationLocationd_0dea112b090073317d4: C[310] || CT.C310}), $creationLocationd_0dea112b090073317d4: C[313] || CT.C313});
        let pdfPage = pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView ? new container.Container.new({height: this.widget.height + this.widget.pageSpacing, width: this.widget.width, color: colors.Colors.white, alignment: alignment.Alignment.topCenter, child: page, $creationLocationd_0dea112b090073317d4: C[318] || CT.C318}) : new container.Container.new({height: this.widget.height + this.widget.pageSpacing, width: this.widget.width, color: colors.Colors.white, alignment: alignment.Alignment.topCenter, child: page, $creationLocationd_0dea112b090073317d4: C[325] || CT.C325});
        let canvasContainer = new container.Container.new({height: this.widget.height, width: this.widget.width, alignment: alignment.Alignment.topCenter, child: new pdfviewer_canvas.PdfViewerCanvas.new(this[_canvasKey], this.widget.height, this.widget.width, this.widget.pdfDocument, this.widget.pageIndex, this.widget.pdfPages, this.widget.interactionMode, this.widget.pdfViewerController, this.widget.enableDocumentLinkAnnotation, this.widget.enableTextSelection, this.widget.onTextSelectionChanged, this.widget.onTextSelectionDragStarted, this.widget.onTextSelectionDragEnded, this.widget.onDocumentLinkNavigationInvoked, this.widget.textCollection, this.widget.searchTextHighlightColor, this.widget.pdfTextSearchResult, this.widget.isMobileWebView, this.widget.pdfScrollableStateKey, this.widget.viewportGlobalRect, {$creationLocationd_0dea112b090073317d4: C[332] || CT.C332}), $creationLocationd_0dea112b090073317d4: C[354] || CT.C354});
        let canvas = pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView && this.canvasRenderBox != null ? new basic.Listener.new({onPointerSignal: dart.fn(details => {
            dart.nullCheck(this.canvasRenderBox).updateContextMenuPosition();
          }, T.PointerSignalEventTovoid()), onPointerDown: dart.fn(details => {
            if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
              let now = new core.DateTime.now().millisecondsSinceEpoch;
              if (now - this[_lastTap] <= 500) {
                this[_consecutiveTaps] = this[_consecutiveTaps] + 1;
                if (this[_consecutiveTaps] === 2 && details.buttons !== 2) {
                  dart.nullCheck(this.canvasRenderBox).handleDoubleTapDown(details);
                }
                if (this[_consecutiveTaps] === 3 && details.buttons !== 2) {
                  dart.nullCheck(this.canvasRenderBox).handleTripleTapDown(details);
                }
              } else {
                this[_consecutiveTaps] = 1;
              }
              this[_lastTap] = now;
            }
          }, T.PointerDownEventTovoid()), child: new raw_keyboard_listener.RawKeyboardListener.new({autofocus: true, focusNode: this.focusNode, onKey: dart.fn(event => {
              let t36;
              let isPrimaryKeyPressed = pdfviewer_helper.kIsMacOS ? event.isMetaPressed : event.isControlPressed;
              if ((dart.nullCheck(this.canvasRenderBox).getSelectionDetails().mouseSelectionEnabled || dart.nullCheck(this.canvasRenderBox).getSelectionDetails().selectionEnabled) && isPrimaryKeyPressed && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.keyC)) {
                clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: (t36 = dart.nullCheck(this.canvasRenderBox).getSelectionDetails().copiedText, t36 == null ? "" : t36)}));
              }
              if (isPrimaryKeyPressed && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.digit0)) {
                this.widget.pdfViewerController.zoomLevel = 1.0;
              }
              if (isPrimaryKeyPressed && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.minus)) {
                if (event[$runtimeType].toString() === "RawKeyDownEvent") {
                  let zoomLevel = this.widget.pdfViewerController.zoomLevel;
                  if (zoomLevel >= 1.0 && zoomLevel <= 1.25) {
                    zoomLevel = 1.0;
                  } else if (zoomLevel > 1.25 && zoomLevel <= 1.5) {
                    zoomLevel = 1.25;
                  } else if (zoomLevel > 1.5 && zoomLevel <= 2.0) {
                    zoomLevel = 1.5;
                  } else {
                    zoomLevel = 2.0;
                  }
                  this.widget.pdfViewerController.zoomLevel = zoomLevel;
                }
              }
              if (isPrimaryKeyPressed && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.equal)) {
                if (event[$runtimeType].toString() === "RawKeyDownEvent") {
                  let zoomLevel = this.widget.pdfViewerController.zoomLevel;
                  if (zoomLevel >= 1.0 && zoomLevel < 1.25) {
                    zoomLevel = 1.25;
                  } else if (zoomLevel >= 1.25 && zoomLevel < 1.5) {
                    zoomLevel = 1.5;
                  } else if (zoomLevel >= 1.5 && zoomLevel < 2.0) {
                    zoomLevel = 2.0;
                  } else {
                    zoomLevel = 3.0;
                  }
                  this.widget.pdfViewerController.zoomLevel = zoomLevel;
                }
              }
              if (event[$runtimeType].toString() === "RawKeyDownEvent") {
                if (event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.home) || pdfviewer_helper.kIsMacOS && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.fn) && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.arrowLeft)) {
                  this.widget.pdfViewerController.jumpToPage(1);
                } else if (event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.end) || pdfviewer_helper.kIsMacOS && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.fn) && event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.arrowRight)) {
                  this.widget.pdfViewerController.jumpToPage(this.widget.pdfViewerController.pageCount);
                } else if (event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.arrowRight)) {
                  this.widget.pdfViewerController.nextPage();
                } else if (event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.arrowLeft)) {
                  this.widget.pdfViewerController.previousPage();
                }
              }
              if (event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.arrowUp)) {
                this[_scroll](true, false);
              }
              if (event.logicalKey._equals(keyboard_key.LogicalKeyboardKey.arrowDown)) {
                this[_scroll](false, false);
              }
            }, T.RawKeyEventTovoid()), child: new basic.MouseRegion.new({cursor: this.cursor, onHover: dart.fn(details => {
                this.setState(dart.fn(() => {
                  if (this.canvasRenderBox != null) {
                    if (this.widget.interactionMode === enums.PdfInteractionMode.selection) {
                      let isText = dart.nullCheck(this.canvasRenderBox).findTextWhileHover(details.localPosition) != null;
                      let isTOC = dart.nullCheck(this.canvasRenderBox).findTOC(details.localPosition);
                      if (isTOC) {
                        this.cursor = mouse_cursor.SystemMouseCursors.click;
                      } else if (isText && !isTOC) {
                        this.cursor = mouse_cursor.SystemMouseCursors.text;
                      } else {
                        this.cursor = mouse_cursor.SystemMouseCursors.basic;
                      }
                    } else {
                      let isTOC = dart.nullCheck(this.canvasRenderBox).findTOC(details.localPosition);
                      if (isTOC) {
                        this.cursor = mouse_cursor.SystemMouseCursors.click;
                      } else if (!this.cursor._equals(mouse_cursor.SystemMouseCursors.grab)) {
                        this.cursor = mouse_cursor.SystemMouseCursors.grab;
                      }
                    }
                  }
                }, T.VoidTovoid()));
              }, T.PointerHoverEventTovoid()), child: canvasContainer, $creationLocationd_0dea112b090073317d4: C[360] || CT.C360}), $creationLocationd_0dea112b090073317d4: C[365] || CT.C365}), $creationLocationd_0dea112b090073317d4: C[371] || CT.C371}) : canvasContainer;
        let child = T.JSArrayOfWidget().of([pdfPage, canvas]);
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView) {
          let widthFactor = dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingWidthScale === 0 ? this.widget.pdfViewerController.zoomLevel : dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingWidthScale;
          child[$insert](0, new basic.MouseRegion.new({cursor: this.cursor, onHover: dart.fn(details => {
              this.setState(dart.fn(() => {
                if (this.widget.interactionMode === enums.PdfInteractionMode.pan) {
                  this.cursor = mouse_cursor.SystemMouseCursors.grab;
                } else {
                  this.cursor = mouse_cursor.SystemMouseCursors.basic;
                }
              }, T.VoidTovoid()));
            }, T.PointerHoverEventTovoid()), child: new basic.FittedBox.new({fit: box_fit.BoxFit.fitWidth, clipBehavior: ui.Clip.hardEdge, child: new container.Container.new({alignment: alignment.Alignment.topLeft, height: this.widget.height + this.widget.pageSpacing, width: this.widget.parentViewport.width / widthFactor[$clamp](1, 3), $creationLocationd_0dea112b090073317d4: C[376] || CT.C376}), $creationLocationd_0dea112b090073317d4: C[381] || CT.C381}), $creationLocationd_0dea112b090073317d4: C[386] || CT.C386}));
        } else {
          if (pdf_scrollable.PdfScrollable.as(this.widget.pdfScrollableStateKey.currentWidget).pdfDimension.height * (dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingHeightScale === 0 ? this.widget.pdfViewerController.zoomLevel : dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingHeightScale) < this.widget.parentViewport.height) {
            let paddingHeight = this.widget.height < this.widget.parentViewport.height / (dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingHeightScale === 0 ? this.widget.pdfViewerController.zoomLevel : dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingHeightScale) ? this.widget.parentViewport.height / (dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingHeightScale === 0 ? this.widget.pdfViewerController.zoomLevel : dart.nullCheck(this.widget.pdfScrollableStateKey.currentState).paddingHeightScale) - this.widget.height : 0.0;
            if (paddingHeight > 0) {
              let emptyContainer = new container.Container.new({alignment: alignment.Alignment.topCenter, width: this.widget.width, height: (paddingHeight / 2)[$clamp](0.0, this.widget.parentViewport.height - this.widget.height), $creationLocationd_0dea112b090073317d4: C[391] || CT.C391});
              return new basic.Column.new({children: T.JSArrayOfWidget().of([emptyContainer, new basic.Stack.new({alignment: alignment.Alignment.topCenter, children: child, $creationLocationd_0dea112b090073317d4: C[396] || CT.C396})]), $creationLocationd_0dea112b090073317d4: C[400] || CT.C400});
            }
          }
        }
        return new basic.Stack.new({alignment: alignment.Alignment.topCenter, children: child, $creationLocationd_0dea112b090073317d4: C[403] || CT.C403});
      } else {
        let child = new container.Container.new({height: this.widget.height + this.widget.pageSpacing, width: this.widget.width, alignment: alignment.Alignment.topCenter, color: colors.Colors.white, foregroundDecoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: new borders.BorderSide.new({width: this.widget.pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$2]).backgroundColor})})}), $creationLocationd_0dea112b090073317d4: C[407] || CT.C407});
        if (pdfviewer_helper.kIsDesktop && !this.widget.isMobileWebView && this.widget.parentViewport.width > this.widget.width * this.widget.pdfViewerController.zoomLevel) {
          return new basic.FittedBox.new({fit: box_fit.BoxFit.fitWidth, clipBehavior: ui.Clip.hardEdge, child: new container.Container.new({alignment: alignment.Alignment.topCenter, height: this.widget.height + this.widget.pageSpacing, width: this.widget.parentViewport.width / this.widget.pdfViewerController.zoomLevel, child: child, $creationLocationd_0dea112b090073317d4: C[414] || CT.C414}), $creationLocationd_0dea112b090073317d4: C[420] || CT.C420});
        } else {
          return child;
        }
      }
    }
  };
  (pdf_page_view.PdfPageViewState.new = function() {
    this[_pdfViewerThemeData$2] = null;
    this[_canvasKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_jumpOffset$] = 10.0;
    this[_lastTap] = new core.DateTime.now().millisecondsSinceEpoch;
    this[_consecutiveTaps] = 1;
    this[cursor] = mouse_cursor.SystemMouseCursors.basic;
    this[focusNode] = new focus_manager.FocusNode.new();
    pdf_page_view.PdfPageViewState.__proto__.new.call(this);
    ;
  }).prototype = pdf_page_view.PdfPageViewState.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageViewState);
  dart.addTypeCaches(pdf_page_view.PdfPageViewState);
  dart.setMethodSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getMethods(pdf_page_view.PdfPageViewState.__proto__),
    [_scroll]: dart.fnType(dart.void, [core.bool, core.bool]),
    [_scrollWhileSelection]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getGetters(pdf_page_view.PdfPageViewState.__proto__),
    canvasRenderBox: dart.nullable(pdfviewer_canvas.CanvasRenderBox)
  }));
  dart.setLibraryUri(pdf_page_view.PdfPageViewState, I[9]);
  dart.setFieldSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageViewState.__proto__),
    [_pdfViewerThemeData$2]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_canvasKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_jumpOffset$]: dart.finalFieldType(core.double),
    [_lastTap]: dart.fieldType(core.int),
    [_consecutiveTaps]: dart.fieldType(core.int),
    cursor: dart.fieldType(mouse_cursor.SystemMouseCursor),
    focusNode: dart.fieldType(focus_manager.FocusNode)
  }));
  var pageOffset$ = dart.privateName(pdf_page_view, "PdfPageInfo.pageOffset");
  var pageSize$ = dart.privateName(pdf_page_view, "PdfPageInfo.pageSize");
  pdf_page_view.PdfPageInfo = class PdfPageInfo extends core.Object {
    get pageOffset() {
      return this[pageOffset$];
    }
    set pageOffset(value) {
      super.pageOffset = value;
    }
    get pageSize() {
      return this[pageSize$];
    }
    set pageSize(value) {
      super.pageSize = value;
    }
  };
  (pdf_page_view.PdfPageInfo.new = function(pageOffset, pageSize) {
    this[pageOffset$] = pageOffset;
    this[pageSize$] = pageSize;
    ;
  }).prototype = pdf_page_view.PdfPageInfo.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageInfo);
  dart.addTypeCaches(pdf_page_view.PdfPageInfo);
  dart.setLibraryUri(pdf_page_view.PdfPageInfo, I[9]);
  dart.setFieldSignature(pdf_page_view.PdfPageInfo, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageInfo.__proto__),
    pageOffset: dart.finalFieldType(core.double),
    pageSize: dart.finalFieldType(ui.Size)
  }));
  var interactionMode$3 = dart.privateName(pdfviewer, "SfPdfViewer.interactionMode");
  var initialZoomLevel$ = dart.privateName(pdfviewer, "SfPdfViewer.initialZoomLevel");
  var initialScrollOffset$ = dart.privateName(pdfviewer, "SfPdfViewer.initialScrollOffset");
  var enableDocumentLinkAnnotation$0 = dart.privateName(pdfviewer, "SfPdfViewer.enableDocumentLinkAnnotation");
  var pageSpacing$0 = dart.privateName(pdfviewer, "SfPdfViewer.pageSpacing");
  var controller$0 = dart.privateName(pdfviewer, "SfPdfViewer.controller");
  var canShowScrollHead$1 = dart.privateName(pdfviewer, "SfPdfViewer.canShowScrollHead");
  var canShowScrollStatus$1 = dart.privateName(pdfviewer, "SfPdfViewer.canShowScrollStatus");
  var canShowPaginationDialog$1 = dart.privateName(pdfviewer, "SfPdfViewer.canShowPaginationDialog");
  var enableDoubleTapZooming$1 = dart.privateName(pdfviewer, "SfPdfViewer.enableDoubleTapZooming");
  var enableTextSelection$1 = dart.privateName(pdfviewer, "SfPdfViewer.enableTextSelection");
  var searchTextHighlightColor$1 = dart.privateName(pdfviewer, "SfPdfViewer.searchTextHighlightColor");
  var onDocumentLoaded$ = dart.privateName(pdfviewer, "SfPdfViewer.onDocumentLoaded");
  var onDocumentLoadFailed$ = dart.privateName(pdfviewer, "SfPdfViewer.onDocumentLoadFailed");
  var onZoomLevelChanged$ = dart.privateName(pdfviewer, "SfPdfViewer.onZoomLevelChanged");
  var onTextSelectionChanged$1 = dart.privateName(pdfviewer, "SfPdfViewer.onTextSelectionChanged");
  var onPageChanged$ = dart.privateName(pdfviewer, "SfPdfViewer.onPageChanged");
  var _name$0 = dart.privateName(enums, "_name");
  var _provider = dart.privateName(pdfviewer, "_provider");
  pdfviewer.SfPdfViewer = class SfPdfViewer extends framework.StatefulWidget {
    get interactionMode() {
      return this[interactionMode$3];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get initialZoomLevel() {
      return this[initialZoomLevel$];
    }
    set initialZoomLevel(value) {
      super.initialZoomLevel = value;
    }
    get initialScrollOffset() {
      return this[initialScrollOffset$];
    }
    set initialScrollOffset(value) {
      super.initialScrollOffset = value;
    }
    get enableDocumentLinkAnnotation() {
      return this[enableDocumentLinkAnnotation$0];
    }
    set enableDocumentLinkAnnotation(value) {
      super.enableDocumentLinkAnnotation = value;
    }
    get pageSpacing() {
      return this[pageSpacing$0];
    }
    set pageSpacing(value) {
      super.pageSpacing = value;
    }
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$1];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$1];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$1];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$1];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$1];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$1];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get onDocumentLoaded() {
      return this[onDocumentLoaded$];
    }
    set onDocumentLoaded(value) {
      super.onDocumentLoaded = value;
    }
    get onDocumentLoadFailed() {
      return this[onDocumentLoadFailed$];
    }
    set onDocumentLoadFailed(value) {
      super.onDocumentLoadFailed = value;
    }
    get onZoomLevelChanged() {
      return this[onZoomLevelChanged$];
    }
    set onZoomLevelChanged(value) {
      super.onZoomLevelChanged = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$1];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get onPageChanged() {
      return this[onPageChanged$];
    }
    set onPageChanged(value) {
      super.onPageChanged = value;
    }
    createState() {
      return new pdfviewer.SfPdfViewerState.new();
    }
  };
  (pdfviewer.SfPdfViewer.asset = function(name, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[120] || CT.C120;
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[425] || CT.C425;
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[426] || CT.C426;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$1] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$] = onZoomLevelChanged;
    this[canShowScrollStatus$1] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[enableDoubleTapZooming$1] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$1] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$3] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.AssetPdf.new(name, bundle);
    if (!(pageSpacing >= 0)) dart.assertFailed(null, I[10], 140, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.network = function(src, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[120] || CT.C120;
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[425] || CT.C425;
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[426] || CT.C426;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$1] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$] = onZoomLevelChanged;
    this[canShowScrollStatus$1] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[enableDoubleTapZooming$1] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$1] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$3] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.NetworkPdf.new(src, headers);
    if (!(pageSpacing >= 0)) dart.assertFailed(null, I[10], 186, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.memory = function(bytes, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[120] || CT.C120;
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[425] || CT.C425;
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[426] || CT.C426;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$1] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$] = onZoomLevelChanged;
    this[canShowScrollStatus$1] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[enableDoubleTapZooming$1] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$1] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$3] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.MemoryPdf.new(bytes);
    if (!(pageSpacing >= 0)) dart.assertFailed(null, I[10], 230, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.file = function(file, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[120] || CT.C120;
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[425] || CT.C425;
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[426] || CT.C426;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$1] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$] = onZoomLevelChanged;
    this[canShowScrollStatus$1] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[enableDoubleTapZooming$1] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$1] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$3] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.FilePdf.new(file);
    if (!(pageSpacing >= 0)) dart.assertFailed(null, I[10], 279, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  dart.addTypeTests(pdfviewer.SfPdfViewer);
  dart.addTypeCaches(pdfviewer.SfPdfViewer);
  dart.setMethodSignature(pdfviewer.SfPdfViewer, () => ({
    __proto__: dart.getMethods(pdfviewer.SfPdfViewer.__proto__),
    createState: dart.fnType(pdfviewer.SfPdfViewerState, [])
  }));
  dart.setLibraryUri(pdfviewer.SfPdfViewer, I[11]);
  dart.setFieldSignature(pdfviewer.SfPdfViewer, () => ({
    __proto__: dart.getFields(pdfviewer.SfPdfViewer.__proto__),
    [_provider]: dart.finalFieldType(pdf_provider.PdfProvider),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    initialZoomLevel: dart.finalFieldType(core.double),
    initialScrollOffset: dart.finalFieldType(ui.Offset),
    enableDocumentLinkAnnotation: dart.finalFieldType(core.bool),
    pageSpacing: dart.finalFieldType(core.double),
    controller: dart.finalFieldType(dart.nullable(pdfviewer.PdfViewerController)),
    canShowScrollHead: dart.finalFieldType(core.bool),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    enableTextSelection: dart.finalFieldType(core.bool),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    onDocumentLoaded: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfDocumentLoadedDetails]))),
    onDocumentLoadFailed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfDocumentLoadFailedDetails]))),
    onZoomLevelChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfZoomDetails]))),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    onPageChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfPageChangedDetails])))
  }));
  var __SfPdfViewerState__plugin = dart.privateName(pdfviewer, "_#SfPdfViewerState#_plugin");
  var __SfPdfViewerState__pdfViewerController = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pdfViewerController");
  var _getPdfFileCancellableOperation = dart.privateName(pdfviewer, "_getPdfFileCancellableOperation");
  var _pdfDocumentLoadCancellableOperation = dart.privateName(pdfviewer, "_pdfDocumentLoadCancellableOperation");
  var _getHeightCancellableOperation = dart.privateName(pdfviewer, "_getHeightCancellableOperation");
  var _getWidthCancellableOperation = dart.privateName(pdfviewer, "_getWidthCancellableOperation");
  var _originalHeight = dart.privateName(pdfviewer, "_originalHeight");
  var _originalWidth = dart.privateName(pdfviewer, "_originalWidth");
  var _maxPdfPageWidth = dart.privateName(pdfviewer, "_maxPdfPageWidth");
  var _minScale = dart.privateName(pdfviewer, "_minScale");
  var _maxScale = dart.privateName(pdfviewer, "_maxScale");
  var _isScaleEnabled = dart.privateName(pdfviewer, "_isScaleEnabled");
  var _isDocumentLoadInitiated = dart.privateName(pdfviewer, "_isDocumentLoadInitiated");
  var _deviceOrientation = dart.privateName(pdfviewer, "_deviceOrientation");
  var _viewportWidth = dart.privateName(pdfviewer, "_viewportWidth");
  var _offsetBeforeOrientationChange = dart.privateName(pdfviewer, "_offsetBeforeOrientationChange");
  var __SfPdfViewerState__viewportConstraints = dart.privateName(pdfviewer, "_#SfPdfViewerState#_viewportConstraints");
  var _previousPageNumber = dart.privateName(pdfviewer, "_previousPageNumber");
  var _document = dart.privateName(pdfviewer, "_document");
  var _hasError = dart.privateName(pdfviewer, "_hasError");
  var _panEnabled = dart.privateName(pdfviewer, "_panEnabled");
  var _isMobile = dart.privateName(pdfviewer, "_isMobile");
  var _isSearchStarted = dart.privateName(pdfviewer, "_isSearchStarted");
  var _isTextSelectionCleared = dart.privateName(pdfviewer, "_isTextSelectionCleared");
  var _pdfPages = dart.privateName(pdfviewer, "_pdfPages");
  var _bookmarkKey = dart.privateName(pdfviewer, "_bookmarkKey");
  var _pdfScrollableState = dart.privateName(pdfviewer, "_pdfScrollableState");
  var _pdfPagesKey = dart.privateName(pdfviewer, "_pdfPagesKey");
  var _textCollection = dart.privateName(pdfviewer, "_textCollection");
  var _pdfTextExtractor = dart.privateName(pdfviewer, "_pdfTextExtractor");
  var _maxScrollExtent = dart.privateName(pdfviewer, "_maxScrollExtent");
  var _columnKey = dart.privateName(pdfviewer, "_columnKey");
  var _pdfDimension = dart.privateName(pdfviewer, "_pdfDimension");
  var _isPageChanged = dart.privateName(pdfviewer, "_isPageChanged");
  var _isSearchInitiated = dart.privateName(pdfviewer, "_isSearchInitiated");
  var _isOverflowed = dart.privateName(pdfviewer, "_isOverflowed");
  var _startPage = dart.privateName(pdfviewer, "_startPage");
  var _endPage = dart.privateName(pdfviewer, "_endPage");
  var _bufferCount = dart.privateName(pdfviewer, "_bufferCount");
  var _renderedImages = dart.privateName(pdfviewer, "_renderedImages");
  var _pdfViewerThemeData$3 = dart.privateName(pdfviewer, "_pdfViewerThemeData");
  var _plugin = dart.privateName(pdfviewer, "_plugin");
  var _pdfViewerController = dart.privateName(pdfviewer, "_pdfViewerController");
  var _viewportConstraints = dart.privateName(pdfviewer, "_viewportConstraints");
  var _handleControllerValueChange = dart.privateName(pdfviewer, "_handleControllerValueChange");
  var _setInitialScrollOffset = dart.privateName(pdfviewer, "_setInitialScrollOffset");
  var _loadPdfDocument = dart.privateName(pdfviewer, "_loadPdfDocument");
  var _reset = dart.privateName(pdfviewer, "_reset");
  var _compareDocument = dart.privateName(pdfviewer, "_compareDocument");
  var _verticalOffset = dart.privateName(pdfviewer, "_verticalOffset");
  var _horizontalOffset = dart.privateName(pdfviewer, "_horizontalOffset");
  var _disposeCollection = dart.privateName(pdfviewer, "_disposeCollection");
  var _checkMount = dart.privateName(pdfviewer, "_checkMount");
  var _getPdfFile = dart.privateName(pdfviewer, "_getPdfFile");
  var _pageCount = dart.privateName(pdfviewer, "_pageCount");
  var _pageNumber = dart.privateName(pdfviewer, "_pageNumber");
  var _isPdfPagesLoaded = dart.privateName(pdfviewer, "_isPdfPagesLoaded");
  var _isDocumentLoaded = dart.privateName(pdfviewer, "_isDocumentLoaded");
  var _searchText = dart.privateName(pdfviewer, "_searchText");
  var _findDevice$ = dart.privateName(pdfviewer, "_findDevice");
  var _getViewportGlobalRect = dart.privateName(pdfviewer, "_getViewportGlobalRect");
  var _handlePointerSignal = dart.privateName(pdfviewer, "_handlePointerSignal");
  var _handlePointerDown = dart.privateName(pdfviewer, "_handlePointerDown");
  var _handlePointerMove = dart.privateName(pdfviewer, "_handlePointerMove");
  var _handlePointerUp = dart.privateName(pdfviewer, "_handlePointerUp");
  var _getImages = dart.privateName(pdfviewer, "_getImages");
  var _calculateSize = dart.privateName(pdfviewer, "_calculateSize");
  var _handleTextSelectionDragStarted = dart.privateName(pdfviewer, "_handleTextSelectionDragStarted");
  var _handleTextSelectionDragEnded = dart.privateName(pdfviewer, "_handleTextSelectionDragEnded");
  var _handleDocumentLinkNavigationInvoked = dart.privateName(pdfviewer, "_handleDocumentLinkNavigationInvoked");
  var _pdfTextSearchResult = dart.privateName(pdfviewer, "_pdfTextSearchResult");
  var _updateOffsetOnOrientationChange = dart.privateName(pdfviewer, "_updateOffsetOnOrientationChange");
  var _clearSelection$ = dart.privateName(pdfviewer, "_clearSelection");
  var _handlePdfOffsetChanged$ = dart.privateName(pdfviewer, "_handlePdfOffsetChanged");
  var _handleDoubleTap$ = dart.privateName(pdfviewer, "_handleDoubleTap");
  var _getPageViewportRect = dart.privateName(pdfviewer, "_getPageViewportRect");
  var _pageChanged = dart.privateName(pdfviewer, "_pageChanged");
  var _currentOccurrenceIndex = dart.privateName(pdfviewer, "_currentOccurrenceIndex");
  var _getInstanceInPage = dart.privateName(pdfviewer, "_getInstanceInPage");
  var _updateSearchInstance = dart.privateName(pdfviewer, "_updateSearchInstance");
  var _updateCurrentPageNumber = dart.privateName(pdfviewer, "_updateCurrentPageNumber");
  var _jumpToPage = dart.privateName(pdfviewer, "_jumpToPage");
  var _jumpToBookmark = dart.privateName(pdfviewer, "_jumpToBookmark");
  var _pdfBookmark = dart.privateName(pdfviewer, "_pdfBookmark");
  var _zoomLevel = dart.privateName(pdfviewer, "_zoomLevel");
  var _clearTextSelection = dart.privateName(pdfviewer, "_clearTextSelection");
  var _pageNavigator = dart.privateName(pdfviewer, "_pageNavigator");
  var _name$1 = dart.privateName(pdfviewer_helper, "_name");
  var _handleTextSearch = dart.privateName(pdfviewer, "_handleTextSearch");
  var _textSearchOption = dart.privateName(pdfviewer, "_textSearchOption");
  var _totalSearchTextCount = dart.privateName(pdfviewer, "_totalSearchTextCount");
  var _updateResult = dart.privateName(pdfviewer, "_updateResult");
  var _jumpToSearchInstance = dart.privateName(pdfviewer, "_jumpToSearchInstance");
  var _jumpToNextInstance = dart.privateName(pdfviewer, "_jumpToNextInstance");
  var _jumpToPreviousInstance = dart.privateName(pdfviewer, "_jumpToPreviousInstance");
  var _totalInstanceCount = dart.privateName(pdfviewer, "_totalInstanceCount");
  var _scrollPositionX = dart.privateName(pdfviewer, "_scrollPositionX");
  var _scrollPositionY = dart.privateName(pdfviewer, "_scrollPositionY");
  const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends framework.State$(pdfviewer.SfPdfViewer) {};
  (State_WidgetsBindingObserver$36.new = function() {
    State_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  pdfviewer.SfPdfViewerState = class SfPdfViewerState extends State_WidgetsBindingObserver$36 {
    get [_plugin]() {
      let t36;
      t36 = this[__SfPdfViewerState__plugin];
      return t36 == null ? dart.throw(new _internal.LateError.fieldNI("_plugin")) : t36;
    }
    set [_plugin](t36) {
      this[__SfPdfViewerState__plugin] = t36;
    }
    get [_pdfViewerController]() {
      let t37;
      t37 = this[__SfPdfViewerState__pdfViewerController];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_pdfViewerController")) : t37;
    }
    set [_pdfViewerController](t37) {
      this[__SfPdfViewerState__pdfViewerController] = t37;
    }
    get [_viewportConstraints]() {
      let t38;
      t38 = this[__SfPdfViewerState__viewportConstraints];
      return t38 == null ? dart.throw(new _internal.LateError.fieldNI("_viewportConstraints")) : t38;
    }
    set [_viewportConstraints](t38) {
      this[__SfPdfViewerState__viewportConstraints] = t38;
    }
    get isBookmarkViewOpen() {
      let t39, t39$;
      t39$ = (t39 = this[_bookmarkKey].currentState, t39 == null ? null : t39.showBookmark);
      return t39$ == null ? false : t39$;
    }
    initState() {
      let t39, t39$;
      super.initState();
      this[_plugin] = new pdfviewer_plugin.PdfViewerPlugin.new();
      this[_pdfViewerController] = (t39 = this.widget.controller, t39 == null ? new pdfviewer.PdfViewerController.new() : t39);
      this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
      this[_setInitialScrollOffset]();
      this[_offsetBeforeOrientationChange] = ui.Offset.zero;
      this[_hasError] = false;
      this[_panEnabled] = true;
      this[_isTextSelectionCleared] = false;
      this[_loadPdfDocument](false);
      this[_previousPageNumber] = 1;
      this[_maxPdfPageWidth] = 0.0;
      t39$ = binding.WidgetsBinding.instance;
      t39$ == null ? null : t39$.addObserver(this);
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_pdfViewerThemeData$3] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
    }
    didUpdateWidget(oldWidget) {
      pdfviewer.SfPdfViewer.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (oldWidget.controller == null) {
        if (this.widget.controller != null) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController][_reset]();
          this[_pdfViewerController] = dart.nullCheck(this.widget.controller);
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        }
      } else {
        if (this.widget.controller == null) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController] = new pdfviewer.PdfViewerController.new();
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        } else if (!dart.equals(this.widget.controller, oldWidget.controller)) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController] = dart.nullCheck(this.widget.controller);
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        }
      }
      this[_compareDocument](oldWidget[_provider].getPdfBytes(this.context), this.widget[_provider].getPdfBytes(this.context));
    }
    [_setInitialScrollOffset]() {
      let t39;
      if (page_storage.PageStorageKey.is(this.widget.key) && page_storage.PageStorage.of(this.context) != null) {
        let offset = dart.nullCheck(page_storage.PageStorage.of(this.context)).readState(this.context);
        this[_pdfViewerController][_verticalOffset] = core.double.as(dart.dload(offset, 'dy'));
        this[_pdfViewerController][_horizontalOffset] = core.double.as(dart.dload(offset, 'dx'));
        let zoomLevel = (t39 = page_storage.PageStorage.of(this.context), t39 == null ? null : t39.readState(this.context, {identifier: "zoomLevel_" + dart.toString(this.widget.key)}));
        this[_pdfViewerController].zoomLevel = core.double.as(zoomLevel);
      } else {
        this[_pdfViewerController][_verticalOffset] = this.widget.initialScrollOffset.dy;
        this[_pdfViewerController][_horizontalOffset] = this.widget.initialScrollOffset.dx;
      }
      this[_isDocumentLoadInitiated] = false;
    }
    [_compareDocument](oldBytesData, newBytesData) {
      return async.async(dart.void, (function* _compareDocument() {
        let oldBytes = (yield oldBytesData);
        let newBytes = (yield newBytesData);
        if (!collections.listEquals(core.int, oldBytes, newBytes)) {
          this[_pdfViewerController].clearSelection();
          yield this[_loadPdfDocument](true);
        }
      }).bind(this));
    }
    dispose() {
      let t39, t39$, t39$0, t39$1, t39$2, t39$3, t41, t40, t39$4, t39$5;
      t39 = this[_getPdfFileCancellableOperation];
      t39 == null ? null : t39.cancel();
      t39$ = this[_pdfDocumentLoadCancellableOperation];
      t39$ == null ? null : t39$.cancel();
      t39$0 = this[_getHeightCancellableOperation];
      t39$0 == null ? null : t39$0.cancel();
      t39$1 = this[_getWidthCancellableOperation];
      t39$1 == null ? null : t39$1.cancel();
      this[_pdfViewerThemeData$3] = null;
      t39$2 = binding$.imageCache;
      t39$2 == null ? null : t39$2.clear();
      this[_renderedImages][$clear]();
      this[_plugin].closeDocument();
      this[_disposeCollection](this[_originalHeight]);
      this[_disposeCollection](this[_originalWidth]);
      this[_pdfPages][$clear]();
      this[_pdfPagesKey][$clear]();
      t39$3 = this[_document];
      t39$3 == null ? null : t39$3.dispose();
      this[_document] = null;
      t39$4 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t39$4 == null ? null : (t40 = t39$4.currentState, t40 == null ? null : (t41 = t40.canvasRenderBox, t41 == null ? null : t41.dispose()));
      if (this.widget.onTextSelectionChanged != null) {
        dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
      this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
      t39$5 = binding.WidgetsBinding.instance;
      t39$5 == null ? null : t39$5.removeObserver(this);
      super.dispose();
    }
    [_disposeCollection](list) {
      if (list != null) {
        list = null;
      }
    }
    [_reset]() {
      let t41, t40, t39, t39$, t39$0, t39$1;
      t39 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t39 == null ? null : (t40 = t39.currentState, t40 == null ? null : (t41 = t40.canvasRenderBox, t41 == null ? null : t41.disposeMouseSelection()));
      this[_isTextSelectionCleared] = false;
      t39$ = this[_pdfScrollableState].currentState;
      t39$ == null ? null : t39$.reset();
      this[_offsetBeforeOrientationChange] = ui.Offset.zero;
      this[_previousPageNumber] = 1;
      this[_pdfViewerController][_reset]();
      this[_pdfPages][$clear]();
      this[_startPage] = 0;
      this[_endPage] = 0;
      this[_bufferCount] = 0;
      this[_isSearchInitiated] = false;
      this[_renderedImages][$clear]();
      this[_plugin].closeDocument();
      t39$0 = this[_document];
      t39$0 == null ? null : t39$0.dispose();
      this[_document] = null;
      t39$1 = binding$.imageCache;
      t39$1 == null ? null : t39$1.clear();
      this[_hasError] = false;
      this[_isDocumentLoadInitiated] = false;
      this[_pdfPagesKey][$clear]();
      this[_maxPdfPageWidth] = 0.0;
      this[_isScaleEnabled] = !pdfviewer_helper.kIsDesktop;
      this[_maxScrollExtent] = 0.0;
      this[_pdfDimension] = ui.Size.zero;
      this[_isPageChanged] = false;
    }
    [_loadPdfDocument](isPdfChanged) {
      return async.async(dart.void, (function* _loadPdfDocument() {
        let t39, t39$, t39$0, t39$1;
        try {
          this[_getPdfFileCancellableOperation] = T.CancelableOperationOfUint8List().fromFuture(this.widget[_provider].getPdfBytes(this.context));
          let pdfBytes = dart.nullCheck(yield (t39 = this[_getPdfFileCancellableOperation], t39 == null ? null : t39.value));
          if (isPdfChanged) {
            this[_reset]();
            this[_plugin] = new pdfviewer_plugin.PdfViewerPlugin.new();
            this[_checkMount]();
          }
          this[_pdfDocumentLoadCancellableOperation] = T.CancelableOperationOfPdfDocumentN().fromFuture(this[_getPdfFile](pdfBytes));
          this[_document] = (yield (t39$ = this[_pdfDocumentLoadCancellableOperation], t39$ == null ? null : t39$.value));
          if (this[_document] != null) {
            this[_pdfTextExtractor] = new pdf.PdfTextExtractor.new(dart.nullCheck(this[_document]));
          }
          let pageCount = (yield this[_plugin].initializePdfRenderer(pdfBytes));
          this[_pdfViewerController][_pageCount] = pageCount;
          if (pageCount > 0) {
            this[_pdfViewerController][_pageNumber] = 1;
          }
          this[_pdfViewerController].zoomLevel = this.widget.initialZoomLevel;
          this[_setInitialScrollOffset]();
          if (this[_document] != null && this.widget.onDocumentLoaded != null) {
            this[_isDocumentLoadInitiated] = false;
            dart.nullCheck(this.widget.onDocumentLoaded)(new pdfviewer_callback_details.PdfDocumentLoadedDetails.new(dart.nullCheck(this[_document])));
          }
          this[_getHeightCancellableOperation] = T.CancelableOperationOfListN().fromFuture(this[_plugin].getPagesHeight());
          this[_originalHeight] = (yield (t39$0 = this[_getHeightCancellableOperation], t39$0 == null ? null : t39$0.value));
          this[_getWidthCancellableOperation] = T.CancelableOperationOfListN().fromFuture(this[_plugin].getPagesWidth());
          this[_originalWidth] = (yield (t39$1 = this[_getWidthCancellableOperation], t39$1 == null ? null : t39$1.value));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            this[_pdfViewerController][_reset]();
            this[_hasError] = true;
            let errorMessage = e[$toString]();
            if (errorMessage[$contains]("Invalid cross reference table") || errorMessage[$contains]("FormatException: Invalid radix-10 number") || errorMessage[$contains]("RangeError (index): Index out of range") || errorMessage[$contains]("RangeError (end): Invalid value: Not in inclusive range")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Format Error", "This document cannot be opened because it is corrupted or not a PDF."));
              }
            } else if (errorMessage[$contains]("Cannot open an encrypted document.")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Encrypted PDF", "This document cannot be opened because it is encrypted."));
              }
            } else if (errorMessage[$contains]("Unable to load asset") || errorMessage[$contains]("FileSystemException: Cannot open file")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("File Not Found", "The document cannot be opened because the provided path or link is invalid."));
              }
            } else {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Error", "There was an error opening this document."));
              }
            }
          } else
            throw e$;
        } finally {
          this[_checkMount]();
        }
      }).bind(this));
    }
    [_getPdfFile](value) {
      return async.async(T.PdfDocumentN(), function* _getPdfFile() {
        if (value != null) {
          return new pdf.PdfDocument.new({inputBytes: value});
        }
        return null;
      });
    }
    [_isDocumentLoaded]() {
      if (this[_pdfPages][$isNotEmpty] && !this[_pdfDimension].isEmpty && !this[_isDocumentLoadInitiated] && this[_pdfScrollableState].currentState != null) {
        this[_isPdfPagesLoaded]();
        this[_isDocumentLoadInitiated] = true;
      }
    }
    [_isPdfPagesLoaded]() {
      if (!this[_isDocumentLoadInitiated]) {
        if (this.widget.initialScrollOffset._equals(ui.Offset.zero) || this[_pdfViewerController][_verticalOffset] !== 0.0 || this[_pdfViewerController][_horizontalOffset] !== 0.0) {
          this[_pdfViewerController].jumpTo({xOffset: this[_pdfViewerController][_horizontalOffset], yOffset: this[_pdfViewerController][_verticalOffset]});
        }
        this[_pdfViewerController].notifyPropertyChangedListeners({property: "pageNavigate"});
        this[_pdfViewerController].notifyPropertyChangedListeners({property: "jumpToBookmark"});
        if (this[_pdfViewerController][_searchText][$isNotEmpty]) {
          this[_isSearchInitiated] = true;
          this[_pdfViewerController].notifyPropertyChangedListeners({property: "searchText"});
        }
      }
    }
    [_findDevice$](context) {
      let size = media_query.MediaQuery.of(context).size;
      let diagonal = math.sqrt(size.width * size.width + size.height * size.height);
      this[_isMobile] = diagonal < 1100;
    }
    [_getViewportGlobalRect]() {
      let viewportGlobalRect = null;
      if (pdfviewer_helper.kIsDesktop && !this[_isMobile] && this[_pdfScrollableState].currentContext != null) {
        let viewportRenderBox = box.RenderBox.as(dart.nullCheck(dart.nullCheck(this[_pdfScrollableState].currentContext).findRenderObject()));
        let position = viewportRenderBox.localToGlobal(ui.Offset.zero);
        let containerSize = viewportRenderBox.size;
        viewportGlobalRect = new ui.Rect.fromLTWH(position.dx, position.dy, containerSize.width, containerSize.height);
      }
      return viewportGlobalRect;
    }
    build(context) {
      let t40, t41, t40$, t40$0;
      let emptyContainer = new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[427] || CT.C427});
      let emptyLinearProgressView = new basic.Stack.new({children: T.JSArrayOfWidget().of([emptyContainer, new progress_indicator.LinearProgressIndicator.new({valueColor: new (T.AlwaysStoppedAnimationOfColor()).new((t40 = dart.nullCheck(this[_pdfViewerThemeData$3]).progressBarColor, t40 == null ? theme$.Theme.of(context).primaryColor : t40)), backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$3]).progressBarColor == null ? theme$.Theme.of(context).primaryColor.withOpacity(0.2) : dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$3]).progressBarColor).withOpacity(0.2), $creationLocationd_0dea112b090073317d4: C[430] || CT.C430})]), $creationLocationd_0dea112b090073317d4: C[434] || CT.C434});
      this[_isDocumentLoaded]();
      this[_findDevice$](context);
      let isPdfLoaded = this[_pdfViewerController].pageCount > 0 && this[_originalWidth] != null && this[_originalHeight] != null;
      this[_pdfDimension] = (t40$0 = (t40$ = this[_columnKey].currentContext, t40$ == null ? null : (t41 = t40$.findRenderObject(), t41 == null ? null : t41.paintBounds.size)), t40$0 == null ? ui.Size.zero : t40$0);
      return isPdfLoaded ? new basic.Listener.new({onPointerSignal: dart.bind(this, _handlePointerSignal), onPointerDown: dart.bind(this, _handlePointerDown), onPointerMove: dart.bind(this, _handlePointerMove), onPointerUp: dart.bind(this, _handlePointerUp), child: new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor, child: new (T.FutureBuilderOfMapNOfint$List()).new({future: this[_getImages](), builder: dart.fn((context, snapshot) => {
              let t40;
              if (snapshot.hasData) {
                let _pdfImages = snapshot.data;
                this[_renderedImages][$clear]();
                this[_viewportConstraints] = box.BoxConstraints.as(dart.nullCheck(context.findRenderObject()).constraints);
                let totalHeight = 0.0;
                let isKeyPadRaised = (t40 = binding.WidgetsBinding.instance, t40 == null ? null : t40.window.viewInsets.bottom) !== 0.0;
                let viewportDimension = this[_viewportConstraints].biggest;
                if (isKeyPadRaised) {
                  let keyPadHeight = new edge_insets.EdgeInsets.fromWindowPadding(dart.nullCheck(binding.WidgetsBinding.instance).window.viewInsets, dart.nullCheck(binding.WidgetsBinding.instance).window.devicePixelRatio).bottom;
                  viewportDimension = new ui.Size.new(viewportDimension.width, viewportDimension.height + keyPadHeight);
                }
                if (!this[_pdfDimension].isEmpty) {
                  this[_maxScrollExtent] = this[_pdfDimension].height - viewportDimension.height / this[_pdfViewerController].zoomLevel;
                }
                let child = new basic.Column.new({key: this[_columnKey], children: T.ListOfWidget().generate(this[_pdfViewerController].pageCount, dart.fn(index => {
                    let t41, t40;
                    if (index === 0) {
                      totalHeight = 0.0;
                    }
                    if (dart.nullCheck(this[_originalWidth])[$length] !== this[_pdfViewerController].pageCount) {
                      return emptyContainer;
                    }
                    let pageIndex = index + 1;
                    let calculatedSize = this[_calculateSize](new box.BoxConstraints.new({maxWidth: this[_viewportConstraints].maxWidth, maxHeight: 1 / 0}), core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index)), core.double.as(dart.nullCheck(this[_originalHeight])[$_get](index)), this[_viewportConstraints].maxWidth);
                    if (!this[_pdfPagesKey][$containsKey](pageIndex)) {
                      this[_pdfPagesKey][$_set](pageIndex, T.GlobalKeyOfPdfPageViewState().new());
                    }
                    this[_isOverflowed] = core.bool.as(dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '>', [this[_viewportConstraints].maxWidth]));
                    if (pdfviewer_helper.kIsDesktop && !this[_isMobile]) {
                      if (dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '>', [this[_maxPdfPageWidth]]) != null) {
                        this[_maxPdfPageWidth] = core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index));
                      }
                    }
                    let viewportGlobalRect = null;
                    if (this[_isTextSelectionCleared]) {
                      viewportGlobalRect = this[_getViewportGlobalRect]();
                    }
                    let page = new pdf_page_view.PdfPageView.new(dart.nullCheck(this[_pdfPagesKey][$_get](pageIndex)), T.Uint8ListN().as(dart.dsend(_pdfImages, '_get', [pageIndex])), viewportGlobalRect, viewportDimension, this.widget.interactionMode, core.double.as(pdfviewer_helper.kIsDesktop && !this[_isMobile] && !this[_isOverflowed] ? dart.nullCheck(this[_originalWidth])[$_get](index) : calculatedSize.width), core.double.as(pdfviewer_helper.kIsDesktop && !this[_isMobile] && !this[_isOverflowed] ? dart.nullCheck(this[_originalHeight])[$_get](index) : calculatedSize.height), this.widget.pageSpacing, this[_document], this[_pdfPages], index, this[_pdfViewerController], this.widget.enableDocumentLinkAnnotation, this.widget.enableTextSelection, this.widget.onTextSelectionChanged, dart.bind(this, _handleTextSelectionDragStarted), dart.bind(this, _handleTextSelectionDragEnded), dart.bind(this, _handleDocumentLinkNavigationInvoked), this.widget.searchTextHighlightColor, this[_textCollection], this[_isMobile], this[_pdfViewerController][_pdfTextSearchResult], this[_pdfScrollableState], {$creationLocationd_0dea112b090073317d4: C[437] || CT.C437});
                    if (pdfviewer_helper.kIsDesktop && !this[_isMobile] && !this[_isOverflowed]) {
                      this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, new ui.Size.new(core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index)), core.double.as(dart.nullCheck(this[_originalHeight])[$_get](index)))));
                      totalHeight = totalHeight + core.num.as(dart.dsend(dart.nullCheck(this[_originalHeight])[$_get](index), '+', [this.widget.pageSpacing]));
                      this[_updateOffsetOnOrientationChange](this[_offsetBeforeOrientationChange], pageIndex, totalHeight);
                    } else {
                      this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, calculatedSize));
                      totalHeight = totalHeight + (calculatedSize.height + this.widget.pageSpacing);
                      this[_updateOffsetOnOrientationChange](this[_offsetBeforeOrientationChange], pageIndex, totalHeight);
                    }
                    if ((t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : t41.canvasRenderBox)) != null && !this[_isTextSelectionCleared]) {
                      this[_isTextSelectionCleared] = true;
                      async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
                        let t42, t41, t40, t41$, t40$;
                        this[_clearSelection$]();
                        t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                        t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : (t42 = t41.canvasRenderBox, t42 == null ? null : t42.disposeMouseSelection()));
                        t40$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                        t40$ == null ? null : (t41$ = t40$.currentState, t41$ == null ? null : t41$.focusNode.requestFocus());
                      }).bind(this)), T.VoidToFutureOfNull()));
                    }
                    if (page.imageStream != null) {
                      this[_renderedImages][$add](pageIndex);
                    }
                    return page;
                  }, T.intToWidget())), $creationLocationd_0dea112b090073317d4: C[462] || CT.C462});
                let pdfScrollable = new pdf_scrollable.PdfScrollable.new(this.widget.canShowPaginationDialog, this.widget.canShowScrollStatus, this.widget.canShowScrollHead, this[_pdfViewerController], this[_isMobile], this[_pdfDimension], viewportDimension, dart.bind(this, _handlePdfOffsetChanged$), this[_panEnabled], this[_maxScale], this[_minScale], this.widget.enableDoubleTapZooming, this.widget.interactionMode, this[_maxPdfPageWidth], this[_isScaleEnabled], this[_maxScrollExtent], this[_pdfPages], child, {key: this[_pdfScrollableState], onDoubleTap: dart.bind(this, _handleDoubleTap$), $creationLocationd_0dea112b090073317d4: C[466] || CT.C466});
                return new basic.Stack.new({children: T.JSArrayOfWidget().of([pdfScrollable, new bookmark_view.BookmarkView.new(this[_bookmarkKey], this[_document], this[_pdfViewerController], {$creationLocationd_0dea112b090073317d4: C[488] || CT.C488})]), $creationLocationd_0dea112b090073317d4: C[493] || CT.C493});
              } else if (snapshot.hasError) {
                return emptyContainer;
              } else {
                return emptyLinearProgressView;
              }
            }, T.BuildContextAndAsyncSnapshotToWidget()), $creationLocationd_0dea112b090073317d4: C[496] || CT.C496}), $creationLocationd_0dea112b090073317d4: C[500] || CT.C500}), $creationLocationd_0dea112b090073317d4: C[504] || CT.C504}) : this[_hasError] ? emptyContainer : emptyLinearProgressView;
    }
    [_handlePointerSignal](event) {
      let t40;
      if (!this.isBookmarkViewOpen) {
        t40 = this[_pdfScrollableState].currentState;
        t40 == null ? null : t40.receivedPointerSignal(event);
      }
    }
    [_handlePointerDown](event) {
      let t41, t40, t41$, t40$;
      if (this.widget.interactionMode === enums.PdfInteractionMode.pan) {
        t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : t41.cursor = mouse_cursor.SystemMouseCursors.grabbing);
      }
      t40$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t40$ == null ? null : (t41$ = t40$.currentState, t41$ == null ? null : t41$.focusNode.requestFocus());
    }
    [_handlePointerMove](event) {
      let t41, t40, t42, t41$, t40$, t42$, t41$0, t40$0;
      if (this.widget.interactionMode === enums.PdfInteractionMode.pan) {
        t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : t41.cursor = mouse_cursor.SystemMouseCursors.grabbing);
      }
      dart.nullCheck(this[_pdfScrollableState].currentState).receivedPointerMoveSignal(event);
      if (event.kind === ui.PointerDeviceKind.touch) {
        let pdfPageRect = this[_getPageViewportRect]();
        if (pdfPageRect.contains(event.localPosition)) {
          this.setState(dart.fn(() => {
            this[_isScaleEnabled] = true;
          }, T.VoidTovoid()));
          let details = (t40$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t40$ == null ? null : (t41$ = t40$.currentState, t41$ == null ? null : (t42 = t41$.canvasRenderBox, t42 == null ? null : t42.getSelectionDetails())));
          if (details != null && !details.selectionEnabled) {
            dart.nullCheck(this[_pdfScrollableState].currentState).jumpTo({xOffset: dart.nullCheck(this[_pdfScrollableState].currentState).currentOffset.dx - event.localDelta.dx * 2});
          }
        }
        this.setState(dart.fn(() => {
          this[_panEnabled] = true;
        }, T.VoidTovoid()));
      } else if (event.kind === ui.PointerDeviceKind.mouse) {
        this.setState(dart.fn(() => {
          this[_panEnabled] = this.widget.interactionMode === enums.PdfInteractionMode.pan;
        }, T.VoidTovoid()));
        return;
      }
      t40$0 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t40$0 == null ? null : (t41$0 = t40$0.currentState, t41$0 == null ? null : (t42$ = t41$0.canvasRenderBox, t42$ == null ? null : t42$.scrollStarted()));
    }
    [_handlePointerUp](details) {
      let t41, t40, t42, t41$, t40$, t42$, t41$0, t40$0;
      if (this.widget.interactionMode === enums.PdfInteractionMode.pan) {
        t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : t41.cursor = mouse_cursor.SystemMouseCursors.grab);
      }
      if (!this[_getPageViewportRect]().contains(details.localPosition) && details.kind === ui.PointerDeviceKind.mouse) {
        t40$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t40$ == null ? null : (t41$ = t40$.currentState, t41$ == null ? null : (t42 = t41$.canvasRenderBox, t42 == null ? null : t42.clearSelection()));
      }
      t40$0 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t40$0 == null ? null : (t41$0 = t40$0.currentState, t41$0 == null ? null : (t42$ = t41$0.canvasRenderBox, t42$ == null ? null : t42$.scrollEnded()));
      if (pdfviewer_helper.kIsDesktop) {
        this.setState(dart.fn(() => {
          this[_isScaleEnabled] = false;
        }, T.VoidTovoid()));
      }
    }
    [_handleDoubleTap$]() {
      let t42, t41, t40;
      if (!pdfviewer_helper.kIsDesktop || this[_isMobile]) {
        t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : (t42 = t41.canvasRenderBox, t42 == null ? null : t42.updateContextMenuPosition()));
      }
    }
    [_getPageViewportRect]() {
      return new ui.Rect.fromLTWH((this[_viewportConstraints].biggest.width - dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.width * this[_pdfViewerController].zoomLevel) / 2, 0.0, dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.width * this[_pdfViewerController].zoomLevel, this[_viewportConstraints].biggest.height);
    }
    openBookmarkView() {
      let t40;
      t40 = this[_bookmarkKey].currentState;
      t40 == null ? null : t40.open();
    }
    getSelectedTextLines() {
      let t42, t41, t40, t40$;
      let selectedTextLines = (t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : (t42 = t41.canvasRenderBox, t42 == null ? null : t42.getSelectedTextLines())));
      t40$ = selectedTextLines;
      return t40$ == null ? T.JSArrayOfPdfTextLine().of([]) : t40$;
    }
    [_getImages]() {
      let startPage = this[_pdfViewerController].pageNumber;
      let endPage = this[_pdfViewerController].pageCount === 1 ? 1 : 2;
      let renderedPages = null;
      let pageHeight = 0.0;
      if (this[_pdfPages][$isNotEmpty] && !this[_pdfDimension].isEmpty) {
        for (let start = this[_pdfViewerController].pageNumber; start <= this[_pdfViewerController].pageCount; start = start + 1) {
          if (start === this[_pdfViewerController].pageCount) {
            endPage = start;
            if (startPage === endPage && endPage !== 1) {
              startPage = startPage - 1;
            }
            break;
          }
          let height = pageHeight + dart.nullCheck(this[_pdfPages][$_get](start)).pageSize.height;
          if (height < this[_viewportConstraints].biggest.height) {
            pageHeight = pageHeight + height;
          } else {
            pageHeight = 0.0;
            if (pdfviewer_helper.kIsDesktop && !this[_isMobile]) {
              start = start + 1;
            }
            endPage = start !== this[_pdfViewerController].pageCount ? start + 1 : start;
            break;
          }
        }
      }
      startPage = startPage !== 1 ? startPage - 1 : 1;
      renderedPages = this[_plugin].getSpecificPages(startPage, endPage).then(T.MapNOfint$List(), dart.fn(value => {
        if (this[_pdfPages][$isNotEmpty] && !this[_pdfDimension].isEmpty) {
          for (let i = startPage; i <= endPage; i = i + 1) {
            if (!this[_renderedImages][$contains](i)) {
              this[_checkMount]();
              break;
            }
          }
        }
        return value;
      }, T.MapNOfint$ListToMapNOfint$List()));
      if (this[_startPage] !== startPage && this[_endPage] !== endPage || this[_bufferCount] > 0 && this[_bufferCount] <= 3) {
        renderedPages.whenComplete(dart.bind(this, _checkMount));
        this[_startPage] = startPage;
        this[_endPage] = endPage;
        this[_bufferCount] = this[_bufferCount] + 1;
      } else {
        this[_bufferCount] = 0;
      }
      return renderedPages;
    }
    [_checkMount]() {
      if (super.mounted) {
        this.setState(dart.fn(() => {
        }, T.VoidTovoid()));
      }
    }
    [_pageChanged]() {
      if (this[_pdfViewerController].pageNumber !== this[_previousPageNumber]) {
        if (this.widget.onPageChanged != null) {
          dart.nullCheck(this.widget.onPageChanged)(new pdfviewer_callback_details.PdfPageChangedDetails.new(this[_pdfViewerController].pageNumber, this[_previousPageNumber], this[_pdfViewerController].pageNumber === 1, this[_pdfViewerController].pageNumber === this[_pdfViewerController].pageCount));
        }
        this[_previousPageNumber] = this[_pdfViewerController].pageNumber;
        this[_isPageChanged] = true;
      }
    }
    [_updateSearchInstance](opts) {
      let isNext = opts && 'isNext' in opts ? opts.isNext : true;
      if (this[_textCollection] != null && this[_pdfViewerController][_pdfTextSearchResult].hasResult && this[_pdfViewerController].pageNumber !== dart.nullCheck(this[_textCollection])[$_get](this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex - 1).pageIndex + 1) {
        this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_getInstanceInPage](this[_pdfViewerController].pageNumber, {lookForFirst: isNext});
      }
    }
    [_updateOffsetOnOrientationChange](initialOffset, pageIndex, totalHeight) {
      let t40, t40$, t40$0;
      if (this[_viewportWidth] !== this[_viewportConstraints].maxWidth && this[_deviceOrientation] !== media_query.MediaQuery.of(this.context).orientation) {
        t40 = binding.WidgetsBinding.instance;
        t40 == null ? null : t40.addPostFrameCallback(dart.fn(timeStamp => {
          this[_checkMount]();
        }, T.DurationTovoid()));
        if (pageIndex === 1 && !this[_viewportConstraints].biggest.isEmpty && this[_pdfScrollableState].currentState != null) {
          this[_offsetBeforeOrientationChange] = new ui.Offset.new(dart.nullCheck(this[_pdfScrollableState].currentState).currentOffset.dx / this[_pdfDimension].width, dart.nullCheck(this[_pdfScrollableState].currentState).currentOffset.dy / this[_pdfDimension].height);
          if (this[_pdfViewerController].pageCount === 1) {
            if (this[_viewportWidth] !== 0) {
              let targetOffset = initialOffset.dy * totalHeight;
              t40$ = binding.WidgetsBinding.instance;
              t40$ == null ? null : t40$.addPostFrameCallback(dart.fn(timeStamp => {
                let t43, t42, t41, t41$;
                t41 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                t41 == null ? null : (t42 = t41.currentState, t42 == null ? null : (t43 = t42.canvasRenderBox, t43 == null ? null : t43.updateContextMenuPosition()));
                t41$ = this[_pdfScrollableState].currentState;
                t41$ == null ? null : t41$.forcePixels(new ui.Offset.new(initialOffset.dx * this[_viewportConstraints].biggest.width, targetOffset));
              }, T.DurationTovoid()));
            }
            this[_viewportWidth] = this[_viewportConstraints].maxWidth;
            this[_deviceOrientation] = media_query.MediaQuery.of(this.context).orientation;
          }
        } else if (pageIndex === this[_pdfViewerController].pageCount) {
          if (this[_viewportWidth] !== 0) {
            let targetOffset = initialOffset.dy * totalHeight;
            t40$0 = binding.WidgetsBinding.instance;
            t40$0 == null ? null : t40$0.addPostFrameCallback(dart.fn(timeStamp => {
              let t43, t42, t41, t41$;
              t41 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
              t41 == null ? null : (t42 = t41.currentState, t42 == null ? null : (t43 = t42.canvasRenderBox, t43 == null ? null : t43.updateContextMenuPosition()));
              t41$ = this[_pdfScrollableState].currentState;
              t41$ == null ? null : t41$.forcePixels(new ui.Offset.new(initialOffset.dx * this[_viewportConstraints].biggest.width, targetOffset));
            }, T.DurationTovoid()));
          }
          this[_viewportWidth] = this[_viewportConstraints].maxWidth;
          this[_deviceOrientation] = media_query.MediaQuery.of(this.context).orientation;
        }
      }
    }
    [_calculateSize](constraints, originalWidth, originalHeight, newWidth) {
      constraints = new box.BoxConstraints.tightFor({width: newWidth, height: null}).enforce(constraints);
      return constraints.constrainSizeAndAttemptToPreserveAspectRatio(new ui.Size.new(originalWidth, originalHeight));
    }
    [_updateCurrentPageNumber](opts) {
      let t40, t40$;
      let currentOffset = opts && 'currentOffset' in opts ? opts.currentOffset : 0;
      if (currentOffset > 0) {
        this[_pdfViewerController][_pageNumber] = (t40$ = (t40 = this[_pdfScrollableState].currentState, t40 == null ? null : t40.getPageNumber(currentOffset)), t40$ == null ? 0 : t40$);
      } else {
        this[_pdfViewerController].pageCount > 0 ? this[_pdfViewerController][_pageNumber] = 1 : this[_pdfViewerController][_pageNumber] = 0;
      }
      this[_pageChanged]();
      this[_checkMount]();
    }
    [_handleTextSelectionDragStarted]() {
      this.setState(dart.fn(() => {
        this[_panEnabled] = false;
      }, T.VoidTovoid()));
    }
    [_handleTextSelectionDragEnded]() {
      this.setState(dart.fn(() => {
        this[_panEnabled] = true;
      }, T.VoidTovoid()));
    }
    [_jumpToPage](pageNumber) {
      let t40;
      t40 = this[_pdfScrollableState].currentState;
      t40 == null ? null : t40.jumpTo({yOffset: dart.nullCheck(this[_pdfPages][$_get](pageNumber)).pageOffset});
    }
    [_jumpToBookmark](bookmark) {
      let t40;
      if (bookmark != null && this[_document] != null) {
        this[_clearSelection$]();
        let heightPercentage = null;
        let widthPercentage = null;
        let bookmarkOffset = null;
        let pdfPage = null;
        if (bookmark.namedDestination != null) {
          pdfPage = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page;
        } else {
          pdfPage = dart.nullCheck(bookmark.destination).page;
        }
        let index = dart.nullCheck(this[_document]).pages.indexOf(pdfPage) + 1;
        let revealedOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageSize;
        let yOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset;
        if (bookmark.namedDestination != null) {
          heightPercentage = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page.size.height / revealedOffset.height;
          widthPercentage = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page.size.width / revealedOffset.width;
          bookmarkOffset = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).location;
        } else {
          heightPercentage = dart.nullCheck(bookmark.destination).page.size.height / revealedOffset.height;
          widthPercentage = dart.nullCheck(bookmark.destination).page.size.width / revealedOffset.width;
          bookmarkOffset = dart.nullCheck(bookmark.destination).location;
        }
        if (pdfviewer_helper.kIsDesktop && !this[_isMobile]) {
          heightPercentage = 1.0;
        }
        yOffset = yOffset + bookmarkOffset.dy / heightPercentage;
        let xOffset = bookmarkOffset.dx / widthPercentage;
        if (yOffset > this[_maxScrollExtent]) {
          yOffset = this[_maxScrollExtent];
        }
        t40 = this[_pdfScrollableState].currentState;
        t40 == null ? null : t40.jumpTo({xOffset: xOffset, yOffset: yOffset});
      }
    }
    [_handleDocumentLinkNavigationInvoked](offset) {
    }
    [_clearSelection$]() {
      let t42, t41, t40, t40$;
      t40$ = (t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : (t42 = t41.canvasRenderBox, t42 == null ? null : t42.clearSelection())));
      return t40$ == null ? false : t40$;
    }
    [_handleControllerValueChange](opts) {
      let t40, t40$, t40$0;
      let property = opts && 'property' in opts ? opts.property : null;
      if (property === "jumpToBookmark") {
        if (this[_pdfPages][$isNotEmpty]) {
          this[_jumpToBookmark](this[_pdfViewerController][_pdfBookmark]);
        }
      } else if (property === "zoomLevel") {
        if (this[_pdfViewerController].zoomLevel > this[_maxScale]) {
          this[_pdfViewerController].zoomLevel = this[_maxScale];
        } else if (this[_pdfViewerController].zoomLevel < this[_minScale]) {
          this[_pdfViewerController].zoomLevel = this[_minScale];
        }
        if (this[_pdfScrollableState].currentState != null) {
          this.setState(dart.fn(() => {
            this[_isScaleEnabled] = true;
          }, T.VoidTovoid()));
          this[_pdfViewerController][_zoomLevel] = dart.nullCheck(this[_pdfScrollableState].currentState).scaleTo(this[_pdfViewerController].zoomLevel);
          let previousScale = dart.nullCheck(this[_pdfScrollableState].currentState).previousZoomLevel;
          if (this.widget.onZoomLevelChanged != null && previousScale !== this[_pdfViewerController][_zoomLevel]) {
            let oldZoomLevel = previousScale;
            let newZoomLevel = this[_pdfViewerController][_zoomLevel];
            if (newZoomLevel !== oldZoomLevel) {
              dart.nullCheck(this.widget.onZoomLevelChanged)(new pdfviewer_callback_details.PdfZoomDetails.new(newZoomLevel, oldZoomLevel));
            }
          }
          t40 = page_storage.PageStorage.of(this.context);
          t40 == null ? null : t40.writeState(this.context, this[_pdfViewerController].zoomLevel, {identifier: "zoomLevel_" + dart.toString(this.widget.key)});
          if (pdfviewer_helper.kIsDesktop) {
            this.setState(dart.fn(() => {
              this[_isScaleEnabled] = false;
            }, T.VoidTovoid()));
          }
        }
      } else if (property === "clearTextSelection") {
        this[_pdfViewerController][_clearTextSelection] = this[_clearSelection$]();
      } else if (property === "jumpTo") {
        this[_clearSelection$]();
        if (!this[_pdfDimension].isEmpty) {
          t40$ = this[_pdfScrollableState].currentState;
          t40$ == null ? null : t40$.jumpTo({xOffset: this[_pdfViewerController][_horizontalOffset], yOffset: this[_pdfViewerController][_verticalOffset]});
        }
      } else if (property === "pageNavigate" && this[_pdfViewerController][_pageNavigator] != null) {
        this[_clearSelection$]();
        switch (dart.nullCheck(this[_pdfViewerController][_pageNavigator]).option) {
          case C[511] || CT.C511:
          {
            if (dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index) > 0 && dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index) <= this[_pdfViewerController].pageCount) {
              this[_jumpToPage](dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index));
            }
            break;
          }
          case C[512] || CT.C512:
          {
            this[_jumpToPage](1);
            break;
          }
          case C[513] || CT.C513:
          {
            if (this[_pdfViewerController].pageNumber !== this[_pdfViewerController].pageCount) {
              this[_jumpToPage](this[_pdfViewerController].pageCount);
            }
            break;
          }
          case C[514] || CT.C514:
          {
            if (this[_pdfViewerController].pageNumber > 1) {
              this[_jumpToPage](this[_pdfViewerController].pageNumber - 1);
            }
            break;
          }
          case C[515] || CT.C515:
          {
            if (this[_pdfViewerController].pageNumber !== this[_pdfViewerController].pageCount) {
              this[_jumpToPage](this[_pdfViewerController].pageNumber + 1);
            }
            break;
          }
        }
      } else if (property === "searchText") {
        this[_isSearchStarted] = true;
        this[_pdfViewerController][_pdfTextSearchResult].removeListener(dart.bind(this, _handleTextSearch));
        this[_textCollection] = (t40$0 = this[_pdfTextExtractor], t40$0 == null ? null : t40$0.findText(T.JSArrayOfString().of([this[_pdfViewerController][_searchText]]), {searchOption: this[_pdfViewerController][_textSearchOption]}));
        if (this[_textCollection] != null) {
          if (dart.nullCheck(this[_textCollection])[$isEmpty]) {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](false);
          } else {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_getInstanceInPage](this[_pdfViewerController].pageNumber);
            if (this[_pdfPages][$isNotEmpty] && !this[_isSearchInitiated]) {
              this[_jumpToSearchInstance]();
            }
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = dart.nullCheck(this[_textCollection])[$length];
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](true);
            this[_isSearchInitiated] = false;
          }
          this[_pdfViewerController][_pdfTextSearchResult].addListener(dart.bind(this, _handleTextSearch));
          this.setState(dart.fn(() => {
          }, T.VoidTovoid()));
        }
      }
    }
    [_getInstanceInPage](pageNumber, opts) {
      let t40, t40$, t40$0;
      let lookForFirst = opts && 'lookForFirst' in opts ? opts.lookForFirst : true;
      let instance = 0;
      if (lookForFirst) {
        instance = (t40 = this[_jumpToNextInstance](pageNumber), t40 == null ? this[_jumpToPreviousInstance](pageNumber) : t40);
      } else {
        instance = (t40$ = this[_jumpToPreviousInstance](pageNumber), t40$ == null ? this[_jumpToNextInstance](pageNumber) : t40$);
      }
      t40$0 = instance;
      return t40$0 == null ? 1 : t40$0;
    }
    [_jumpToNextInstance](pageNumber) {
      for (let i = 0; i < dart.nullCheck(this[_textCollection])[$length]; i = i + 1) {
        if (dart.nullCheck(this[_textCollection])[$_get](i).pageIndex + 1 >= pageNumber) {
          return i + 1;
        }
      }
      return null;
    }
    [_jumpToPreviousInstance](pageNumber) {
      for (let i = dart.nullCheck(this[_textCollection])[$length] - 1; i > 0; i = i - 1) {
        if (dart.nullCheck(this[_textCollection])[$_get](i).pageIndex + 1 <= pageNumber) {
          return i + 1;
        }
      }
      return null;
    }
    [_jumpToSearchInstance](opts) {
      let t40, t40$, t40$0;
      let isNext = opts && 'isNext' in opts ? opts.isNext : true;
      if (this[_isPageChanged]) {
        this[_updateSearchInstance]({isNext: isNext});
        this[_isPageChanged] = false;
      }
      let currentInstancePageIndex = dart.nullCheck(this[_textCollection])[$_get](this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex - 1).pageIndex + 1;
      let topOffset = dart.nullCheck(this[_textCollection])[$_get](this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex - 1).bounds.topLeft;
      let heightPercentage = pdfviewer_helper.kIsDesktop && !this[_isMobile] && !this[_isOverflowed] ? 1.0 : core.double.as(dart.dsend(dart.nullCheck(this[_originalHeight])[$_get](currentInstancePageIndex - 1), '/', [dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageSize.height]));
      let widthPercentage = pdfviewer_helper.kIsDesktop && !this[_isMobile] && !this[_isOverflowed] ? 1.0 : core.double.as(dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](currentInstancePageIndex - 1), '/', [dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageSize.width]));
      let searchOffsetX = topOffset.dx / widthPercentage;
      let searchOffsetY = dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageOffset + topOffset.dy / heightPercentage;
      let offset = (t40$ = (t40 = this[_pdfScrollableState].currentState, t40 == null ? null : t40.currentOffset), t40$ == null ? ui.Offset.zero : t40$);
      let viewport = new ui.Rect.fromLTWH(offset.dx, offset.dy, this[_viewportConstraints].biggest.width / this[_pdfViewerController].zoomLevel, this[_viewportConstraints].biggest.height / this[_pdfViewerController].zoomLevel);
      if (this[_pdfScrollableState].currentState != null && !viewport.contains(new ui.Offset.new(searchOffsetX, searchOffsetY))) {
        this[_pdfViewerController].jumpTo({xOffset: searchOffsetX, yOffset: searchOffsetY});
        t40$0 = binding.WidgetsBinding.instance;
        t40$0 == null ? null : t40$0.addPostFrameCallback(dart.fn(timeStamp => {
          if (this[_isPageChanged]) {
            this[_isPageChanged] = false;
          }
        }, T.DurationTovoid()));
      }
    }
    [_handleTextSearch](opts) {
      let property = opts && 'property' in opts ? opts.property : null;
      if (this[_pdfViewerController][_pdfTextSearchResult].hasResult) {
        if (property === "nextInstance") {
          this.setState(dart.fn(() => {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex < this[_pdfViewerController][_pdfTextSearchResult][_totalInstanceCount] ? this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex + 1 : 1;
            this[_jumpToSearchInstance]({isNext: true});
          }, T.VoidTovoid()));
        } else if (property === "previousInstance") {
          this.setState(dart.fn(() => {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex > 1 ? this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex - 1 : this[_pdfViewerController][_pdfTextSearchResult].totalInstanceCount;
            this[_jumpToSearchInstance]({isNext: false});
          }, T.VoidTovoid()));
        } else if (property === "clear") {
          this.setState(dart.fn(() => {
            let t41, t40;
            this[_isSearchStarted] = false;
            this[_textCollection] = null;
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](false);
            t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
            t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : t41.focusNode.requestFocus());
          }, T.VoidTovoid()));
          return;
        }
      }
    }
    [_handlePdfOffsetChanged$](offset) {
      let t41, t40;
      if (!this[_isSearchStarted]) {
        t40 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t40 == null ? null : (t41 = t40.currentState, t41 == null ? null : t41.focusNode.requestFocus());
      }
      this[_updateCurrentPageNumber]({currentOffset: offset.dy});
      this[_pdfViewerController][_scrollPositionX] = offset.dx[$abs]();
      this[_pdfViewerController][_scrollPositionY] = offset.dy[$abs]();
    }
  };
  (pdfviewer.SfPdfViewerState.new = function() {
    this[__SfPdfViewerState__plugin] = null;
    this[__SfPdfViewerState__pdfViewerController] = null;
    this[_getPdfFileCancellableOperation] = null;
    this[_pdfDocumentLoadCancellableOperation] = null;
    this[_getHeightCancellableOperation] = null;
    this[_getWidthCancellableOperation] = null;
    this[_originalHeight] = null;
    this[_originalWidth] = null;
    this[_maxPdfPageWidth] = 0.0;
    this[_minScale] = 1.0;
    this[_maxScale] = 3.0;
    this[_isScaleEnabled] = !pdfviewer_helper.kIsDesktop;
    this[_isDocumentLoadInitiated] = false;
    this[_deviceOrientation] = null;
    this[_viewportWidth] = 0.0;
    this[_offsetBeforeOrientationChange] = ui.Offset.zero;
    this[__SfPdfViewerState__viewportConstraints] = null;
    this[_previousPageNumber] = 0;
    this[_document] = null;
    this[_hasError] = false;
    this[_panEnabled] = true;
    this[_isMobile] = false;
    this[_isSearchStarted] = false;
    this[_isTextSelectionCleared] = false;
    this[_pdfPages] = new (T.IdentityMapOfint$PdfPageInfo()).new();
    this[_bookmarkKey] = T.GlobalKeyOfBookmarkViewControllerState().new();
    this[_pdfScrollableState] = T.GlobalKeyOfPdfScrollableState().new();
    this[_pdfPagesKey] = new (T.IdentityMapOfint$GlobalKeyOfPdfPageViewState()).new();
    this[_textCollection] = null;
    this[_pdfTextExtractor] = null;
    this[_maxScrollExtent] = 0.0;
    this[_columnKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_pdfDimension] = ui.Size.zero;
    this[_isPageChanged] = false;
    this[_isSearchInitiated] = false;
    this[_isOverflowed] = false;
    this[_startPage] = 0;
    this[_endPage] = 0;
    this[_bufferCount] = 0;
    this[_renderedImages] = T.JSArrayOfint().of([]);
    this[_pdfViewerThemeData$3] = null;
    pdfviewer.SfPdfViewerState.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.SfPdfViewerState.prototype;
  dart.addTypeTests(pdfviewer.SfPdfViewerState);
  dart.addTypeCaches(pdfviewer.SfPdfViewerState);
  dart.setMethodSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getMethods(pdfviewer.SfPdfViewerState.__proto__),
    [_setInitialScrollOffset]: dart.fnType(dart.void, []),
    [_compareDocument]: dart.fnType(async.Future$(dart.void), [async.Future$(typed_data.Uint8List), async.Future$(typed_data.Uint8List)]),
    [_disposeCollection]: dart.fnType(dart.void, [dart.nullable(core.List)]),
    [_reset]: dart.fnType(dart.void, []),
    [_loadPdfDocument]: dart.fnType(async.Future$(dart.void), [core.bool]),
    [_getPdfFile]: dart.fnType(async.Future$(dart.nullable(pdf.PdfDocument)), [dart.nullable(typed_data.Uint8List)]),
    [_isDocumentLoaded]: dart.fnType(dart.void, []),
    [_isPdfPagesLoaded]: dart.fnType(dart.void, []),
    [_findDevice$]: dart.fnType(dart.void, [framework.BuildContext]),
    [_getViewportGlobalRect]: dart.fnType(dart.nullable(ui.Rect), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handlePointerSignal]: dart.fnType(dart.void, [events.PointerSignalEvent]),
    [_handlePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handlePointerMove]: dart.fnType(dart.void, [events.PointerMoveEvent]),
    [_handlePointerUp]: dart.fnType(dart.void, [events.PointerUpEvent]),
    [_handleDoubleTap$]: dart.fnType(dart.void, []),
    [_getPageViewportRect]: dart.fnType(ui.Rect, []),
    openBookmarkView: dart.fnType(dart.void, []),
    getSelectedTextLines: dart.fnType(core.List$(pdftextline.PdfTextLine), []),
    [_getImages]: dart.fnType(dart.nullable(async.Future$(dart.nullable(core.Map$(core.int, core.List)))), []),
    [_checkMount]: dart.fnType(dart.void, []),
    [_pageChanged]: dart.fnType(dart.void, []),
    [_updateSearchInstance]: dart.fnType(dart.void, [], {isNext: core.bool}, {}),
    [_updateOffsetOnOrientationChange]: dart.fnType(dart.void, [ui.Offset, core.int, core.double]),
    [_calculateSize]: dart.fnType(ui.Size, [box.BoxConstraints, core.double, core.double, core.double]),
    [_updateCurrentPageNumber]: dart.fnType(dart.void, [], {currentOffset: core.double}, {}),
    [_handleTextSelectionDragStarted]: dart.fnType(dart.void, []),
    [_handleTextSelectionDragEnded]: dart.fnType(dart.void, []),
    [_jumpToPage]: dart.fnType(dart.void, [core.int]),
    [_jumpToBookmark]: dart.fnType(dart.void, [dart.nullable(pdf.PdfBookmark)]),
    [_handleDocumentLinkNavigationInvoked]: dart.fnType(dart.void, [core.double]),
    [_clearSelection$]: dart.fnType(core.bool, []),
    [_handleControllerValueChange]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}),
    [_getInstanceInPage]: dart.fnType(core.int, [core.int], {lookForFirst: core.bool}, {}),
    [_jumpToNextInstance]: dart.fnType(dart.nullable(core.int), [core.int]),
    [_jumpToPreviousInstance]: dart.fnType(dart.nullable(core.int), [core.int]),
    [_jumpToSearchInstance]: dart.fnType(dart.void, [], {isNext: core.bool}, {}),
    [_handleTextSearch]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}),
    [_handlePdfOffsetChanged$]: dart.fnType(dart.void, [ui.Offset])
  }));
  dart.setGetterSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getGetters(pdfviewer.SfPdfViewerState.__proto__),
    [_plugin]: pdfviewer_plugin.PdfViewerPlugin,
    [_pdfViewerController]: pdfviewer.PdfViewerController,
    [_viewportConstraints]: box.BoxConstraints,
    isBookmarkViewOpen: core.bool
  }));
  dart.setSetterSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getSetters(pdfviewer.SfPdfViewerState.__proto__),
    [_plugin]: pdfviewer_plugin.PdfViewerPlugin,
    [_pdfViewerController]: pdfviewer.PdfViewerController,
    [_viewportConstraints]: box.BoxConstraints
  }));
  dart.setLibraryUri(pdfviewer.SfPdfViewerState, I[11]);
  dart.setFieldSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getFields(pdfviewer.SfPdfViewerState.__proto__),
    [__SfPdfViewerState__plugin]: dart.fieldType(dart.nullable(pdfviewer_plugin.PdfViewerPlugin)),
    [__SfPdfViewerState__pdfViewerController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [_getPdfFileCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(typed_data.Uint8List))),
    [_pdfDocumentLoadCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(dart.nullable(pdf.PdfDocument)))),
    [_getHeightCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(dart.nullable(core.List)))),
    [_getWidthCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(dart.nullable(core.List)))),
    [_originalHeight]: dart.fieldType(dart.nullable(core.List)),
    [_originalWidth]: dart.fieldType(dart.nullable(core.List)),
    [_maxPdfPageWidth]: dart.fieldType(core.double),
    [_minScale]: dart.finalFieldType(core.double),
    [_maxScale]: dart.finalFieldType(core.double),
    [_isScaleEnabled]: dart.fieldType(core.bool),
    [_isDocumentLoadInitiated]: dart.fieldType(core.bool),
    [_deviceOrientation]: dart.fieldType(dart.nullable(media_query.Orientation)),
    [_viewportWidth]: dart.fieldType(core.double),
    [_offsetBeforeOrientationChange]: dart.fieldType(ui.Offset),
    [__SfPdfViewerState__viewportConstraints]: dart.fieldType(dart.nullable(box.BoxConstraints)),
    [_previousPageNumber]: dart.fieldType(core.int),
    [_document]: dart.fieldType(dart.nullable(pdf.PdfDocument)),
    [_hasError]: dart.fieldType(core.bool),
    [_panEnabled]: dart.fieldType(core.bool),
    [_isMobile]: dart.fieldType(core.bool),
    [_isSearchStarted]: dart.fieldType(core.bool),
    [_isTextSelectionCleared]: dart.fieldType(core.bool),
    [_pdfPages]: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    [_bookmarkKey]: dart.finalFieldType(framework.GlobalKey$(bookmark_view.BookmarkViewControllerState)),
    [_pdfScrollableState]: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)),
    [_pdfPagesKey]: dart.finalFieldType(core.Map$(core.int, framework.GlobalKey$(pdf_page_view.PdfPageViewState))),
    [_textCollection]: dart.fieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    [_pdfTextExtractor]: dart.fieldType(dart.nullable(pdf.PdfTextExtractor)),
    [_maxScrollExtent]: dart.fieldType(core.double),
    [_columnKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_pdfDimension]: dart.fieldType(ui.Size),
    [_isPageChanged]: dart.fieldType(core.bool),
    [_isSearchInitiated]: dart.fieldType(core.bool),
    [_isOverflowed]: dart.fieldType(core.bool),
    [_startPage]: dart.fieldType(core.int),
    [_endPage]: dart.fieldType(core.int),
    [_bufferCount]: dart.fieldType(core.int),
    [_renderedImages]: dart.finalFieldType(core.List$(core.int)),
    [_pdfViewerThemeData$3]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData))
  }));
  var _currentPageNumber = dart.privateName(pdfviewer, "_currentPageNumber");
  var _totalPages = dart.privateName(pdfviewer, "_totalPages");
  var ___ValueChangeNotifier_listener = dart.privateName(pdfviewer, "_#_ValueChangeNotifier#listener");
  var _listeners = dart.privateName(pdfviewer, "_listeners");
  pdfviewer._ValueChangeNotifier = class _ValueChangeNotifier extends core.Object {
    get listener() {
      let t40;
      t40 = this[___ValueChangeNotifier_listener];
      return t40 == null ? dart.throw(new _internal.LateError.fieldNI("listener")) : t40;
    }
    set listener(t40) {
      this[___ValueChangeNotifier_listener] = t40;
    }
    addListener(listener) {
      this[_listeners].add(listener);
    }
    removeListener(listener) {
      this[_listeners].remove(listener);
    }
    notifyPropertyChangedListeners(opts) {
      let t42;
      let property = opts && 'property' in opts ? opts.property : null;
      for (let t41 of this[_listeners]) {
        this.listener = t41;
        t42 = property;
        this.listener({property: t42});
      }
    }
  };
  (pdfviewer._ValueChangeNotifier.new = function() {
    this[___ValueChangeNotifier_listener] = null;
    this[_listeners] = new (T.ObserverListOf__Tovoid()).new();
    ;
  }).prototype = pdfviewer._ValueChangeNotifier.prototype;
  dart.addTypeTests(pdfviewer._ValueChangeNotifier);
  dart.addTypeCaches(pdfviewer._ValueChangeNotifier);
  dart.setMethodSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getMethods(pdfviewer._ValueChangeNotifier.__proto__),
    addListener: dart.fnType(dart.void, [dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})]),
    removeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})]),
    notifyPropertyChangedListeners: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getGetters(pdfviewer._ValueChangeNotifier.__proto__),
    listener: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setSetterSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getSetters(pdfviewer._ValueChangeNotifier.__proto__),
    listener: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(pdfviewer._ValueChangeNotifier, I[11]);
  dart.setFieldSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getFields(pdfviewer._ValueChangeNotifier.__proto__),
    [___ValueChangeNotifier_listener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}))),
    [_listeners]: dart.finalFieldType(observer_list.ObserverList$(dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})))
  }));
  pdfviewer.PdfViewerController = class PdfViewerController extends pdfviewer._ValueChangeNotifier {
    set [_pageNumber](num) {
      this[_currentPageNumber] = num;
      this.notifyPropertyChangedListeners({property: "pageChanged"});
    }
    set [_pageCount](pageCount) {
      this[_totalPages] = pageCount;
      this.notifyPropertyChangedListeners({property: "pageCount"});
    }
    get scrollOffset() {
      return new ui.Offset.new(this[_scrollPositionX], this[_scrollPositionY]);
    }
    get zoomLevel() {
      return this[_zoomLevel];
    }
    set zoomLevel(newValue) {
      if (this[_zoomLevel] === newValue) {
        return;
      }
      this[_zoomLevel] = newValue;
      this.notifyPropertyChangedListeners({property: "zoomLevel"});
    }
    get pageNumber() {
      return this[_currentPageNumber];
    }
    get pageCount() {
      return this[_totalPages];
    }
    jumpToBookmark(bookmark) {
      this[_pdfBookmark] = bookmark;
      this.notifyPropertyChangedListeners({property: "jumpToBookmark"});
    }
    jumpTo(opts) {
      let xOffset = opts && 'xOffset' in opts ? opts.xOffset : 0;
      let yOffset = opts && 'yOffset' in opts ? opts.yOffset : 0;
      this[_horizontalOffset] = xOffset;
      this[_verticalOffset] = yOffset;
      this.notifyPropertyChangedListeners({property: "jumpTo"});
    }
    jumpToPage(pageNumber) {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.jumpToPage, {index: pageNumber});
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    previousPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.previousPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    nextPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.nextPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    firstPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.firstPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    lastPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.lastPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    searchText(searchText, opts) {
      let searchOption = opts && 'searchOption' in opts ? opts.searchOption : null;
      return async.async(pdfviewer.PdfTextSearchResult, (function* searchText$() {
        this[_searchText] = searchText;
        this[_textSearchOption] = searchOption;
        this.notifyPropertyChangedListeners({property: "searchText"});
        return this[_pdfTextSearchResult];
      }).bind(this));
    }
    clearSelection() {
      this.notifyPropertyChangedListeners({property: "clearTextSelection"});
      return this[_clearTextSelection];
    }
    [_reset]() {
      this[_zoomLevel] = 1.0;
      this[_currentPageNumber] = 0;
      this[_totalPages] = 0;
      this[_verticalOffset] = 0.0;
      this[_horizontalOffset] = 0.0;
      this[_pageNavigator] = null;
      this[_pdfBookmark] = null;
      this[_searchText] = "";
      this.notifyPropertyChangedListeners();
    }
  };
  (pdfviewer.PdfViewerController.new = function() {
    this[_zoomLevel] = 1.0;
    this[_currentPageNumber] = 0;
    this[_totalPages] = 0;
    this[_searchText] = "";
    this[_textSearchOption] = null;
    this[_pdfBookmark] = null;
    this[_pdfTextSearchResult] = new pdfviewer.PdfTextSearchResult.new();
    this[_verticalOffset] = 0.0;
    this[_horizontalOffset] = 0.0;
    this[_pageNavigator] = null;
    this[_clearTextSelection] = false;
    this[_scrollPositionX] = 0.0;
    this[_scrollPositionY] = 0.0;
    pdfviewer.PdfViewerController.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.PdfViewerController.prototype;
  dart.addTypeTests(pdfviewer.PdfViewerController);
  dart.addTypeCaches(pdfviewer.PdfViewerController);
  dart.setMethodSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getMethods(pdfviewer.PdfViewerController.__proto__),
    jumpToBookmark: dart.fnType(dart.void, [pdf.PdfBookmark]),
    jumpTo: dart.fnType(dart.void, [], {xOffset: core.double, yOffset: core.double}, {}),
    jumpToPage: dart.fnType(dart.void, [core.int]),
    previousPage: dart.fnType(dart.void, []),
    nextPage: dart.fnType(dart.void, []),
    firstPage: dart.fnType(dart.void, []),
    lastPage: dart.fnType(dart.void, []),
    searchText: dart.fnType(async.Future$(pdfviewer.PdfTextSearchResult), [core.String], {searchOption: dart.nullable(pdf.TextSearchOption)}, {}),
    clearSelection: dart.fnType(core.bool, []),
    [_reset]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getGetters(pdfviewer.PdfViewerController.__proto__),
    scrollOffset: ui.Offset,
    zoomLevel: core.double,
    pageNumber: core.int,
    pageCount: core.int
  }));
  dart.setSetterSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getSetters(pdfviewer.PdfViewerController.__proto__),
    [_pageNumber]: core.int,
    [_pageCount]: core.int,
    zoomLevel: core.double
  }));
  dart.setLibraryUri(pdfviewer.PdfViewerController, I[11]);
  dart.setFieldSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getFields(pdfviewer.PdfViewerController.__proto__),
    [_zoomLevel]: dart.fieldType(core.double),
    [_currentPageNumber]: dart.fieldType(core.int),
    [_totalPages]: dart.fieldType(core.int),
    [_searchText]: dart.fieldType(core.String),
    [_textSearchOption]: dart.fieldType(dart.nullable(pdf.TextSearchOption)),
    [_pdfBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_pdfTextSearchResult]: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    [_verticalOffset]: dart.fieldType(core.double),
    [_horizontalOffset]: dart.fieldType(core.double),
    [_pageNavigator]: dart.fieldType(dart.nullable(pagination.Pagination)),
    [_clearTextSelection]: dart.fieldType(core.bool),
    [_scrollPositionX]: dart.fieldType(core.double),
    [_scrollPositionY]: dart.fieldType(core.double)
  }));
  var _currentInstanceIndex = dart.privateName(pdfviewer, "_currentInstanceIndex");
  var _hasResult = dart.privateName(pdfviewer, "_hasResult");
  pdfviewer.PdfTextSearchResult = class PdfTextSearchResult extends pdfviewer._ValueChangeNotifier {
    set [_currentOccurrenceIndex](num) {
      this[_currentInstanceIndex] = num;
      this.notifyPropertyChangedListeners({property: "currentInstance"});
    }
    get currentInstanceIndex() {
      return this[_currentInstanceIndex];
    }
    set [_totalSearchTextCount](totalInstanceCount) {
      this[_totalInstanceCount] = totalInstanceCount;
      this.notifyPropertyChangedListeners({property: "totalInstance"});
    }
    get totalInstanceCount() {
      return this[_totalInstanceCount];
    }
    [_updateResult](hasResult) {
      this[_hasResult] = hasResult;
      this.notifyPropertyChangedListeners({property: "result"});
    }
    get hasResult() {
      return this[_hasResult];
    }
    nextInstance() {
      this.notifyPropertyChangedListeners({property: "nextInstance"});
    }
    previousInstance() {
      this.notifyPropertyChangedListeners({property: "previousInstance"});
    }
    clear() {
      this.notifyPropertyChangedListeners({property: "clear"});
    }
  };
  (pdfviewer.PdfTextSearchResult.new = function() {
    this[_currentInstanceIndex] = 0;
    this[_totalInstanceCount] = 0;
    this[_hasResult] = false;
    pdfviewer.PdfTextSearchResult.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.PdfTextSearchResult.prototype;
  dart.addTypeTests(pdfviewer.PdfTextSearchResult);
  dart.addTypeCaches(pdfviewer.PdfTextSearchResult);
  dart.setMethodSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getMethods(pdfviewer.PdfTextSearchResult.__proto__),
    [_updateResult]: dart.fnType(dart.void, [core.bool]),
    nextInstance: dart.fnType(dart.void, []),
    previousInstance: dart.fnType(dart.void, []),
    clear: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getGetters(pdfviewer.PdfTextSearchResult.__proto__),
    currentInstanceIndex: core.int,
    totalInstanceCount: core.int,
    hasResult: core.bool
  }));
  dart.setSetterSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getSetters(pdfviewer.PdfTextSearchResult.__proto__),
    [_currentOccurrenceIndex]: core.int,
    [_totalSearchTextCount]: core.int
  }));
  dart.setLibraryUri(pdfviewer.PdfTextSearchResult, I[11]);
  dart.setFieldSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getFields(pdfviewer.PdfTextSearchResult.__proto__),
    [_currentInstanceIndex]: dart.fieldType(core.int),
    [_totalInstanceCount]: dart.fieldType(core.int),
    [_hasResult]: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart", {
    "package:syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart": pdf_provider,
    "package:syncfusion_flutter_pdfviewer/src/bookmark/bookmark_view.dart": bookmark_view,
    "package:syncfusion_flutter_pdfviewer/src/control/pdfviewer_canvas.dart": pdfviewer_canvas,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_status.dart": scroll_status,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head.dart": scroll_head,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head_overlay.dart": scroll_head_overlay,
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_scrollable.dart": pdf_scrollable,
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_page_view.dart": pdf_page_view,
    "package:syncfusion_flutter_pdfviewer/src/pdfviewer.dart": pdfviewer,
    "package:syncfusion_flutter_pdfviewer/pdfviewer.dart": pdfviewer$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["pdf_provider.dart","../bookmark/bookmark_view.dart","../control/pdfviewer_canvas.dart","../control/scroll_status.dart","../control/scroll_head.dart","../control/scroll_head_overlay.dart","../control/pdf_scrollable.dart","../control/pdf_page_view.dart","../pdfviewer.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"../../../../../../../../../packages/syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart.lib.js"}');
  // Exports:
  return {
    src__common__pdf_provider: pdf_provider,
    src__bookmark__bookmark_view: bookmark_view,
    src__control__pdfviewer_canvas: pdfviewer_canvas,
    src__control__scroll_status: scroll_status,
    src__control__scroll_head: scroll_head,
    src__control__scroll_head_overlay: scroll_head_overlay,
    src__control__pdf_scrollable: pdf_scrollable,
    src__control__pdf_page_view: pdf_page_view,
    src__pdfviewer: pdfviewer,
    pdfviewer: pdfviewer$
  };
}));

//# sourceMappingURL=pdf_provider.dart.lib.js.map
