define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/gestures/scale.dart', 'packages/flutter/src/widgets/interactive_viewer.dart'], (function load__packages__syncfusion_flutter_pdfviewer__src__control__interactive_scrollable_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__gestures__scale$46dart, packages__flutter__src__widgets__interactive_viewer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const scale = packages__flutter__src__gestures__scale$46dart.src__gestures__scale;
  const interactive_viewer = packages__flutter__src__widgets__interactive_viewer$46dart.src__widgets__interactive_viewer;
  var interactive_scrollable = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.hardEdge",
        index: 1
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 7,
        [_Location_line]: 137,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 7,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constrained",
        [_Location_column]: 7,
        [_Location_line]: 139,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionStart",
        [_Location_column]: 7,
        [_Location_line]: 140,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionUpdate",
        [_Location_column]: 7,
        [_Location_line]: 141,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionEnd",
        [_Location_column]: 7,
        [_Location_line]: 142,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 7,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "panEnabled",
        [_Location_column]: 7,
        [_Location_line]: 144,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignPanAxis",
        [_Location_column]: 7,
        [_Location_line]: 145,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformationController",
        [_Location_column]: 7,
        [_Location_line]: 146,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "boundaryMargin",
        [_Location_column]: 7,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 148,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 149,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.constList([C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16], widget_inspector._Location);
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[3] || CT.C3,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 136,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.2.60-beta/lib/src/control/interactive_scrollable.dart"
      });
    }
  }, false);
  var C = Array(17).fill(void 0);
  var I = ["package:syncfusion_flutter_pdfviewer/src/control/interactive_scrollable.dart"];
  var constrained$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.constrained");
  var clipBehavior$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.clipBehavior");
  var alignPanAxis$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.alignPanAxis");
  var boundaryMargin$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.boundaryMargin");
  var child$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.child");
  var panEnabled$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.panEnabled");
  var scaleEnabled$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.scaleEnabled");
  var maxScale$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.maxScale");
  var minScale$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.minScale");
  var onInteractionStart$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.onInteractionStart");
  var onInteractionUpdate$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.onInteractionUpdate");
  var onInteractionEnd$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.onInteractionEnd");
  var transformationController$ = dart.privateName(interactive_scrollable, "InteractiveScrollable.transformationController");
  var _name = dart.privateName(ui, "_name");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  interactive_scrollable.InteractiveScrollable = class InteractiveScrollable extends framework.StatefulWidget {
    get constrained() {
      return this[constrained$];
    }
    set constrained(value) {
      super.constrained = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get alignPanAxis() {
      return this[alignPanAxis$];
    }
    set alignPanAxis(value) {
      super.alignPanAxis = value;
    }
    get boundaryMargin() {
      return this[boundaryMargin$];
    }
    set boundaryMargin(value) {
      super.boundaryMargin = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get panEnabled() {
      return this[panEnabled$];
    }
    set panEnabled(value) {
      super.panEnabled = value;
    }
    get scaleEnabled() {
      return this[scaleEnabled$];
    }
    set scaleEnabled(value) {
      super.scaleEnabled = value;
    }
    get maxScale() {
      return this[maxScale$];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get minScale() {
      return this[minScale$];
    }
    set minScale(value) {
      super.minScale = value;
    }
    get onInteractionStart() {
      return this[onInteractionStart$];
    }
    set onInteractionStart(value) {
      super.onInteractionStart = value;
    }
    get onInteractionUpdate() {
      return this[onInteractionUpdate$];
    }
    set onInteractionUpdate(value) {
      super.onInteractionUpdate = value;
    }
    get onInteractionEnd() {
      return this[onInteractionEnd$];
    }
    set onInteractionEnd(value) {
      super.onInteractionEnd = value;
    }
    get transformationController() {
      return this[transformationController$];
    }
    set transformationController(value) {
      super.transformationController = value;
    }
    createState() {
      return new interactive_scrollable._InteractiveScrollableState.new();
    }
  };
  (interactive_scrollable.InteractiveScrollable.new = function(child, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[0] || CT.C0;
    let alignPanAxis = opts && 'alignPanAxis' in opts ? opts.alignPanAxis : false;
    let boundaryMargin = opts && 'boundaryMargin' in opts ? opts.boundaryMargin : C[1] || CT.C1;
    let maxScale = opts && 'maxScale' in opts ? opts.maxScale : 3;
    let minScale = opts && 'minScale' in opts ? opts.minScale : 1;
    let onInteractionStart = opts && 'onInteractionStart' in opts ? opts.onInteractionStart : null;
    let onInteractionUpdate = opts && 'onInteractionUpdate' in opts ? opts.onInteractionUpdate : null;
    let onInteractionEnd = opts && 'onInteractionEnd' in opts ? opts.onInteractionEnd : null;
    let panEnabled = opts && 'panEnabled' in opts ? opts.panEnabled : true;
    let scaleEnabled = opts && 'scaleEnabled' in opts ? opts.scaleEnabled : true;
    let constrained = opts && 'constrained' in opts ? opts.constrained : true;
    let transformationController = opts && 'transformationController' in opts ? opts.transformationController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[clipBehavior$] = clipBehavior;
    this[alignPanAxis$] = alignPanAxis;
    this[boundaryMargin$] = boundaryMargin;
    this[maxScale$] = maxScale;
    this[minScale$] = minScale;
    this[onInteractionStart$] = onInteractionStart;
    this[onInteractionUpdate$] = onInteractionUpdate;
    this[onInteractionEnd$] = onInteractionEnd;
    this[panEnabled$] = panEnabled;
    this[scaleEnabled$] = scaleEnabled;
    this[constrained$] = constrained;
    this[transformationController$] = transformationController;
    interactive_scrollable.InteractiveScrollable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = interactive_scrollable.InteractiveScrollable.prototype;
  dart.addTypeTests(interactive_scrollable.InteractiveScrollable);
  dart.addTypeCaches(interactive_scrollable.InteractiveScrollable);
  dart.setMethodSignature(interactive_scrollable.InteractiveScrollable, () => ({
    __proto__: dart.getMethods(interactive_scrollable.InteractiveScrollable.__proto__),
    createState: dart.fnType(interactive_scrollable._InteractiveScrollableState, [])
  }));
  dart.setLibraryUri(interactive_scrollable.InteractiveScrollable, I[0]);
  dart.setFieldSignature(interactive_scrollable.InteractiveScrollable, () => ({
    __proto__: dart.getFields(interactive_scrollable.InteractiveScrollable.__proto__),
    constrained: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    alignPanAxis: dart.finalFieldType(core.bool),
    boundaryMargin: dart.finalFieldType(edge_insets.EdgeInsets),
    child: dart.finalFieldType(framework.Widget),
    panEnabled: dart.finalFieldType(core.bool),
    scaleEnabled: dart.finalFieldType(core.bool),
    maxScale: dart.finalFieldType(core.double),
    minScale: dart.finalFieldType(core.double),
    onInteractionStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleStartDetails]))),
    onInteractionUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleUpdateDetails]))),
    onInteractionEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleEndDetails]))),
    transformationController: dart.finalFieldType(dart.nullable(interactive_viewer.TransformationController))
  }));
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  interactive_scrollable._InteractiveScrollableState = class _InteractiveScrollableState extends framework.State$(interactive_scrollable.InteractiveScrollable) {
    build(context) {
      return new interactive_viewer.InteractiveViewer.new({minScale: this.widget.minScale, maxScale: this.widget.maxScale, constrained: this.widget.constrained, onInteractionStart: this.widget.onInteractionStart, onInteractionUpdate: this.widget.onInteractionUpdate, onInteractionEnd: this.widget.onInteractionEnd, scaleEnabled: this.widget.scaleEnabled, panEnabled: this.widget.panEnabled, alignPanAxis: this.widget.alignPanAxis, transformationController: this.widget.transformationController, boundaryMargin: this.widget.boundaryMargin, clipBehavior: this.widget.clipBehavior, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[2] || CT.C2});
    }
  };
  (interactive_scrollable._InteractiveScrollableState.new = function() {
    interactive_scrollable._InteractiveScrollableState.__proto__.new.call(this);
    ;
  }).prototype = interactive_scrollable._InteractiveScrollableState.prototype;
  dart.addTypeTests(interactive_scrollable._InteractiveScrollableState);
  dart.addTypeCaches(interactive_scrollable._InteractiveScrollableState);
  dart.setMethodSignature(interactive_scrollable._InteractiveScrollableState, () => ({
    __proto__: dart.getMethods(interactive_scrollable._InteractiveScrollableState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(interactive_scrollable._InteractiveScrollableState, I[0]);
  dart.trackLibraries("packages/syncfusion_flutter_pdfviewer/src/control/interactive_scrollable.dart", {
    "package:syncfusion_flutter_pdfviewer/src/control/interactive_scrollable.dart": interactive_scrollable
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["interactive_scrollable.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6Ba;;;;;;IAOA;;;;;;IAaA;;;;;;IAgBM;;;;;;IAKJ;;;;;;IASF;;;;;;IASA;;;;;;IASE;;;;;;IAeA;;;;;;IAGoB;;;;;;IAGC;;;;;;IAGH;;;;;;IAIC;;;;;;;AAGa;IAA6B;;+DA1HzC;QACvB;QACD;QACA;QACA;QAGA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAfwB;IAExB;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACH,gFAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgHK;AACxB,YAAO,yDACK,AAAO,gCACP,AAAO,mCACJ,AAAO,6CACA,AAAO,qDACN,AAAO,mDACV,AAAO,4CACX,AAAO,sCACT,AAAO,sCACL,AAAO,oDACK,AAAO,sDACjB,AAAO,0CACT,AAAO,iCACd,AAAO;IAElB;;;;;EACF","file":"../../../../../../../../../packages/syncfusion_flutter_pdfviewer/src/control/interactive_scrollable.dart.lib.js"}');
  // Exports:
  return {
    src__control__interactive_scrollable: interactive_scrollable
  };
}));

//# sourceMappingURL=interactive_scrollable.dart.lib.js.map
